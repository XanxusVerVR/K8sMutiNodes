    master1: SSH address: 127.0.0.1:2200
    master1: SSH username: vagrant
    master1: SSH auth method: private key
    master1:
    master1: Vagrant insecure key detected. Vagrant will automatically replace
    master1: this with a newly generated keypair for better security.
    master1:
    master1: Inserting generated public key within guest...
    master1: Removing insecure key from the guest if it's present...
    master1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> master1: Machine booted and ready!
==> master1: Checking for guest additions in VM...
    master1: No guest additions were detected on the base box for this VM! Guest
    master1: additions are required for forwarded ports, shared folders, host only
    master1: networking, and more. If SSH fails on this machine, please install
    master1: the guest additions and repackage the box to continue.
    master1:
    master1: This is not an error message; everything may continue to work properly,
    master1: in which case you may ignore this message.
==> master1: Setting hostname...
==> master1: Configuring and enabling network interfaces...
==> master2: Importing base box 'centos/7'...
==> master2: Matching MAC address for NAT networking...
==> master2: Checking if box 'centos/7' version '2004.01' is up to date...
==> master2: Setting the name of the VM: K8sMutiNodes_master2_1602812984561_38763
==> master2: Fixed port collision for 22 => 2222. Now on port 2201.
==> master2: Clearing any previously set network interfaces...
==> master2: Preparing network interfaces based on configuration...
    master2: Adapter 1: nat
    master2: Adapter 2: hostonly
==> master2: Forwarding ports...
    master2: 22 (guest) => 2201 (host) (adapter 1)
==> master2: Running 'pre-boot' VM customizations...
==> master2: Booting VM...
==> master2: Waiting for machine to boot. This may take a few minutes...
    master2: SSH address: 127.0.0.1:2201
    master2: SSH username: vagrant
    master2: SSH auth method: private key
    master2:
    master2: Vagrant insecure key detected. Vagrant will automatically replace
    master2: this with a newly generated keypair for better security.
    master2:
    master2: Inserting generated public key within guest...
    master2: Removing insecure key from the guest if it's present...
    master2: Key inserted! Disconnecting and reconnecting using new SSH key...
==> master2: Machine booted and ready!
==> master2: Checking for guest additions in VM...
    master2: No guest additions were detected on the base box for this VM! Guest
    master2: additions are required for forwarded ports, shared folders, host only
    master2: networking, and more. If SSH fails on this machine, please install
    master2: the guest additions and repackage the box to continue.
    master2:
    master2: This is not an error message; everything may continue to work properly,
    master2: in which case you may ignore this message.
==> master2: Setting hostname...
==> master2: Configuring and enabling network interfaces...
==> master3: Importing base box 'centos/7'...
==> master3: Matching MAC address for NAT networking...
==> master3: Checking if box 'centos/7' version '2004.01' is up to date...
==> master3: Setting the name of the VM: K8sMutiNodes_master3_1602813017540_94477
==> master3: Fixed port collision for 22 => 2222. Now on port 2202.
==> master3: Clearing any previously set network interfaces...
==> master3: Preparing network interfaces based on configuration...
    master3: Adapter 1: nat
    master3: Adapter 2: hostonly
==> master3: Forwarding ports...
    master3: 22 (guest) => 2202 (host) (adapter 1)
==> master3: Running 'pre-boot' VM customizations...
==> master3: Booting VM...
==> master3: Waiting for machine to boot. This may take a few minutes...
    master3: SSH address: 127.0.0.1:2202
    master3: SSH username: vagrant
    master3: SSH auth method: private key
    master3:
    master3: Vagrant insecure key detected. Vagrant will automatically replace
    master3: this with a newly generated keypair for better security.
    master3:
    master3: Inserting generated public key within guest...
    master3: Removing insecure key from the guest if it's present...
    master3: Key inserted! Disconnecting and reconnecting using new SSH key...
==> master3: Machine booted and ready!
==> master3: Checking for guest additions in VM...
    master3: No guest additions were detected on the base box for this VM! Guest
    master3: additions are required for forwarded ports, shared folders, host only
    master3: networking, and more. If SSH fails on this machine, please install
    master3: the guest additions and repackage the box to continue.
    master3:
    master3: This is not an error message; everything may continue to work properly,
    master3: in which case you may ignore this message.
==> master3: Setting hostname...
==> master3: Configuring and enabling network interfaces...

C:\Users\xanxus.dai\Desktop\K8sMutiNodes>vagrant snapshot save mainmachine init
==> mainmachine: Snapshotting the machine as 'init'...
==> mainmachine: Snapshot saved! You can restore the snapshot at any time by
==> mainmachine: using `vagrant snapshot restore`. You can delete it using
==> mainmachine: `vagrant snapshot delete`.

C:\Users\xanxus.dai\Desktop\K8sMutiNodes>vagrant ssh mainmachine
Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-121-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Oct 16 01:51:46 UTC 2020

  System load:  0.11              Processes:             96
  Usage of /:   22.5% of 9.63GB   Users logged in:       0
  Memory usage: 12%               IP address for enp0s3: 10.0.2.15
  Swap usage:   0%                IP address for enp0s8: 10.1.7.189


5 packages can be updated.
5 updates are security updates.

New release '20.04.1 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


➜  ~ cat .ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCca2LXplkujHrIdkp9vHsHsuwl4sXllAVdaPTAE3KAjNHQrZ4Y3AS7yu/JwT4ck9+yr8nj2EcTc3zpL2v5j2Ao7uAol7mn8nzIGDSrmrRutRBUOqnO1JNbRqTwKGIxjEJ4tyv02u/fDhHRRRByy+H3QyrPcwQ4uZxx5orXZx5l5TisWa036HIreVdrh4yCqRNZa9TeVdWRCkVh8ORVb4Y3Tktku4KRpN0SbHOxB5BukI9FEVtV0nA5g0XbWfZlaIXMXRgqrN2+3org/tH0FZrgLABBp/nXQ0eY5hAx3fZpF0mQvYiAIuADEQwKjROYaZwP9l5XE59BWORQ1nly89xh vagrant@k8s-mainmachine
➜  ~ vim kubespray/inventory/mycluster/inventory.ini
➜  ~ vim kubespray/inventory/mycluster/group_vars/k8s-cluster/addons.yml
➜  ~
➜  ~
➜  ~ cat .ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCca2LXplkujHrIdkp9vHsHsuwl4sXllAVdaPTAE3KAjNHQrZ4Y3AS7yu/JwT4ck9+yr8nj2EcTc3zpL2v5j2Ao7uAol7mn8nzIGDSrmrRutRBUOqnO1JNbRqTwKGIxjEJ4tyv02u/fDhHRRRByy+H3QyrPcwQ4uZxx5orXZx5l5TisWa036HIreVdrh4yCqRNZa9TeVdWRCkVh8ORVb4Y3Tktku4KRpN0SbHOxB5BukI9FEVtV0nA5g0XbWfZlaIXMXRgqrN2+3org/tH0FZrgLABBp/nXQ0eY5hAx3fZpF0mQvYiAIuADEQwKjROYaZwP9l5XE59BWORQ1nly89xh vagrant@k8s-mainmachine
➜  ~ ssh root@10.1.7.152
The authenticity of host '10.1.7.152 (10.1.7.152)' can't be established.
ECDSA key fingerprint is SHA256:eGUcVYKRmLdvrkE06bSLnOVWZaLagesRkyDuzMnmxsc.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '10.1.7.152' (ECDSA) to the list of known hosts.
Last login: Fri Oct 16 01:51:52 2020
[root@k8s-master1 ~]#
[root@k8s-master1 ~]#
[root@k8s-master1 ~]#
[root@k8s-master1 ~]# exit
logout
Connection to 10.1.7.152 closed.
➜  ~
➜  ~ cd kubespray
➜  kubespray git:(release-2.12) sudo pip3 install -r requirements.txt
The directory '/home/vagrant/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/home/vagrant/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
Requirement already satisfied: ansible==2.7.16 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 1))
Requirement already satisfied: jinja2==2.10.1 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 2))
Requirement already satisfied: netaddr==0.7.19 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 3))
Requirement already satisfied: pbr==5.2.0 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 4))
Requirement already satisfied: hvac==0.8.2 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 5))
Requirement already satisfied: jmespath==0.9.4 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 6))
Requirement already satisfied: ruamel.yaml==0.15.96 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 7))
Requirement already satisfied: PyYAML in /usr/lib/python3/dist-packages (from ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: cryptography in /usr/lib/python3/dist-packages (from ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: paramiko in /usr/local/lib/python3.6/dist-packages (from ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: MarkupSafe>=0.23 in /usr/lib/python3/dist-packages (from jinja2==2.10.1->-r requirements.txt (line 2))
Requirement already satisfied: requests>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from hvac==0.8.2->-r requirements.txt (line 5))
Requirement already satisfied: pynacl>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from paramiko->ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: bcrypt>=3.1.3 in /usr/local/lib/python3.6/dist-packages (from paramiko->ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: certifi>=2017.4.17 in /usr/lib/python3/dist-packages (from requests>=2.21.0->hvac==0.8.2->-r requirements.txt (line 5))
Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/lib/python3/dist-packages (from requests>=2.21.0->hvac==0.8.2->-r requirements.txt (line 5))
Requirement already satisfied: idna<3,>=2.5 in /usr/lib/python3/dist-packages (from requests>=2.21.0->hvac==0.8.2->-r requirements.txt (line 5))
Requirement already satisfied: chardet<4,>=3.0.2 in /usr/lib/python3/dist-packages (from requests>=2.21.0->hvac==0.8.2->-r requirements.txt (line 5))
Requirement already satisfied: cffi>=1.4.1 in /usr/local/lib/python3.6/dist-packages (from pynacl>=1.0.1->paramiko->ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: six in /usr/lib/python3/dist-packages (from pynacl>=1.0.1->paramiko->ansible==2.7.16->-r requirements.txt (line 1))
Requirement already satisfied: pycparser in /usr/local/lib/python3.6/dist-packages (from cffi>=1.4.1->pynacl>=1.0.1->paramiko->ansible==2.7.16->-r requirements.txt (line 1))
➜  kubespray git:(release-2.12) pip install netaddr
Collecting netaddr
  Using cached https://files.pythonhosted.org/packages/ff/cd/9cdfea8fc45c56680b798db6a55fa60a22e2d3d3ccf54fc729d083b50ce4/netaddr-0.8.0-py2.py3-none-any.whl
Collecting importlib-resources; python_version < "3.7" (from netaddr)
  Using cached https://files.pythonhosted.org/packages/ba/03/0f9595c0c2ef12590877f3c47e5f579759ce5caf817f8256d5dcbd8a1177/importlib_resources-3.0.0-py2.py3-none-any.whl
Collecting typing; python_version < "3.5" (from importlib-resources; python_version < "3.7"->netaddr)
  Using cached https://files.pythonhosted.org/packages/3b/c0/e44213fcb799eac02881e2485724ba5b0914600bc9df6ed922e364fdc059/typing-3.7.4.3-py2-none-any.whl
Collecting contextlib2; python_version < "3" (from importlib-resources; python_version < "3.7"->netaddr)
  Using cached https://files.pythonhosted.org/packages/85/60/370352f7ef6aa96c52fb001831622f50f923c1d575427d021b8ab3311236/contextlib2-0.6.0.post1-py2.py3-none-any.whl
Collecting pathlib2; python_version < "3" (from importlib-resources; python_version < "3.7"->netaddr)
  Using cached https://files.pythonhosted.org/packages/e9/45/9c82d3666af4ef9f221cbb954e1d77ddbb513faf552aea6df5f37f1a4859/pathlib2-2.3.5-py2.py3-none-any.whl
Collecting zipp>=0.4; python_version < "3.8" (from importlib-resources; python_version < "3.7"->netaddr)
  Using cached https://files.pythonhosted.org/packages/96/0a/67556e9b7782df7118c1f49bdc494da5e5e429c93aa77965f33e81287c8c/zipp-1.2.0-py2.py3-none-any.whl
Collecting singledispatch; python_version < "3.4" (from importlib-resources; python_version < "3.7"->netaddr)
  Using cached https://files.pythonhosted.org/packages/c5/10/369f50bcd4621b263927b0a1519987a04383d4a98fb10438042ad410cf88/singledispatch-3.4.0.3-py2.py3-none-any.whl
Collecting six (from pathlib2; python_version < "3"->importlib-resources; python_version < "3.7"->netaddr)
  Using cached https://files.pythonhosted.org/packages/ee/ff/48bde5c0f013094d729fe4b0316ba2a24774b3ff1c52d924a8a4cb04078a/six-1.15.0-py2.py3-none-any.whl
Collecting scandir; python_version < "3.5" (from pathlib2; python_version < "3"->importlib-resources; python_version < "3.7"->netaddr)
Installing collected packages: typing, contextlib2, six, scandir, pathlib2, zipp, singledispatch, importlib-resources, netaddr
Successfully installed contextlib2-0.6.0.post1 importlib-resources-3.0.0 netaddr-0.8.0 pathlib2-2.3.5 scandir-1.10.0 singledispatch-3.4.0.3 six-1.15.0 typing-3.7.4.3 zipp-1.2.0
➜  kubespray git:(release-2.12) CONFIG_FILE=inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py 10.1.7.152
DEBUG: Adding group all
DEBUG: Adding group kube-master
DEBUG: Adding group kube-node
DEBUG: Adding group etcd
DEBUG: Adding group k8s-cluster
DEBUG: Adding group calico-rr
DEBUG: Skipping existing host 10.1.7.152.
DEBUG: adding host node1 to group all
DEBUG: adding host node2 to group all
DEBUG: adding host node3 to group all
DEBUG: adding host node1 to group etcd
DEBUG: adding host node2 to group etcd
DEBUG: adding host node3 to group etcd
DEBUG: adding host node1 to group kube-master
DEBUG: adding host node2 to group kube-master
DEBUG: adding host node1 to group kube-node
DEBUG: adding host node2 to group kube-node
DEBUG: adding host node3 to group kube-node
➜  kubespray git:(release-2.12) vim inventory/mycluster
➜  kubespray git:(release-2.12) vim inventory/mycluster/hosts.yaml
➜  kubespray git:(release-2.12) cd inventory/mycluster
➜  mycluster git:(release-2.12) ls
group_vars  hosts.yaml  inventory.ini
➜  mycluster git:(release-2.12) rm -rf hosts.yaml
➜  mycluster git:(release-2.12) cd
➜  ~ cd kubespray
➜  kubespray git:(release-2.12) CONFIG_FILE=inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py 10.1.7.152
DEBUG: Adding group all
DEBUG: Adding group kube-master
DEBUG: Adding group kube-node
DEBUG: Adding group etcd
DEBUG: Adding group k8s-cluster
DEBUG: Adding group calico-rr
DEBUG: adding host node1 to group all
DEBUG: adding host node1 to group etcd
DEBUG: adding host node1 to group kube-master
DEBUG: adding host node1 to group kube-node
➜  kubespray git:(release-2.12) cd inventory/mycluster
➜  mycluster git:(release-2.12) ls
group_vars  hosts.yaml  inventory.ini
➜  mycluster git:(release-2.12) vim hosts.yaml
➜  mycluster git:(release-2.12) vim inventory.ini
➜  mycluster git:(release-2.12) ls
group_vars  hosts.yaml  inventory.ini
➜  mycluster git:(release-2.12)
➜  mycluster git:(release-2.12) cd
➜  ~ cd kubespray
➜  kubespray git:(release-2.12) ansible-playbook -i inventory/mycluster/inventory.ini --become --become-user=root cluster.yml -b -v
Using /home/vagrant/kubespray/ansible.cfg as config file
/home/vagrant/kubespray/inventory/mycluster/inventory.ini did not meet host_list requirements, check plugin documentation if this is unexpected
/home/vagrant/kubespray/inventory/mycluster/inventory.ini did not meet script requirements, check plugin documentation if this is unexpected
/home/vagrant/kubespray/inventory/mycluster/inventory.ini did not meet yaml requirements, check plugin documentation if this is unexpected

PLAY [localhost] *******************************************************************************************************

TASK [Check ansible version >=2.7.8] ***********************************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.074)       0:00:00.074 ********
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
 [WARNING]: Could not match supplied host pattern, ignoring: bastion


PLAY [bastion[0]] ******************************************************************************************************
skipping: no hosts matched

PLAY [k8s-cluster:etcd] ************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.054)       0:00:00.128 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.024)       0:00:00.153 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.024)       0:00:00.177 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.024)       0:00:00.202 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.028)       0:00:00.231 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.029)       0:00:00.261 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.028)       0:00:00.289 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.025)       0:00:00.315 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.025)       0:00:00.341 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.027)       0:00:00.368 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.024)       0:00:00.393 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.024)       0:00:00.417 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.075)       0:00:00.492 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.069)       0:00:00.562 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [bootstrap-os : Fetch /etc/os-release] ****************************************************************************
Friday 16 October 2020  01:58:12 +0000 (0:00:00.041)       0:00:00.604 ********
ok: [test1] => {"changed": false, "rc": 0, "stderr": "Warning: Permanently added '10.1.7.152' (ECDSA) to the list of known hosts.\r\nShared connection to 10.1.7.152 closed.\r\n", "stderr_lines": ["Warning: Permanently added '10.1.7.152' (ECDSA) to the list of known hosts.", "Shared connection to 10.1.7.152 closed."], "stdout": "NAME=\"CentOS Linux\"\r\nVERSION=\"7 (Core)\"\r\nID=\"centos\"\r\nID_LIKE=\"rhel fedora\"\r\nVERSION_ID=\"7\"\r\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:centos:centos:7\"\r\nHOME_URL=\"https://www.centos.org/\"\r\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n\r\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\r\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\r\nREDHAT_SUPPORT_PRODUCT=\"centos\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\r\n\r\n", "stdout_lines": ["NAME=\"CentOS Linux\"", "VERSION=\"7 (Core)\"", "ID=\"centos\"", "ID_LIKE=\"rhel fedora\"", "VERSION_ID=\"7\"", "PRETTY_NAME=\"CentOS Linux 7 (Core)\"", "ANSI_COLOR=\"0;31\"", "CPE_NAME=\"cpe:/o:centos:centos:7\"", "HOME_URL=\"https://www.centos.org/\"", "BUG_REPORT_URL=\"https://bugs.centos.org/\"", "", "CENTOS_MANTISBT_PROJECT=\"CentOS-7\"", "CENTOS_MANTISBT_PROJECT_VERSION=\"7\"", "REDHAT_SUPPORT_PRODUCT=\"centos\"", "REDHAT_SUPPORT_PRODUCT_VERSION=\"7\"", ""]}

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:13 +0000 (0:00:00.341)       0:00:00.945 ********
included: /home/vagrant/kubespray/roles/bootstrap-os/tasks/bootstrap-centos.yml for test1

TASK [bootstrap-os : Check if this is an atomic host] ******************************************************************
Friday 16 October 2020  01:58:13 +0000 (0:00:00.040)       0:00:00.986 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [bootstrap-os : Store the fact if this is an atomic host] *********************************************************
Friday 16 October 2020  01:58:13 +0000 (0:00:00.332)       0:00:01.318 ********
ok: [test1] => {"ansible_facts": {"is_atomic": false}, "changed": false}

TASK [bootstrap-os : Check presence of fastestmirror.conf] *************************************************************
Friday 16 October 2020  01:58:13 +0000 (0:00:00.044)       0:00:01.363 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602813218.8506863, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "7ddb1e845b33cfa07e5f0bf7ba175b2bb78f4797", "ctime": 1602813199.2898474, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 17262, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/x-c", "mode": "0644", "mtime": 1589300861.0, "nlink": 1, "path": "/etc/yum/pluginconf.d/fastestmirror.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 279, "uid": 0, "version": "880820226", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [bootstrap-os : Disable fastestmirror plugin if requested] ********************************************************
Friday 16 October 2020  01:58:13 +0000 (0:00:00.178)       0:00:01.542 ********
changed: [test1] => {"backup": "", "changed": true, "msg": "line replaced"}

TASK [bootstrap-os : Add proxy to /etc/yum.conf if http_proxy is defined] **********************************************
Friday 16 October 2020  01:58:14 +0000 (0:00:00.333)       0:00:01.875 ********

TASK [bootstrap-os : Gather host facts to get ansible_distribution_major_version] **************************************
Friday 16 October 2020  01:58:14 +0000 (0:00:00.023)       0:00:01.898 ********
ok: [test1]

TASK [bootstrap-os : Install libselinux python package] ****************************************************************
Friday 16 October 2020  01:58:14 +0000 (0:00:00.613)       0:00:02.511 ********
ok: [test1] => {"changed": false, "msg": "", "rc": 0, "results": ["libselinux-python-2.5-15.el7.x86_64 providing libselinux-python is already installed"]}

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.839)       0:00:03.351 ********

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.026)       0:00:03.378 ********

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.031)       0:00:03.409 ********

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.026)       0:00:03.436 ********

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.024)       0:00:03.461 ********

TASK [bootstrap-os : include_tasks] ************************************************************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.025)       0:00:03.487 ********

TASK [bootstrap-os : Create remote_tmp for it is used by another module] ***********************************************
Friday 16 October 2020  01:58:15 +0000 (0:00:00.028)       0:00:03.515 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.ansible/tmp", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [bootstrap-os : Gather host facts to get ansible_os_family] *******************************************************
Friday 16 October 2020  01:58:16 +0000 (0:00:00.336)       0:00:03.852 ********
ok: [test1]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux)] ***
Friday 16 October 2020  01:58:16 +0000 (0:00:00.257)       0:00:04.109 ********
changed: [test1] => {"ansible_facts": {"ansible_domain": "", "ansible_fqdn": "test1", "ansible_hostname": "test1", "ansible_nodename": "test1"}, "changed": true, "name": "test1"}

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (CoreOS, non-Flatcar, Suse and ClearLinux only)] ***
Friday 16 October 2020  01:58:17 +0000 (0:00:00.713)       0:00:04.823 ********

TASK [bootstrap-os : Update hostname fact (CoreOS, Flatcar, Suse and ClearLinux only)] *********************************
Friday 16 October 2020  01:58:17 +0000 (0:00:00.028)       0:00:04.851 ********

TASK [bootstrap-os : Install ceph-commmon package] *********************************************************************
Friday 16 October 2020  01:58:17 +0000 (0:00:00.027)       0:00:04.878 ********

TASK [bootstrap-os : Ensure bash_completion.d folder exists] ***********************************************************
Friday 16 October 2020  01:58:17 +0000 (0:00:00.026)       0:00:04.905 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/", "secontext": "system_u:object_r:etc_t:s0", "size": 68, "state": "directory", "uid": 0}

PLAY [k8s-cluster:etcd] ************************************************************************************************

TASK [Gathering Facts] *************************************************************************************************
Friday 16 October 2020  01:58:17 +0000 (0:00:00.251)       0:00:05.156 ********
ok: [test1]

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  01:58:17 +0000 (0:00:00.472)       0:00:05.629 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.038)       0:00:05.667 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.037)       0:00:05.705 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.037)       0:00:05.742 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.043)       0:00:05.785 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.042)       0:00:05.828 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.042)       0:00:05.870 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.041)       0:00:05.912 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.040)       0:00:05.952 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.038)       0:00:05.991 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.036)       0:00:06.028 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  01:58:18 +0000 (0:00:00.038)       0:00:06.066 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  01:58:19 +0000 (0:00:00.704)       0:00:06.771 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  01:58:19 +0000 (0:00:00.707)       0:00:07.478 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [adduser : User | Create User Group] ******************************************************************************
Friday 16 October 2020  01:58:19 +0000 (0:00:00.074)       0:00:07.553 ********
changed: [test1] => {"changed": true, "gid": 994, "name": "kube-cert", "state": "present", "system": true}

TASK [adduser : User | Create User] ************************************************************************************
Friday 16 October 2020  01:58:20 +0000 (0:00:00.412)       0:00:07.965 ********
changed: [test1] => {"changed": true, "comment": "Kubernetes user", "create_home": false, "group": 994, "home": "/home/kube", "name": "kube", "shell": "/sbin/nologin", "state": "present", "system": true, "uid": 997}

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *********************************************************
Friday 16 October 2020  01:58:20 +0000 (0:00:00.481)       0:00:08.447 ********
ok: [test1] => (item=swap) => {"changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "swap", "name": "swap", "opts": "defaults", "passno": "0"}
changed: [test1] => (item=none) => {"changed": true, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "none", "name": "none", "opts": "defaults", "passno": "0"}

TASK [kubernetes/preinstall : check swap] ******************************************************************************
Friday 16 October 2020  01:58:21 +0000 (0:00:00.529)       0:00:08.976 ********
ok: [test1] => {"changed": false, "cmd": ["/sbin/swapon", "-s"], "delta": "0:00:00.002591", "end": "2020-10-16 01:58:25.520280", "rc": 0, "start": "2020-10-16 01:58:25.517689", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [kubernetes/preinstall : Disable swap] ****************************************************************************
Friday 16 October 2020  01:58:21 +0000 (0:00:00.347)       0:00:09.323 ********

TASK [kubernetes/preinstall : Stop if either kube-master, kube-node or etcd is empty] **********************************
Friday 16 October 2020  01:58:21 +0000 (0:00:00.042)       0:00:09.366 ********
ok: [test1] => (item=kube-master) => {
    "changed": false,
    "item": "kube-master",
    "msg": "All assertions passed"
}
ok: [test1] => (item=kube-node) => {
    "changed": false,
    "item": "kube-node",
    "msg": "All assertions passed"
}
ok: [test1] => (item=etcd) => {
    "changed": false,
    "item": "etcd",
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if non systemd OS type] *************************************************************
Friday 16 October 2020  01:58:21 +0000 (0:00:00.146)       0:00:09.513 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown OS] **********************************************************************
Friday 16 October 2020  01:58:21 +0000 (0:00:00.079)       0:00:09.592 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown network plugin] **********************************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.083)       0:00:09.676 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if incompatible network plugin and cloudprovider] ***********************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.092)       0:00:09.768 ********

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] ***********************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.039)       0:00:09.808 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
Friday 16 October 2020  01:58:22 +0000 (0:00:00.078)       0:00:09.887 ********
ok: [test1] => (item={'name': 'download_run_once', 'value': False}) => {
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [test1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [test1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [test1] => (item={'name': 'helm_enabled', 'value': False}) => {
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [test1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *******************************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.220)       0:00:10.107 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *************************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.079)       0:00:10.187 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***************************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.084)       0:00:10.271 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Guarantee that enough network address space is available for all pods] *******************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.081)       0:00:10.353 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *************************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.082)       0:00:10.436 ********

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *******************************************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.040)       0:00:10.476 ********

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] ***********************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.038)       0:00:10.515 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when OCI cloud controller is enabled] ************************
Friday 16 October 2020  01:58:22 +0000 (0:00:00.079)       0:00:10.594 ********

TASK [kubernetes/preinstall : Stop if RBAC and anonymous-auth are not enabled when insecure port is disabled] **********
Friday 16 October 2020  01:58:22 +0000 (0:00:00.042)       0:00:10.637 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if kernel version is too low] *******************************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.082)       0:00:10.719 ********

TASK [kubernetes/preinstall : Stop if bad hostname] ********************************************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.039)       0:00:10.759 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : check cloud_provider value] **************************************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.081)       0:00:10.841 ********

TASK [kubernetes/preinstall : Ensure minimum calico version] ***********************************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.039)       0:00:10.880 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Get current version of calico cluster version] *******************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.080)       0:00:10.961 ********
ok: [test1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh version | grep 'Cluster Version:' | awk '{ print $3}'", "delta": "0:00:00.004041", "end": "2020-10-16 01:58:27.356081", "failed_when_result": false, "rc": 0, "start": "2020-10-16 01:58:27.352040", "stderr": "/bin/sh: /usr/local/bin/calicoctl.sh: No such file or directory", "stderr_lines": ["/bin/sh: /usr/local/bin/calicoctl.sh: No such file or directory"], "stdout": "", "stdout_lines": []}

TASK [kubernetes/preinstall : Check that calico version is enough for upgrade] *****************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.200)       0:00:11.162 ********

TASK [kubernetes/preinstall : Check that cluster_id is set if calico_rr enabled] ***************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.048)       0:00:11.210 ********

TASK [kubernetes/preinstall : Check that calico_rr nodes are in k8s-cluster group] *************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.041)       0:00:11.252 ********

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.042)       0:00:11.294 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ******************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.079)       0:00:11.374 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ****************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.077)       0:00:11.451 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown dns mode] ****************************************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.080)       0:00:11.532 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *********************************************************
Friday 16 October 2020  01:58:23 +0000 (0:00:00.081)       0:00:11.614 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if vault is chose] ******************************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.079)       0:00:11.693 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown cert_management] *********************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.082)       0:00:11.776 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *********************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.089)       0:00:11.865 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if kubeadm etcd mode is enabled but experimental control plane is not] **************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.081)       0:00:11.947 ********

TASK [kubernetes/preinstall : Pre-upgrade | check if old credential dir exists] ****************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.043)       0:00:11.990 ********
ok: [test1 -> localhost] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : Pre-upgrade | check if new credential dir exists] ****************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.197)       0:00:12.188 ********

TASK [kubernetes/preinstall : Pre-upgrade | move data from old credential dir to new] **********************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.048)       0:00:12.237 ********

TASK [kubernetes/preinstall : set architecture_groups] *****************************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.039)       0:00:12.276 ********
ok: [test1] => {"ansible_facts": {"architecture_groups": {"aarch64": "arm64", "armv7l": "arm", "x86_64": "amd64"}}, "changed": false}

TASK [kubernetes/preinstall : ansible_architecture_rename] *************************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.071)       0:00:12.347 ********
ok: [test1] => {"ansible_facts": {"host_architecture": "amd64"}, "changed": false}

TASK [kubernetes/preinstall : Force binaries directory for Container Linux by CoreOS and Flatcar] **********************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.080)       0:00:12.428 ********

TASK [kubernetes/preinstall : check if atomic host] ********************************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.038)       0:00:12.466 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : set is_atomic] ***************************************************************************
Friday 16 October 2020  01:58:24 +0000 (0:00:00.186)       0:00:12.653 ********
ok: [test1] => {"ansible_facts": {"is_atomic": false}, "changed": false}

TASK [kubernetes/preinstall : set kube_cert_group on atomic hosts] *****************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.072)       0:00:12.726 ********

TASK [kubernetes/preinstall : check resolvconf] ************************************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.037)       0:00:12.764 ********
ok: [test1] => {"changed": false, "cmd": "which resolvconf", "delta": "0:00:00.003027", "end": "2020-10-16 01:58:29.149104", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2020-10-16 01:58:29.146077", "stderr": "which: no resolvconf in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin)", "stderr_lines": ["which: no resolvconf in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin)"], "stdout": "", "stdout_lines": []}

TASK [kubernetes/preinstall : check systemd-resolved] ******************************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.190)       0:00:12.954 ********
ok: [test1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.005363", "end": "2020-10-16 01:58:29.343476", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2020-10-16 01:58:29.338113", "stderr": "", "stderr_lines": [], "stdout": "unknown", "stdout_lines": ["unknown"]}

TASK [kubernetes/preinstall : set dns facts] ***************************************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.194)       0:00:13.149 ********
ok: [test1] => {"ansible_facts": {"bogus_domains": "cluster.local.default.svc.cluster.local./default.svc.cluster.local.default.svc.cluster.local./com.default.svc.cluster.local./cluster.local.svc.cluster.local./svc.cluster.local.svc.cluster.local./com.svc.cluster.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}

TASK [kubernetes/preinstall : check if kubelet is configured] **********************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.127)       0:00:13.277 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : check if early DNS configuration stage] **************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.191)       0:00:13.468 ********
ok: [test1] => {"ansible_facts": {"dns_early": true}, "changed": false}

TASK [kubernetes/preinstall : target resolv.conf files] ****************************************************************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.072)       0:00:13.541 ********
ok: [test1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}

TASK [kubernetes/preinstall : target temporary resolvconf cloud init file (Container Linux by CoreOS)] *****************
Friday 16 October 2020  01:58:25 +0000 (0:00:00.083)       0:00:13.624 ********

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ******************************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.042)       0:00:13.667 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhclient.conf] ****************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.191)       0:00:13.859 ********

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *************************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.038)       0:00:13.897 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***********************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.189)       0:00:14.087 ********

TASK [kubernetes/preinstall : target dhclient hook file for Red Hat family] ********************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.038)       0:00:14.126 ********
ok: [test1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient.d/zdnsupdate.sh"}, "changed": false}

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *********************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.076)       0:00:14.203 ********

TASK [kubernetes/preinstall : generate search domains to resolvconf] ***************************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.043)       0:00:14.247 ********
ok: [test1] => {"ansible_facts": {"domainentry": "domain cluster.local", "searchentries": "search default.svc.cluster.local svc.cluster.local", "supersede_domain": "supersede domain-name \"cluster.local\";", "supersede_search": "supersede domain-search \"default.svc.cluster.local\", \"svc.cluster.local\";"}, "changed": false}

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *********************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.078)       0:00:14.325 ********
ok: [test1] => {"ansible_facts": {"coredns_server": []}, "changed": false}

TASK [kubernetes/preinstall : generate nameservers to resolvconf] ******************************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.083)       0:00:14.409 ********
ok: [test1] => {"ansible_facts": {"nameserverentries": "nameserver ", "supersede_nameserver": "supersede domain-name-servers ;"}, "changed": false}

TASK [kubernetes/preinstall : gather os specific variables] ************************************************************
Friday 16 October 2020  01:58:26 +0000 (0:00:00.077)       0:00:14.486 ********
ok: [test1] => (item=/home/vagrant/kubespray/roles/kubernetes/preinstall/vars/../vars/centos.yml) => {"ansible_facts": {"required_pkgs": ["{{ ( (ansible_distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}", "device-mapper-libs", "ebtables", "nss"]}, "ansible_included_var_files": ["/home/vagrant/kubespray/roles/kubernetes/preinstall/vars/centos.yml"], "changed": false, "item": "/home/vagrant/kubespray/roles/kubernetes/preinstall/vars/../vars/centos.yml"}

TASK [kubernetes/preinstall : override kube_proxy_mode to ipvs if kube_proxy_remove is set, as ipvs won't require kube-proxy cleanup when kube-proxy daemonset gets deleted] ***
Friday 16 October 2020  01:58:26 +0000 (0:00:00.133)       0:00:14.619 ********

TASK [kubernetes/preinstall : set etcd vars if using kubeadm mode] *****************************************************
Friday 16 October 2020  01:58:27 +0000 (0:00:00.038)       0:00:14.658 ********

TASK [kubernetes/preinstall : check /usr readonly] *********************************************************************
Friday 16 October 2020  01:58:27 +0000 (0:00:00.037)       0:00:14.695 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602813171.3350773, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 0, "charset": "binary", "ctime": 1588284305.528, "dev": 2049, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 67149910, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "inode/directory", "mode": "0755", "mtime": 1588284305.528, "nlink": 13, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 155, "uid": 0, "version": "18446744071758561446", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [kubernetes/preinstall : set alternate flexvolume path] ***********************************************************
Friday 16 October 2020  01:58:27 +0000 (0:00:00.200)       0:00:14.895 ********

TASK [kubernetes/preinstall : Create kubernetes directories] ***********************************************************
Friday 16 October 2020  01:58:27 +0000 (0:00:00.037)       0:00:14.933 ********
changed: [test1] => (item=/usr/local/bin) => {"changed": true, "gid": 0, "group": "root", "item": "/usr/local/bin", "mode": "0755", "owner": "kube", "path": "/usr/local/bin", "secontext": "system_u:object_r:bin_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/etc/kubernetes) => {"changed": true, "gid": 0, "group": "root", "item": "/etc/kubernetes", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/etc/kubernetes/ssl) => {"changed": true, "gid": 0, "group": "root", "item": "/etc/kubernetes/ssl", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/ssl", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/etc/kubernetes/manifests) => {"changed": true, "gid": 0, "group": "root", "item": "/etc/kubernetes/manifests", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/manifests", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/usr/local/bin/kubernetes-scripts) => {"changed": true, "gid": 0, "group": "root", "item": "/usr/local/bin/kubernetes-scripts", "mode": "0755", "owner": "kube", "path": "/usr/local/bin/kubernetes-scripts", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) => {"changed": true, "gid": 0, "group": "root", "item": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "mode": "0755", "owner": "kube", "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 6, "state": "directory", "uid": 997}

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] **************************************
Friday 16 October 2020  01:58:28 +0000 (0:00:01.014)       0:00:15.947 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***************
Friday 16 October 2020  01:58:28 +0000 (0:00:00.205)       0:00:16.152 ********
changed: [test1] => {"changed": true, "dest": "/etc/kubernetes/pki", "gid": 0, "group": "root", "mode": "0777", "owner": "root", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 19, "src": "/etc/kubernetes/ssl", "state": "link", "uid": 0}

TASK [kubernetes/preinstall : Create cni directories] ******************************************************************
Friday 16 October 2020  01:58:28 +0000 (0:00:00.216)       0:00:16.368 ********
changed: [test1] => (item=/etc/cni/net.d) => {"changed": true, "gid": 0, "group": "root", "item": "/etc/cni/net.d", "mode": "0755", "owner": "kube", "path": "/etc/cni/net.d", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/opt/cni/bin) => {"changed": true, "gid": 0, "group": "root", "item": "/opt/cni/bin", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "secontext": "unconfined_u:object_r:usr_t:s0", "size": 6, "state": "directory", "uid": 997}
changed: [test1] => (item=/var/lib/calico) => {"changed": true, "gid": 0, "group": "root", "item": "/var/lib/calico", "mode": "0755", "owner": "kube", "path": "/var/lib/calico", "secontext": "unconfined_u:object_r:var_lib_t:s0", "size": 6, "state": "directory", "uid": 997}

TASK [kubernetes/preinstall : Create local volume provisioner directories] *********************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.536)       0:00:16.904 ********

TASK [kubernetes/preinstall : create temporary resolveconf cloud init file] ********************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.051)       0:00:16.955 ********

TASK [kubernetes/preinstall : Add domain/search/nameservers/options to resolv.conf] ************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.039)       0:00:16.995 ********

TASK [kubernetes/preinstall : Remove search/domain/nameserver options before block] ************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.040)       0:00:17.036 ********

TASK [kubernetes/preinstall : Remove search/domain/nameserver options after block] *************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.083)       0:00:17.119 ********

TASK [kubernetes/preinstall : get temporary resolveconf cloud init file content] ***************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.082)       0:00:17.201 ********

TASK [kubernetes/preinstall : persist resolvconf cloud init file] ******************************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.041)       0:00:17.242 ********

TASK [kubernetes/preinstall : Write resolved.conf] *********************************************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.045)       0:00:17.287 ********

TASK [kubernetes/preinstall : Update package management cache (zypper) - SUSE] *****************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.039)       0:00:17.327 ********

TASK [kubernetes/preinstall : Update package management cache (APT)] ***************************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.040)       0:00:17.368 ********

TASK [kubernetes/preinstall : Remove legacy docker repo file] **********************************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.041)       0:00:17.409 ********
ok: [test1] => {"changed": false, "path": "/etc/yum.repos.d/docker.repo", "state": "absent"}

TASK [kubernetes/preinstall : Install python-dnf for latest RedHat versions] *******************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.201)       0:00:17.611 ********

TASK [kubernetes/preinstall : Install python3-dnf for latest RedHat versions] ******************************************
Friday 16 October 2020  01:58:29 +0000 (0:00:00.041)       0:00:17.652 ********

TASK [kubernetes/preinstall : Install epel-release on RedHat/CentOS] ***************************************************
Friday 16 October 2020  01:58:30 +0000 (0:00:00.040)       0:00:17.693 ********

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] *******************
Friday 16 October 2020  01:58:30 +0000 (0:00:00.044)       0:00:17.738 ********
ok: [test1] => {"ansible_facts": {"common_required_pkgs": ["openssl", "curl", "rsync", "socat", "unzip", "e2fsprogs", "xfsprogs", "conntrack", "ipvsadm", "ipset"]}, "changed": false}

TASK [kubernetes/preinstall : Install packages requirements] ***********************************************************
Friday 16 October 2020  01:58:30 +0000 (0:00:00.084)       0:00:17.822 ********
changed: [test1] => {"attempts": 1, "changed": true, "msg": "", "rc": 0, "results": ["All packages providing libselinux-python are up to date", "All packages providing device-mapper-libs are up to date", "All packages providing ebtables are up to date", "All packages providing nss are up to date", "All packages providing openssl are up to date", "All packages providing curl are up to date", "All packages providing rsync are up to date", "All packages providing e2fsprogs are up to date", "All packages providing xfsprogs are up to date", "All packages providing ipset are up to date", "Package libselinux-python-2.5-15.el7.x86_64 already installed and latest version\nPackage 7:device-mapper-libs-1.02.164-7.el7_8.2.x86_64 already installed and latest version\nPackage ebtables-2.0.10-16.el7.x86_64 already installed and latest version\nPackage nss-3.44.0-7.el7_7.x86_64 already installed and latest version\nPackage 1:openssl-1.0.2k-19.el7.x86_64 already installed and latest version\nPackage curl-7.29.0-57.el7_8.1.x86_64 already installed and latest version\nPackage rsync-3.1.2-10.el7.x86_64 already installed and latest version\nPackage e2fsprogs-1.42.9-17.el7.x86_64 already installed and latest version\nPackage xfsprogs-4.5.0-20.el7.x86_64 already installed and latest version\nPackage ipset-7.1-1.el7.x86_64 already installed and latest version\nResolving Dependencies\n--> Running transaction check\n---> Package conntrack-tools.x86_64 0:1.4.4-7.el7 will be installed\n--> Processing Dependency: libnetfilter_cttimeout.so.1(LIBNETFILTER_CTTIMEOUT_1.1)(64bit) for package: conntrack-tools-1.4.4-7.el7.x86_64\n--> Processing Dependency: libnetfilter_cttimeout.so.1(LIBNETFILTER_CTTIMEOUT_1.0)(64bit) for package: conntrack-tools-1.4.4-7.el7.x86_64\n--> Processing Dependency: libnetfilter_cthelper.so.0(LIBNETFILTER_CTHELPER_1.0)(64bit) for package: conntrack-tools-1.4.4-7.el7.x86_64\n--> Processing Dependency: libnetfilter_queue.so.1()(64bit) for package: conntrack-tools-1.4.4-7.el7.x86_64\n--> Processing Dependency: libnetfilter_cttimeout.so.1()(64bit) for package: conntrack-tools-1.4.4-7.el7.x86_64\n--> Processing Dependency: libnetfilter_cthelper.so.0()(64bit) for package: conntrack-tools-1.4.4-7.el7.x86_64\n---> Package ipvsadm.x86_64 0:1.27-8.el7 will be installed\n---> Package socat.x86_64 0:1.7.3.2-2.el7 will be installed\n---> Package unzip.x86_64 0:6.0-21.el7 will be installed\n--> Running transaction check\n---> Package libnetfilter_cthelper.x86_64 0:1.0.0-11.el7 will be installed\n---> Package libnetfilter_cttimeout.x86_64 0:1.0.0-7.el7 will be installed\n---> Package libnetfilter_queue.x86_64 0:1.0.2-2.el7_2 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package                      Arch         Version             Repository  Size\n================================================================================\nInstalling:\n conntrack-tools              x86_64       1.4.4-7.el7         base       187 k\n ipvsadm                      x86_64       1.27-8.el7          base        45 k\n socat                        x86_64       1.7.3.2-2.el7       base       290 k\n unzip                        x86_64       6.0-21.el7          base       171 k\nInstalling for dependencies:\n libnetfilter_cthelper        x86_64       1.0.0-11.el7        base        18 k\n libnetfilter_cttimeout       x86_64       1.0.0-7.el7         base        18 k\n libnetfilter_queue           x86_64       1.0.2-2.el7_2       base        23 k\n\nTransaction Summary\n================================================================================\nInstall  4 Packages (+3 Dependent packages)\n\nTotal download size: 751 k\nInstalled size: 2.2 M\nDownloading packages:\n--------------------------------------------------------------------------------\nTotal                                              3.4 MB/s | 751 kB  00:00     \nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : libnetfilter_cttimeout-1.0.0-7.el7.x86_64                    1/7 \n  Installing : libnetfilter_cthelper-1.0.0-11.el7.x86_64                    2/7 \n  Installing : libnetfilter_queue-1.0.2-2.el7_2.x86_64                      3/7 \n  Installing : conntrack-tools-1.4.4-7.el7.x86_64                           4/7 \n  Installing : socat-1.7.3.2-2.el7.x86_64                                   5/7 \n  Installing : ipvsadm-1.27-8.el7.x86_64                                    6/7 \n  Installing : unzip-6.0-21.el7.x86_64                                      7/7 \n  Verifying  : unzip-6.0-21.el7.x86_64                                      1/7 \n  Verifying  : conntrack-tools-1.4.4-7.el7.x86_64                           2/7 \n  Verifying  : libnetfilter_queue-1.0.2-2.el7_2.x86_64                      3/7 \n  Verifying  : ipvsadm-1.27-8.el7.x86_64                                    4/7 \n  Verifying  : libnetfilter_cthelper-1.0.0-11.el7.x86_64                    5/7 \n  Verifying  : socat-1.7.3.2-2.el7.x86_64                                   6/7 \n  Verifying  : libnetfilter_cttimeout-1.0.0-7.el7.x86_64                    7/7 \n\nInstalled:\n  conntrack-tools.x86_64 0:1.4.4-7.el7        ipvsadm.x86_64 0:1.27-8.el7       \n  socat.x86_64 0:1.7.3.2-2.el7                unzip.x86_64 0:6.0-21.el7         \n\nDependency Installed:\n  libnetfilter_cthelper.x86_64 0:1.0.0-11.el7                                   \n  libnetfilter_cttimeout.x86_64 0:1.0.0-7.el7                                   \n  libnetfilter_queue.x86_64 0:1.0.2-2.el7_2                                     \n\nComplete!\n"]}

TASK [kubernetes/preinstall : Install ipvsadm for ClearLinux] **********************************************************
Friday 16 October 2020  01:58:39 +0000 (0:00:09.168)       0:00:26.991 ********

TASK [kubernetes/preinstall : Confirm selinux deployed] ****************************************************************
Friday 16 October 2020  01:58:39 +0000 (0:00:00.040)       0:00:27.031 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602813292.0336378, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "46107a2c962af694d961e342fa17f4db2f2662fc", "ctime": 1602813258.6985831, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 33963412, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0644", "mtime": 1602813258.6985831, "nlink": 1, "path": "/etc/selinux/config", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 541, "uid": 0, "version": "18446744072408403501", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [kubernetes/preinstall : Set selinux policy] **********************************************************************
Friday 16 October 2020  01:58:39 +0000 (0:00:00.205)       0:00:27.237 ********
ok: [test1] => {"changed": false, "configfile": "/etc/selinux/config", "msg": "Config SELinux state changed from 'disabled' to 'permissive'", "policy": "targeted", "reboot_required": false, "state": "permissive"}

TASK [kubernetes/preinstall : Disable IPv6 DNS lookup] *****************************************************************
Friday 16 October 2020  01:58:40 +0000 (0:00:00.630)       0:00:27.868 ********

TASK [kubernetes/preinstall : Stat sysctl file configuration] **********************************************************
Friday 16 October 2020  01:58:40 +0000 (0:00:00.037)       0:00:27.905 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602812962.31, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 0, "charset": "binary", "ctime": 1588284393.356, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 101091515, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/sysctl.conf", "lnk_target": "../sysctl.conf", "mimetype": "inode/symlink", "mode": "0777", "mtime": 1588284393.356, "nlink": 1, "path": "/etc/sysctl.d/99-sysctl.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 14, "uid": 0, "version": null, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ****************************************
Friday 16 October 2020  01:58:40 +0000 (0:00:00.251)       0:00:28.156 ********
ok: [test1] => {"ansible_facts": {"sysctl_file_path": "/etc/sysctl.conf"}, "changed": false}

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ************************************************
Friday 16 October 2020  01:58:40 +0000 (0:00:00.084)       0:00:28.241 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc", "secontext": "system_u:object_r:etc_t:s0", "size": 8192, "state": "directory", "uid": 0}

TASK [kubernetes/preinstall : Enable ip forwarding] ********************************************************************
Friday 16 October 2020  01:58:40 +0000 (0:00:00.237)       0:00:28.479 ********
changed: [test1] => {"changed": true}

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] **********************************************
Friday 16 October 2020  01:58:41 +0000 (0:00:00.358)       0:00:28.837 ********
changed: [test1] => {"changed": true, "msg": "Block inserted"}

TASK [kubernetes/preinstall : Hosts | populate kubernetes loadbalancer address into hosts file] ************************
Friday 16 October 2020  01:58:41 +0000 (0:00:00.506)       0:00:29.344 ********

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *****************************************************
Friday 16 October 2020  01:58:41 +0000 (0:00:00.039)       0:00:29.383 ********
ok: [test1] => {"changed": false, "content": "MTI3LjAuMC4xICAgbG9jYWxob3N0IGxvY2FsaG9zdC5sb2NhbGRvbWFpbiBsb2NhbGhvc3Q0IGxvY2FsaG9zdDQubG9jYWxkb21haW40Cjo6MSAgICAgICAgIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4gbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluNgoxMjcuMC4xLjEgazhzLW1hc3RlcjEgazhzLW1hc3RlcjEKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxMC4wLjIuMTUgdGVzdDEuY2x1c3Rlci5sb2NhbCB0ZXN0MQojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] **************************
Friday 16 October 2020  01:58:42 +0000 (0:00:00.344)       0:00:29.727 ********
ok: [test1] => (item=127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain", "localhost4", "localhost4.localdomain4"]}}, "changed": false, "item": "127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4"}
ok: [test1] => (item=::1         localhost localhost.localdomain localhost6 localhost6.localdomain6) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain", "localhost4", "localhost4.localdomain4"], "::1": ["localhost", "localhost.localdomain", "localhost6", "localhost6.localdomain6"]}}, "changed": false, "item": "::1         localhost localhost.localdomain localhost6 localhost6.localdomain6"}

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *********************
Friday 16 October 2020  01:58:42 +0000 (0:00:00.245)       0:00:29.973 ********
ok: [test1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain", "localhost4", "localhost4.localdomain4"]}}, "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
ok: [test1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain", "localhost4", "localhost4.localdomain4"], "::1": ["localhost6", "localhost6.localdomain6", "localhost6.localdomain"]}}, "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ************************************************
Friday 16 October 2020  01:58:42 +0000 (0:00:00.170)       0:00:30.144 ********
changed: [test1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain', 'localhost4', 'localhost4.localdomain4']}) => {"backup": "/etc/hosts.13112.2020-10-16@01:58:46~", "changed": true, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain", "localhost4", "localhost4.localdomain4"]}, "msg": "line replaced"}
changed: [test1] => (item={'key': '::1', 'value': ['localhost6', 'localhost6.localdomain6', 'localhost6.localdomain']}) => {"backup": "/etc/hosts.13121.2020-10-16@01:58:46~", "changed": true, "item": {"key": "::1", "value": ["localhost6", "localhost6.localdomain6", "localhost6.localdomain"]}, "msg": "line replaced"}

TASK [kubernetes/preinstall : Update facts] ****************************************************************************
Friday 16 October 2020  01:58:42 +0000 (0:00:00.420)       0:00:30.564 ********
ok: [test1]

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *******************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.301)       0:00:30.866 ********

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.039)       0:00:30.905 ********

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (RH-only)] **************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.040)       0:00:30.946 ********

TASK [kubernetes/preinstall : Remove kubespray specific config from dhclient config] ***********************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.045)       0:00:30.992 ********

TASK [kubernetes/preinstall : Remove kubespray specific dhclient hook] *************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.045)       0:00:31.037 ********
ok: [test1] => {"changed": false, "path": "/etc/dhcp/dhclient.d/zdnsupdate.sh", "state": "absent"}

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] ***********************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.209)       0:00:31.247 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/preinstall : install growpart] ************************************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.191)       0:00:31.438 ********

TASK [kubernetes/preinstall : check if growpart needs to be run] *******************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.039)       0:00:31.478 ********

TASK [kubernetes/preinstall : check fs type] ***************************************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.041)       0:00:31.520 ********

TASK [kubernetes/preinstall : run growpart] ****************************************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.041)       0:00:31.561 ********

TASK [kubernetes/preinstall : run xfs_growfs] **************************************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.039)       0:00:31.601 ********

TASK [container-engine/cri-o : gather os specific variables] ***********************************************************
Friday 16 October 2020  01:58:43 +0000 (0:00:00.041)       0:00:31.642 ********

TASK [container-engine/cri-o : Add OpenShift Origin repository] ********************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.059)       0:00:31.702 ********

TASK [container-engine/cri-o : Add CRI-O PPA] **************************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.038)       0:00:31.740 ********

TASK [container-engine/cri-o : crictl | Download crictl] ***************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.040)       0:00:31.780 ********

TASK [container-engine/cri-o : Install crictl] *************************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.040)       0:00:31.821 ********

TASK [container-engine/cri-o : Make sure needed folders exist in the system] *******************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.043)       0:00:31.864 ********

TASK [container-engine/cri-o : Install cri-o packages] *****************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.058)       0:00:31.923 ********

TASK [container-engine/cri-o : Install cri-o config] *******************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.041)       0:00:31.964 ********

TASK [container-engine/cri-o : Copy mounts.conf] ***********************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.039)       0:00:32.004 ********

TASK [container-engine/cri-o : Create directory for oci hooks] *********************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.040)       0:00:32.044 ********

TASK [container-engine/cri-o : Install cri-o service] ******************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.039)       0:00:32.084 ********

TASK [container-engine/containerd : Fail containerd setup if distribution is not supported] ****************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.044)       0:00:32.128 ********

TASK [container-engine/containerd : gather os specific variables] ******************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.042)       0:00:32.170 ********

TASK [container-engine/containerd : include_tasks] *********************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.056)       0:00:32.227 ********

TASK [container-engine/containerd : Create containerd service systemd directory if it doesn't exist] *******************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.039)       0:00:32.267 ********

TASK [container-engine/containerd : Write containerd proxy drop-in] ****************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.040)       0:00:32.307 ********

TASK [container-engine/containerd : ensure containerd config directory] ************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.039)       0:00:32.346 ********

TASK [container-engine/containerd : Copy containerd config file] *******************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.048)       0:00:32.394 ********

TASK [container-engine/containerd : Set containerd pin priority to apt_preferences on Debian family] *******************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.038)       0:00:32.433 ********

TASK [container-engine/containerd : ensure containerd packages are installed] ******************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.039)       0:00:32.473 ********

TASK [container-engine/containerd : Check if runc is installed] ********************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.047)       0:00:32.520 ********

TASK [container-engine/containerd : Install runc package if necessary] *************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.040)       0:00:32.561 ********

TASK [container-engine/containerd : include_tasks] *********************************************************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.040)       0:00:32.602 ********

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***********************************
Friday 16 October 2020  01:58:44 +0000 (0:00:00.038)       0:00:32.641 ********

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ****************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.062)       0:00:32.703 ********

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
Friday 16 October 2020  01:58:45 +0000 (0:00:00.044)       0:00:32.748 ********

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] **********
Friday 16 October 2020  01:58:45 +0000 (0:00:00.053)       0:00:32.801 ********

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] *******************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.041)       0:00:32.843 ********

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ****************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.044)       0:00:32.888 ********

TASK [container-engine/docker : check if atomic host] ******************************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.043)       0:00:32.932 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [container-engine/docker : set is_atomic] *************************************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.197)       0:00:33.129 ********
ok: [test1] => {"ansible_facts": {"is_atomic": false}, "changed": false}

TASK [container-engine/docker : gather os specific variables] **********************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.080)       0:00:33.210 ********
ok: [test1] => (item=/home/vagrant/kubespray/roles/container-engine/docker/vars/../vars/redhat.yml) => {"ansible_facts": {"docker_kernel_min_version": "0", "docker_package_info": {"pkg_mgr": "yum", "pkgs": "{%- if docker_version is version('17.04', '<') -%}\n{{ docker_pkgs_use_docker_ce }}\n{%- else -%}\n{{ docker_pkgs }}\n{%- endif %}"}, "docker_pkgs": [{"name": "{{ docker_versioned_pkg[docker_version | string] }}", "yum_conf": "{{ docker_yum_conf }}"}], "docker_pkgs_use_docker_ce": [{"name": "{{ docker_selinux_versioned_pkg[docker_selinux_version | string] }}", "yum_conf": "{{ docker_yum_conf }}"}, {"name": "{{ docker_versioned_pkg[docker_version | string] }}", "yum_conf": "{{ docker_yum_conf }}"}], "docker_repo_info": {"pkg_repo": "", "repos": []}, "docker_repo_key_info": {"pkg_key": "", "repo_keys": []}, "docker_selinux_versioned_pkg": {"1.13": "docker-engine-selinux-1.13.1-1.el7.centos", "17.03": "docker-ce-selinux-17.03.2.ce-1.el7.centos", "edge": "docker-ce-selinux-17.03.2.ce-1.el7.centos", "latest": "docker-ce-selinux", "stable": "docker-ce-selinux-17.03.2.ce-1.el7.centos"}, "docker_versioned_pkg": {"1.13": "docker-engine-1.13.1-1.el7.centos", "17.03": "docker-ce-17.03.2.ce-1.el7.centos", "17.09": "docker-ce-17.09.0.ce-1.el7.centos", "17.12": "docker-ce-17.12.1.ce-1.el7.centos", "18.03": "docker-ce-18.03.1.ce-1.el7.centos", "18.06": "docker-ce-18.06.2.ce-3.el7", "18.09": "docker-ce-18.09.7-3.el7", "edge": "docker-ce-18.09.7-3.el7", "latest": "docker-ce", "stable": "docker-ce-18.09.7-3.el7"}}, "ansible_included_var_files": ["/home/vagrant/kubespray/roles/container-engine/docker/vars/redhat.yml"], "changed": false, "item": "/home/vagrant/kubespray/roles/container-engine/docker/vars/../vars/redhat.yml"}

TASK [container-engine/docker : Warn about Docker version on SUSE] *****************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.104)       0:00:33.315 ********

TASK [container-engine/docker : include_tasks] *************************************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.041)       0:00:33.356 ********
included: /home/vagrant/kubespray/roles/container-engine/docker/tasks/set_facts_dns.yml for test1

TASK [container-engine/docker : set dns server for docker] *************************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.080)       0:00:33.437 ********
ok: [test1] => {"ansible_facts": {"docker_dns_servers": ["10.233.0.3"]}, "changed": false}

TASK [container-engine/docker : show docker_dns_servers] ***************************************************************
Friday 16 October 2020  01:58:45 +0000 (0:00:00.139)       0:00:33.577 ********
ok: [test1] => {
    "msg": [
        "10.233.0.3"
    ]
}

TASK [container-engine/docker : set base docker dns facts] *************************************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.141)       0:00:33.718 ********
ok: [test1] => {"ansible_facts": {"docker_dns_options": ["ndots:2", "timeout:2", "attempts:2"], "docker_dns_search_domains": ["default.svc.cluster.local", "svc.cluster.local"]}, "changed": false}

TASK [container-engine/docker : add upstream dns servers] **************************************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.140)       0:00:33.859 ********
ok: [test1] => {"ansible_facts": {"docker_dns_servers": ["10.233.0.3"]}, "changed": false}

TASK [container-engine/docker : add global searchdomains] **************************************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.132)       0:00:33.991 ********
ok: [test1] => {"ansible_facts": {"docker_dns_search_domains": ["default.svc.cluster.local", "svc.cluster.local"]}, "changed": false}

TASK [container-engine/docker : check system nameservers] **************************************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.090)       0:00:34.082 ********
ok: [test1] => {"changed": false, "cmd": "grep \"^nameserver\" /etc/resolv.conf | sed -r 's/^nameserver\\s*([^#\\s]+)\\s*(#.*)?/\\1/'", "delta": "0:00:00.003674", "end": "2020-10-16 01:58:50.467073", "rc": 0, "start": "2020-10-16 01:58:50.463399", "stderr": "", "stderr_lines": [], "stdout": "10.0.2.3", "stdout_lines": ["10.0.2.3"]}

TASK [container-engine/docker : check system search domains] ***********************************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.202)       0:00:34.285 ********
ok: [test1] => {"changed": false, "cmd": "grep \"^search\" /etc/resolv.conf | sed -r 's/^search\\s*([^#]+)\\s*(#.*)?/\\1/'", "delta": "0:00:00.004241", "end": "2020-10-16 01:58:50.680841", "rc": 0, "start": "2020-10-16 01:58:50.676600", "stderr": "", "stderr_lines": [], "stdout": "OFFICE.DINGYI.IO", "stdout_lines": ["OFFICE.DINGYI.IO"]}

TASK [container-engine/docker : add system nameservers to docker options] **********************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.213)       0:00:34.498 ********
ok: [test1] => {"ansible_facts": {"docker_dns_servers": ["10.233.0.3", "10.0.2.3"]}, "changed": false}

TASK [container-engine/docker : add system search domains to docker options] *******************************************
Friday 16 October 2020  01:58:46 +0000 (0:00:00.092)       0:00:34.591 ********
ok: [test1] => {"ansible_facts": {"docker_dns_search_domains": ["default.svc.cluster.local", "svc.cluster.local", "OFFICE.DINGYI.IO"]}, "changed": false}

TASK [container-engine/docker : check number of nameservers] ***********************************************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.091)       0:00:34.682 ********

TASK [container-engine/docker : rtrim number of nameservers to 3] ******************************************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.046)       0:00:34.728 ********

TASK [container-engine/docker : check number of search domains] ********************************************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.047)       0:00:34.776 ********

TASK [container-engine/docker : check length of search domains] ********************************************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.047)       0:00:34.823 ********

TASK [container-engine/docker : check for minimum kernel version] ******************************************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.050)       0:00:34.873 ********

TASK [container-engine/docker : Remove legacy docker repo file] ********************************************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.043)       0:00:34.917 ********
ok: [test1] => {"changed": false, "path": "/etc/yum.repos.d/docker.repo", "state": "absent"}

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | Debian] *****************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.261)       0:00:35.178 ********

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | RedHat] *****************************
Friday 16 October 2020  01:58:47 +0000 (0:00:00.054)       0:00:35.233 ********
ok: [test1] => {"changed": false, "msg": "", "rc": 0, "results": ["docker is not installed", "docker-common is not installed", "docker-engine is not installed", "docker-selinux.noarch is not installed", "docker-client is not installed", "docker-client-latest is not installed", "docker-latest is not installed", "docker-latest-logrotate is not installed", "docker-logrotate is not installed", "docker-engine-selinux.noarch is not installed"]}

TASK [container-engine/docker : ensure docker-ce repository public key is installed] ***********************************
Friday 16 October 2020  01:58:48 +0000 (0:00:01.047)       0:00:36.281 ********

TASK [container-engine/docker : ensure docker-ce repository is enabled] ************************************************
Friday 16 October 2020  01:58:48 +0000 (0:00:00.039)       0:00:36.321 ********

TASK [container-engine/docker : ensure docker-engine repository public key is installed] *******************************
Friday 16 October 2020  01:58:48 +0000 (0:00:00.034)       0:00:36.355 ********

TASK [container-engine/docker : ensure docker-engine repository is enabled] ********************************************
Friday 16 October 2020  01:58:48 +0000 (0:00:00.055)       0:00:36.411 ********

TASK [container-engine/docker : Configure docker repository on Fedora] *************************************************
Friday 16 October 2020  01:58:48 +0000 (0:00:00.056)       0:00:36.468 ********

TASK [container-engine/docker : Configure docker repository on RedHat/CentOS/Oracle Linux] *****************************
Friday 16 October 2020  01:58:48 +0000 (0:00:00.042)       0:00:36.510 ********
changed: [test1] => {"changed": true, "repo": "docker-ce", "state": "present"}

TASK [container-engine/docker : check if container-selinux is available] ***********************************************
Friday 16 October 2020  01:58:49 +0000 (0:00:00.374)       0:00:36.884 ********
ok: [test1] => {"changed": false, "results": [{"arch": "noarch", "envra": "2:container-selinux-2.107-1.el7_6.noarch", "epoch": "2", "name": "container-selinux", "release": "1.el7_6", "repo": "extras", "version": "2.107", "yumstate": "available"}, {"arch": "noarch", "envra": "2:container-selinux-2.107-3.el7.noarch", "epoch": "2", "name": "container-selinux", "release": "3.el7", "repo": "extras", "version": "2.107", "yumstate": "available"}, {"arch": "noarch", "envra": "2:container-selinux-2.119.1-1.c57a6f9.el7.noarch", "epoch": "2", "name": "container-selinux", "release": "1.c57a6f9.el7", "repo": "extras", "version": "2.119.1", "yumstate": "available"}, {"arch": "noarch", "envra": "2:container-selinux-2.119.2-1.911c772.el7_8.noarch", "epoch": "2", "name": "container-selinux", "release": "1.911c772.el7_8", "repo": "extras", "version": "2.119.2", "yumstate": "available"}]}

TASK [container-engine/docker : Configure extras repository on RedHat/CentOS if container-selinux is not available in current repos] ***
Friday 16 October 2020  01:58:50 +0000 (0:00:01.345)       0:00:38.230 ********

TASK [container-engine/docker : Copy yum.conf for editing] *************************************************************
Friday 16 October 2020  01:58:50 +0000 (0:00:00.045)       0:00:38.276 ********
changed: [test1] => {"changed": true, "checksum": "e0637e631f4ab0aaebef1a6b8822a36f031f332e", "dest": "/etc/yum_docker.conf", "gid": 0, "group": "root", "md5sum": "a7dc0d7b8902e9c8c096c93eb431d19e", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 970, "src": "/etc/yum.conf", "state": "file", "uid": 0}

TASK [container-engine/docker : Edit copy of yum.conf to set obsoletes=0] **********************************************
Friday 16 October 2020  01:58:51 +0000 (0:00:00.398)       0:00:38.674 ********
changed: [test1] => {"backup": "", "changed": true, "msg": "line replaced"}

TASK [container-engine/docker : ensure docker packages are installed] **************************************************
Friday 16 October 2020  01:58:51 +0000 (0:00:00.211)       0:00:38.885 ********
changed: [test1] => (item={'name': 'docker-ce-18.09.7-3.el7', 'yum_conf': '/etc/yum_docker.conf'}) => {"attempts": 1, "changed": true, "item": {"name": "docker-ce-18.09.7-3.el7", "yum_conf": "/etc/yum_docker.conf"}, "msg": "warning: /var/cache/yum/x86_64/7/docker-ce/packages/docker-ce-18.09.7-3.el7.x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID 621e9f35: NOKEY\nImporting GPG key 0x621E9F35:\n Userid     : \"Docker Release (CE rpm) <docker@docker.com>\"\n Fingerprint: 060a 61c5 1b55 8a7f 742b 77aa c52f eb6b 621e 9f35\n From       : https://download.docker.com/linux/centos/gpg\n", "rc": 0, "results": ["Resolving Dependencies\n--> Running transaction check\n---> Package docker-ce.x86_64 3:18.09.7-3.el7 will be installed\n--> Processing Dependency: container-selinux >= 2.9 for package: 3:docker-ce-18.09.7-3.el7.x86_64\n--> Processing Dependency: containerd.io >= 1.2.2-3 for package: 3:docker-ce-18.09.7-3.el7.x86_64\n--> Processing Dependency: docker-ce-cli for package: 3:docker-ce-18.09.7-3.el7.x86_64\n--> Processing Dependency: libcgroup for package: 3:docker-ce-18.09.7-3.el7.x86_64\n--> Running transaction check\n---> Package container-selinux.noarch 2:2.119.2-1.911c772.el7_8 will be installed\n--> Processing Dependency: policycoreutils-python for package: 2:container-selinux-2.119.2-1.911c772.el7_8.noarch\n---> Package containerd.io.x86_64 0:1.3.7-3.1.el7 will be installed\n---> Package docker-ce-cli.x86_64 1:19.03.13-3.el7 will be installed\n---> Package libcgroup.x86_64 0:0.41-21.el7 will be installed\n--> Running transaction check\n---> Package policycoreutils-python.x86_64 0:2.5-34.el7 will be installed\n--> Processing Dependency: setools-libs >= 3.3.8-4 for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: libsemanage-python >= 2.5-14 for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: audit-libs-python >= 2.1.3-4 for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: python-IPy for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: libqpol.so.1(VERS_1.4)(64bit) for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: libqpol.so.1(VERS_1.2)(64bit) for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: libapol.so.4(VERS_4.0)(64bit) for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: checkpolicy for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: libqpol.so.1()(64bit) for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Processing Dependency: libapol.so.4()(64bit) for package: policycoreutils-python-2.5-34.el7.x86_64\n--> Running transaction check\n---> Package audit-libs-python.x86_64 0:2.8.5-4.el7 will be installed\n---> Package checkpolicy.x86_64 0:2.5-8.el7 will be installed\n---> Package libsemanage-python.x86_64 0:2.5-14.el7 will be installed\n---> Package python-IPy.noarch 0:0.75-6.el7 will be installed\n---> Package setools-libs.x86_64 0:3.3.8-4.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package                 Arch    Version                       Repository  Size\n================================================================================\nInstalling:\n docker-ce               x86_64  3:18.09.7-3.el7               docker-ce   19 M\nInstalling for dependencies:\n audit-libs-python       x86_64  2.8.5-4.el7                   base        76 k\n checkpolicy             x86_64  2.5-8.el7                     base       295 k\n container-selinux       noarch  2:2.119.2-1.911c772.el7_8     extras      40 k\n containerd.io           x86_64  1.3.7-3.1.el7                 docker-ce   29 M\n docker-ce-cli           x86_64  1:19.03.13-3.el7              docker-ce   38 M\n libcgroup               x86_64  0.41-21.el7                   base        66 k\n libsemanage-python      x86_64  2.5-14.el7                    base       113 k\n policycoreutils-python  x86_64  2.5-34.el7                    base       457 k\n python-IPy              noarch  0.75-6.el7                    base        32 k\n setools-libs            x86_64  3.3.8-4.el7                   base       620 k\n\nTransaction Summary\n================================================================================\nInstall  1 Package (+10 Dependent packages)\n\nTotal download size: 88 M\nInstalled size: 370 M\nDownloading packages:\nPublic key for docker-ce-18.09.7-3.el7.x86_64.rpm is not installed\n--------------------------------------------------------------------------------\nTotal                                               11 MB/s |  88 MB  00:08     \nRetrieving key from https://download.docker.com/linux/centos/gpg\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : libcgroup-0.41-21.el7.x86_64                                1/11 \n  Installing : setools-libs-3.3.8-4.el7.x86_64                             2/11 \n  Installing : audit-libs-python-2.8.5-4.el7.x86_64                        3/11 \n  Installing : python-IPy-0.75-6.el7.noarch                                4/11 \n  Installing : 1:docker-ce-cli-19.03.13-3.el7.x86_64                       5/11 \n  Installing : libsemanage-python-2.5-14.el7.x86_64                        6/11 \n  Installing : checkpolicy-2.5-8.el7.x86_64                                7/11 \n  Installing : policycoreutils-python-2.5-34.el7.x86_64                    8/11 \n  Installing : 2:container-selinux-2.119.2-1.911c772.el7_8.noarch          9/11 \n  Installing : containerd.io-1.3.7-3.1.el7.x86_64                         10/11 \n  Installing : 3:docker-ce-18.09.7-3.el7.x86_64                           11/11 \n  Verifying  : checkpolicy-2.5-8.el7.x86_64                                1/11 \n  Verifying  : containerd.io-1.3.7-3.1.el7.x86_64                          2/11 \n  Verifying  : libsemanage-python-2.5-14.el7.x86_64                        3/11 \n  Verifying  : 1:docker-ce-cli-19.03.13-3.el7.x86_64                       4/11 \n  Verifying  : 2:container-selinux-2.119.2-1.911c772.el7_8.noarch          5/11 \n  Verifying  : python-IPy-0.75-6.el7.noarch                                6/11 \n  Verifying  : policycoreutils-python-2.5-34.el7.x86_64                    7/11 \n  Verifying  : 3:docker-ce-18.09.7-3.el7.x86_64                            8/11 \n  Verifying  : audit-libs-python-2.8.5-4.el7.x86_64                        9/11 \n  Verifying  : setools-libs-3.3.8-4.el7.x86_64                            10/11 \n  Verifying  : libcgroup-0.41-21.el7.x86_64                               11/11 \n\nInstalled:\n  docker-ce.x86_64 3:18.09.7-3.el7                                              \n\nDependency Installed:\n  audit-libs-python.x86_64 0:2.8.5-4.el7                                        \n  checkpolicy.x86_64 0:2.5-8.el7                                                \n  container-selinux.noarch 2:2.119.2-1.911c772.el7_8                            \n  containerd.io.x86_64 0:1.3.7-3.1.el7                                          \n  docker-ce-cli.x86_64 1:19.03.13-3.el7                                         \n  libcgroup.x86_64 0:0.41-21.el7                                                \n  libsemanage-python.x86_64 0:2.5-14.el7                                        \n  policycoreutils-python.x86_64 0:2.5-34.el7                                    \n  python-IPy.noarch 0:0.75-6.el7                                                \n  setools-libs.x86_64 0:3.3.8-4.el7                                             \n\nComplete!\n"]}

TASK [container-engine/docker : Ensure docker packages are installed] **************************************************
Friday 16 October 2020  01:59:26 +0000 (0:00:35.481)       0:01:14.367 ********

TASK [container-engine/docker : get available packages on Ubuntu] ******************************************************
Friday 16 October 2020  01:59:26 +0000 (0:00:00.060)       0:01:14.428 ********

TASK [container-engine/docker : show available packages on ubuntu] *****************************************************
Friday 16 October 2020  01:59:26 +0000 (0:00:00.040)       0:01:14.468 ********

TASK [container-engine/docker : Tell Debian hosts not to change the docker version with apt upgrade] *******************
Friday 16 October 2020  01:59:26 +0000 (0:00:00.043)       0:01:14.511 ********

TASK [container-engine/docker : ensure service is started if docker packages are already present] **********************
Friday 16 October 2020  01:59:26 +0000 (0:00:00.039)       0:01:14.551 ********
changed: [test1] => {"changed": true, "name": "docker", "state": "started", "status": {"ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "basic.target systemd-journald.socket containerd.service system.slice network-online.target docker.socket firewalld.service", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BindsTo": "containerd.service", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "Conflicts": "shutdown.target", "ConsistsOf": "docker.socket", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "yes", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "https://docs.docker.com", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/usr/lib/systemd/system/docker.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "18446744073709551615", "LimitNPROC": "18446744073709551615", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "0", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "docker.socket system.slice basic.target", "Restart": "always", "RestartUSec": "2s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "3", "StartLimitInterval": "60000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "0", "TimeoutStopUSec": "0", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "Wants": "network-online.target", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
 [WARNING]: flush_handlers task does not support when conditional


RUNNING HANDLER [container-engine/docker : restart docker] *************************************************************
Friday 16 October 2020  01:59:29 +0000 (0:00:03.048)       0:01:17.600 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001970", "end": "2020-10-16 01:59:34.030523", "rc": 0, "start": "2020-10-16 01:59:34.028553", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [container-engine/docker : Docker | reload systemd] ****************************************************
Friday 16 October 2020  01:59:30 +0000 (0:00:00.387)       0:01:17.987 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

RUNNING HANDLER [container-engine/docker : Docker | reload docker.socket] **********************************************
Friday 16 October 2020  01:59:30 +0000 (0:00:00.388)       0:01:18.376 ********

RUNNING HANDLER [container-engine/docker : Docker | reload docker] *****************************************************
Friday 16 October 2020  01:59:30 +0000 (0:00:00.047)       0:01:18.424 ********
changed: [test1] => {"changed": true, "name": "docker", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 01:59:33 UTC", "ActiveEnterTimestampMonotonic": "612040386", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "basic.target systemd-journald.socket containerd.service network-online.target firewalld.service system.slice docker.socket", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 01:59:32 UTC", "AssertTimestampMonotonic": "611223142", "Before": "shutdown.target", "BindsTo": "containerd.service", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 01:59:32 UTC", "ConditionTimestampMonotonic": "611223142", "Conflicts": "shutdown.target", "ConsistsOf": "docker.socket", "ControlGroup": "/system.slice/docker.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "yes", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "https://docs.docker.com", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "13374", "ExecMainStartTimestamp": "Fri 2020-10-16 01:59:32 UTC", "ExecMainStartTimestampMonotonic": "611225462", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/usr/lib/systemd/system/docker.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2020-10-16 01:59:32 UTC", "InactiveExitTimestampMonotonic": "611225488", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "18446744073709551615", "LimitNPROC": "18446744073709551615", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "13374", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "system.slice docker.socket basic.target", "Restart": "always", "RestartUSec": "2s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "3", "StartLimitInterval": "60000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "0", "TimeoutStopUSec": "0", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "Wants": "network-online.target", "WatchdogTimestamp": "Fri 2020-10-16 01:59:33 UTC", "WatchdogTimestampMonotonic": "612040220", "WatchdogUSec": "0"}}

RUNNING HANDLER [container-engine/docker : Docker | wait for docker] ***************************************************
Friday 16 October 2020  01:59:31 +0000 (0:00:00.559)       0:01:18.983 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "images"], "delta": "0:00:00.047740", "end": "2020-10-16 01:59:35.458279", "rc": 0, "start": "2020-10-16 01:59:35.410539", "stderr": "", "stderr_lines": [], "stdout": "REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE", "stdout_lines": ["REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE"]}

TASK [container-engine/docker : set fact for docker_version] ***********************************************************
Friday 16 October 2020  01:59:31 +0000 (0:00:00.318)       0:01:19.301 ********
ok: [test1] => {"changed": false, "cmd": ["docker", "version", "-f", "{{.Client.Version}}"], "delta": "0:00:00.037420", "end": "2020-10-16 01:59:35.742992", "rc": 0, "start": "2020-10-16 01:59:35.705572", "stderr": "", "stderr_lines": [], "stdout": "19.03.13", "stdout_lines": ["19.03.13"]}

TASK [container-engine/docker : check minimum docker version for docker_dns mode. You need at least docker version >= 1.12 for resolvconf_mode=docker_dns] ***
Friday 16 October 2020  01:59:31 +0000 (0:00:00.281)       0:01:19.582 ********

TASK [container-engine/docker : include_tasks] *************************************************************************
Friday 16 October 2020  01:59:31 +0000 (0:00:00.042)       0:01:19.624 ********

TASK [container-engine/docker : Create docker service systemd directory if it doesn't exist] ***************************
Friday 16 October 2020  01:59:32 +0000 (0:00:00.031)       0:01:19.656 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/docker.service.d", "secontext": "unconfined_u:object_r:systemd_unit_file_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [container-engine/docker : Write docker proxy drop-in] ************************************************************
Friday 16 October 2020  01:59:32 +0000 (0:00:00.209)       0:01:19.866 ********

TASK [container-engine/docker : get systemd version] *******************************************************************
Friday 16 October 2020  01:59:32 +0000 (0:00:00.053)       0:01:19.919 ********
ok: [test1] => {"changed": false, "cmd": "systemctl --version | head -n 1 | cut -d \" \" -f 2", "delta": "0:00:00.004488", "end": "2020-10-16 01:59:36.338792", "rc": 0, "start": "2020-10-16 01:59:36.334304", "stderr": "", "stderr_lines": [], "stdout": "219", "stdout_lines": ["219"]}

TASK [container-engine/docker : Write docker.service systemd file] *****************************************************
Friday 16 October 2020  01:59:32 +0000 (0:00:00.259)       0:01:20.178 ********
changed: [test1] => {"changed": true, "checksum": "7cb5a8e186a8a691b26ece4dc040d3c88d4727b0", "dest": "/etc/systemd/system/docker.service", "gid": 0, "group": "root", "md5sum": "ec6f7e6df3109fa6f5c471b68d41df92", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:container_unit_file_t:s0", "size": 671, "src": "/root/.ansible/tmp/ansible-tmp-1602813572.6441748-50226689512311/source", "state": "file", "uid": 0}

TASK [container-engine/docker : Write docker options systemd drop-in] **************************************************
Friday 16 October 2020  01:59:33 +0000 (0:00:00.532)       0:01:20.711 ********
changed: [test1] => {"changed": true, "checksum": "41c70f3516177f25bd9821c3ffcd64d9ace12640", "dest": "/etc/systemd/system/docker.service.d/docker-options.conf", "gid": 0, "group": "root", "md5sum": "48b82e8dab3606badb261752a7a25adc", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:container_unit_file_t:s0", "size": 140, "src": "/root/.ansible/tmp/ansible-tmp-1602813573.174301-225580430873104/source", "state": "file", "uid": 0}

TASK [container-engine/docker : Write docker dns systemd drop-in] ******************************************************
Friday 16 October 2020  01:59:33 +0000 (0:00:00.531)       0:01:21.243 ********
changed: [test1] => {"changed": true, "checksum": "6520f9407bbbe6c55c64a912cae1754838cf861d", "dest": "/etc/systemd/system/docker.service.d/docker-dns.conf", "gid": 0, "group": "root", "md5sum": "d05f8369014fc4c7845a90113eb57b85", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:container_unit_file_t:s0", "size": 257, "src": "/root/.ansible/tmp/ansible-tmp-1602813573.7095435-46857772241127/source", "state": "file", "uid": 0}

TASK [container-engine/docker : Copy docker orphan clean up script to the node] ****************************************
Friday 16 October 2020  01:59:34 +0000 (0:00:00.539)       0:01:21.783 ********

TASK [container-engine/docker : Write docker orphan clean up systemd drop-in] ******************************************
Friday 16 October 2020  01:59:34 +0000 (0:00:00.047)       0:01:21.830 ********

RUNNING HANDLER [container-engine/docker : restart docker] *************************************************************
Friday 16 October 2020  01:59:34 +0000 (0:00:00.028)       0:01:21.858 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002976", "end": "2020-10-16 01:59:38.287717", "rc": 0, "start": "2020-10-16 01:59:38.284741", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [container-engine/docker : Docker | reload systemd] ****************************************************
Friday 16 October 2020  01:59:34 +0000 (0:00:00.393)       0:01:22.252 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

RUNNING HANDLER [container-engine/docker : Docker | reload docker.socket] **********************************************
Friday 16 October 2020  01:59:34 +0000 (0:00:00.393)       0:01:22.646 ********

RUNNING HANDLER [container-engine/docker : Docker | reload docker] *****************************************************
Friday 16 October 2020  01:59:35 +0000 (0:00:00.045)       0:01:22.691 ********
changed: [test1] => {"changed": true, "name": "docker", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 01:59:35 UTC", "ActiveEnterTimestampMonotonic": "613426528", "ActiveExitTimestamp": "Fri 2020-10-16 01:59:34 UTC", "ActiveExitTimestampMonotonic": "613211333", "ActiveState": "active", "After": "docker.socket system.slice basic.target network.target containerd.service systemd-journald.socket", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 01:59:34 UTC", "AssertTimestampMonotonic": "613225036", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 01:59:34 UTC", "ConditionTimestampMonotonic": "613225035", "Conflicts": "shutdown.target", "ConsistsOf": "docker.socket", "ControlGroup": "/system.slice/docker.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "yes", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "http://docs.docker.com", "DropInPaths": "/etc/systemd/system/docker.service.d/docker-dns.conf /etc/systemd/system/docker.service.d/docker-options.conf", "Environment": "GOTRACEBACK=crash DOCKER_DNS_OPTIONS=     --dns 10.233.0.3 --dns 10.0.2.3       --dns-search default.svc.cluster.local --dns-search svc.cluster.local --dns-search OFFICE.DINGYI.IO       --dns-opt ndots:2 --dns-opt timeout:2 --dns-opt attempts:2    DOCKER_OPTS= --iptables=false      --data-root=/var/lib/docker  --log-opt max-size=50m --log-opt max-file=5", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "13521", "ExecMainStartTimestamp": "Fri 2020-10-16 01:59:34 UTC", "ExecMainStartTimestampMonotonic": "613229680", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd $DOCKER_OPTS $DOCKER_STORAGE_OPTIONS $DOCKER_NETWORK_OPTIONS $DOCKER_DNS_OPTIONS $INSECURE_REGISTRY ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/docker.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Fri 2020-10-16 01:59:34 UTC", "InactiveEnterTimestampMonotonic": "613216742", "InactiveExitTimestamp": "Fri 2020-10-16 01:59:34 UTC", "InactiveExitTimestampMonotonic": "613229710", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "1048576", "LimitNPROC": "1048576", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "13521", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "basic.target system.slice", "Restart": "on-failure", "RestartUSec": "100ms", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "3", "StartLimitInterval": "60000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "WatchdogTimestamp": "Fri 2020-10-16 01:59:35 UTC", "WatchdogTimestampMonotonic": "613426502", "WatchdogUSec": "0"}}

RUNNING HANDLER [container-engine/docker : Docker | wait for docker] ***************************************************
Friday 16 October 2020  01:59:35 +0000 (0:00:00.491)       0:01:23.183 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "images"], "delta": "0:00:00.039711", "end": "2020-10-16 01:59:39.662116", "rc": 0, "start": "2020-10-16 01:59:39.622405", "stderr": "", "stderr_lines": [], "stdout": "REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE", "stdout_lines": ["REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE"]}

TASK [container-engine/docker : ensure docker service is started and enabled] ******************************************
Friday 16 October 2020  01:59:35 +0000 (0:00:00.329)       0:01:23.512 ********
changed: [test1] => (item=docker) => {"changed": true, "enabled": true, "item": "docker", "name": "docker", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 01:59:39 UTC", "ActiveEnterTimestampMonotonic": "617620166", "ActiveExitTimestamp": "Fri 2020-10-16 01:59:39 UTC", "ActiveExitTimestampMonotonic": "617489851", "ActiveState": "active", "After": "docker.socket system.slice basic.target network.target containerd.service systemd-journald.socket", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 01:59:39 UTC", "AssertTimestampMonotonic": "617502836", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 01:59:39 UTC", "ConditionTimestampMonotonic": "617502836", "Conflicts": "shutdown.target", "ConsistsOf": "docker.socket", "ControlGroup": "/system.slice/docker.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "yes", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "http://docs.docker.com", "DropInPaths": "/etc/systemd/system/docker.service.d/docker-dns.conf /etc/systemd/system/docker.service.d/docker-options.conf", "Environment": "GOTRACEBACK=crash DOCKER_DNS_OPTIONS=     --dns 10.233.0.3 --dns 10.0.2.3       --dns-search default.svc.cluster.local --dns-search svc.cluster.local --dns-search OFFICE.DINGYI.IO       --dns-opt ndots:2 --dns-opt timeout:2 --dns-opt attempts:2    DOCKER_OPTS= --iptables=false      --data-root=/var/lib/docker  --log-opt max-size=50m --log-opt max-file=5", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "13877", "ExecMainStartTimestamp": "Fri 2020-10-16 01:59:39 UTC", "ExecMainStartTimestampMonotonic": "617507783", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd $DOCKER_OPTS $DOCKER_STORAGE_OPTIONS $DOCKER_NETWORK_OPTIONS $DOCKER_DNS_OPTIONS $INSECURE_REGISTRY ; ignore_errors=no ; start_time=[Fri 2020-10-16 01:59:39 UTC] ; stop_time=[n/a] ; pid=13877 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/docker.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Fri 2020-10-16 01:59:39 UTC", "InactiveEnterTimestampMonotonic": "617493860", "InactiveExitTimestamp": "Fri 2020-10-16 01:59:39 UTC", "InactiveExitTimestampMonotonic": "617507836", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "1048576", "LimitNPROC": "1048576", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "13877", "MemoryAccounting": "no", "MemoryCurrent": "32649216", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "basic.target system.slice", "Restart": "on-failure", "RestartUSec": "100ms", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "3", "StartLimitInterval": "60000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "10", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "WatchdogTimestamp": "Fri 2020-10-16 01:59:39 UTC", "WatchdogTimestampMonotonic": "617620137", "WatchdogUSec": "0"}}

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  01:59:36 +0000 (0:00:00.413)       0:01:23.925 ********
ok: [test1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  01:59:36 +0000 (0:00:00.133)       0:01:24.059 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  01:59:36 +0000 (0:00:00.045)       0:01:24.105 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  01:59:36 +0000 (0:00:00.331)       0:01:24.436 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/images", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.264)       0:01:24.700 ********
changed: [test1 -> localhost] => {"changed": true, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache/images", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.206)       0:01:24.906 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.047)       0:01:24.953 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.040)       0:01:24.993 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.041)       0:01:25.035 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.044)       0:01:25.080 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.045)       0:01:25.125 ********
included: /home/vagrant/kubespray/roles/download/tasks/prep_kubeadm_images.yml for test1

TASK [download : prep_kubeadm_images | Download kubeadm binary] ********************************************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.087)       0:01:25.213 ********
included: /home/vagrant/kubespray/roles/download/tasks/download_file.yml for test1

TASK [download : download_file | Starting download of file] ************************************************************
Friday 16 October 2020  01:59:37 +0000 (0:00:00.280)       0:01:25.493 ********
ok: [test1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubeadm"
}

TASK [download : download_file | Set pathname of cached file] **********************************************************
Friday 16 October 2020  01:59:38 +0000 (0:00:00.338)       0:01:25.832 ********
ok: [test1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.16.15-amd64"}, "changed": false}

TASK [download : download_file | Create dest directory on node] ********************************************************
Friday 16 October 2020  01:59:38 +0000 (0:00:00.314)       0:01:26.146 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 20, "state": "directory", "uid": 0}

TASK [download : download_file | Create local cache directory] *********************************************************
Friday 16 October 2020  01:59:38 +0000 (0:00:00.467)       0:01:26.613 ********
ok: [test1 -> localhost] => {"changed": false, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : download_file | Check if file is available in cache] **************************************************
Friday 16 October 2020  01:59:39 +0000 (0:00:00.208)       0:01:26.821 ********

TASK [download : download_file | Set file_is_cached fact based on previous task] ***************************************
Friday 16 October 2020  01:59:39 +0000 (0:00:00.040)       0:01:26.862 ********

TASK [download : download_file | Copy file from cache to nodes, if it is available] ************************************
Friday 16 October 2020  01:59:39 +0000 (0:00:00.040)       0:01:26.902 ********

TASK [download : download_file | Set mode and owner] *******************************************************************
Friday 16 October 2020  01:59:39 +0000 (0:00:00.039)       0:01:26.942 ********

TASK [download : download_file | Download item] ************************************************************************
Friday 16 October 2020  01:59:39 +0000 (0:00:00.059)       0:01:27.001 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "checksum_dest": null, "checksum_src": "bc832f574ddd30c5c95295a745deb3486cb0d6ce", "dest": "/tmp/releases/kubeadm-v1.16.15-amd64", "gid": 0, "group": "root", "md5sum": "e03ccc7908a3eace7b90094bf10b24e7", "mode": "0755", "msg": "OK (40488960 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 40488960, "src": "/root/.ansible/tmp/ansible-moduletmp-1602813583.74-QtVjC2/tmpf0sHyj", "state": "file", "status_code": 200, "uid": 0, "url": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubeadm"}

TASK [download : download_file | Extract file archives] ****************************************************************
Friday 16 October 2020  01:59:44 +0000 (0:00:05.435)       0:01:32.437 ********
included: /home/vagrant/kubespray/roles/download/tasks/extract_file.yml for test1

TASK [download : extract_file | Unpacking archive] *********************************************************************
Friday 16 October 2020  01:59:44 +0000 (0:00:00.067)       0:01:32.504 ********

TASK [download : download_file | Copy file back to ansible host file cache] ********************************************
Friday 16 October 2020  01:59:45 +0000 (0:00:00.229)       0:01:32.733 ********

TASK [download : prep_kubeadm_images | Sync kubeadm binary to nodes] ***************************************************
Friday 16 October 2020  01:59:45 +0000 (0:00:00.037)       0:01:32.771 ********

TASK [download : prep_kubeadm_images | Create kubeadm config] **********************************************************
Friday 16 October 2020  01:59:45 +0000 (0:00:00.236)       0:01:33.007 ********
changed: [test1] => {"changed": true, "checksum": "ccc5339a6945fef62f14350609c84d25dad6e3d4", "dest": "/etc/kubernetes/kubeadm-images.yaml", "gid": 0, "group": "root", "md5sum": "c0f570b0c6777cec5d2ea09b7faa8592", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 379, "src": "/root/.ansible/tmp/ansible-tmp-1602813585.4292011-139843460490895/source", "state": "file", "uid": 0}

TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***************************
Friday 16 October 2020  01:59:45 +0000 (0:00:00.570)       0:01:33.578 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": "/usr/bin/rsync --delay-updates -F --archive --no-owner --no-group --out-format=<<CHANGED>>%i %n%L /tmp/releases/kubeadm-v1.16.15-amd64 /usr/local/bin/kubeadm", "msg": ">f+++++++++ kubeadm-v1.16.15-amd64\n", "rc": 0, "stdout_lines": [">f+++++++++ kubeadm-v1.16.15-amd64"]}

TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] *************************************************
Friday 16 October 2020  01:59:46 +0000 (0:00:00.503)       0:01:34.082 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/kubeadm", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 40488960, "state": "file", "uid": 0}

TASK [download : prep_kubeadm_images | Generate list of required images] ***********************************************
Friday 16 October 2020  01:59:46 +0000 (0:00:00.216)       0:01:34.298 ********
ok: [test1] => {"changed": false, "cmd": "/usr/local/bin/kubeadm config images list --config=/etc/kubernetes/kubeadm-images.yaml | grep -v coredns", "delta": "0:00:00.057661", "end": "2020-10-16 01:59:50.713925", "rc": 0, "start": "2020-10-16 01:59:50.656264", "stderr": "", "stderr_lines": [], "stdout": "k8s.gcr.io/kube-apiserver:v1.16.15\nk8s.gcr.io/kube-controller-manager:v1.16.15\nk8s.gcr.io/kube-scheduler:v1.16.15\nk8s.gcr.io/kube-proxy:v1.16.15\nk8s.gcr.io/pause:3.1", "stdout_lines": ["k8s.gcr.io/kube-apiserver:v1.16.15", "k8s.gcr.io/kube-controller-manager:v1.16.15", "k8s.gcr.io/kube-scheduler:v1.16.15", "k8s.gcr.io/kube-proxy:v1.16.15", "k8s.gcr.io/pause:3.1"]}

TASK [download : prep_kubeadm_images | Parse list of images] ***********************************************************
Friday 16 October 2020  01:59:46 +0000 (0:00:00.265)       0:01:34.564 ********
ok: [test1] => (item=k8s.gcr.io/kube-apiserver:v1.16.15) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-apiserver", "value": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-apiserver", "tag": "v1.16.15"}}}, "changed": false, "item": "k8s.gcr.io/kube-apiserver:v1.16.15"}
ok: [test1] => (item=k8s.gcr.io/kube-controller-manager:v1.16.15) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-controller-manager", "value": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-controller-manager", "tag": "v1.16.15"}}}, "changed": false, "item": "k8s.gcr.io/kube-controller-manager:v1.16.15"}
ok: [test1] => (item=k8s.gcr.io/kube-scheduler:v1.16.15) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-scheduler", "value": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-scheduler", "tag": "v1.16.15"}}}, "changed": false, "item": "k8s.gcr.io/kube-scheduler:v1.16.15"}
ok: [test1] => (item=k8s.gcr.io/kube-proxy:v1.16.15) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-proxy", "value": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-proxy", "tag": "v1.16.15"}}}, "changed": false, "item": "k8s.gcr.io/kube-proxy:v1.16.15"}
ok: [test1] => (item=k8s.gcr.io/pause:3.1) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_pause", "value": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/pause", "tag": "3.1"}}}, "changed": false, "item": "k8s.gcr.io/pause:3.1"}

TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] ***********************************
Friday 16 October 2020  01:59:47 +0000 (0:00:00.243)       0:01:34.807 ********
ok: [test1] => {"ansible_facts": {"kubeadm_images": {"kubeadm_kube-apiserver": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-apiserver", "tag": "v1.16.15"}, "kubeadm_kube-controller-manager": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-controller-manager", "tag": "v1.16.15"}, "kubeadm_kube-proxy": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-proxy", "tag": "v1.16.15"}, "kubeadm_kube-scheduler": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/kube-scheduler", "tag": "v1.16.15"}, "kubeadm_pause": {"container": true, "enabled": true, "groups": "k8s-cluster", "repo": "k8s.gcr.io/pause", "tag": "3.1"}}}, "changed": false}

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  01:59:47 +0000 (0:00:00.083)       0:01:34.891 ********
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'etcd', 'value': {'container': True, 'file': False, 'enabled': True, 'version': 'v3.3.12', 'dest': '/tmp/releases/etcd-v3.3.12-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.3.12', 'sha256': '', 'url': 'https://github.com/coreos/etcd/releases/download/v3.3.12/etcd-v3.3.12-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_file.yml for test1 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v0.8.6', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v0.8.6.tgz', 'sha256': '994fbfcdbb2eedcfa87e48d8edb9bb365f4e2747a7e47658482556c12fd9b2f5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_file.yml for test1 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.16.15', 'dest': '/tmp/releases/kubeadm-v1.16.15-amd64', 'sha256': '2d00f583be1dcc0540122e1d3855d7074b6380176aa50673903334d2d612b10e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_file.yml for test1 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.16.15', 'dest': '/tmp/releases/kubelet-v1.16.15-amd64', 'sha256': '498e9576617b1846956f73a2da3ddc430eb728d469e62fbbd629e54cf33e5882', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_file.yml for test1 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.16.15', 'dest': '/tmp/releases/kubectl-v1.16.15-amd64', 'sha256': 'e8913069293156ddf55f243814a22d2384fc18b165efb6200606fdeaad146605', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube-master']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_file.yml for test1 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.7.3', 'dest': '/tmp/releases/calicoctl', 'sha256': '932f68e893e80e95e10f064f1e7745e438d456f41a6ff12d11bb16ca0cab735c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.7.3/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/calico/node', 'tag': 'v3.7.3', 'sha256': '', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/calico/cni', 'tag': 'v3.7.3', 'sha256': '', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/calico/kube-controllers', 'tag': 'v3.7.3', 'sha256': '', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.1', 'sha256': '', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': 1.17, 'sha256': '', 'groups': ['kube-node']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/coredns/coredns', 'tag': '1.6.0', 'sha256': '', 'groups': ['kube-master']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/k8s-dns-node-cache', 'tag': '1.15.8', 'sha256': '', 'groups': ['k8s-cluster']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cluster-proportional-autoscaler-amd64', 'tag': '1.6.0', 'sha256': '', 'groups': ['kube-master']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server-amd64', 'tag': 'v0.3.3', 'sha256': '', 'groups': ['kube-master']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'addon_resizer', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/addon-resizer', 'tag': '1.8.3', 'sha256': '', 'groups': ['kube-master']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'gcr.io/google_containers/kubernetes-dashboard-amd64', 'tag': 'v1.10.1', 'sha256': '', 'groups': ['kube-master']}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.16.15', 'groups': 'k8s-cluster'}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.16.15', 'groups': 'k8s-cluster'}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.16.15', 'groups': 'k8s-cluster'}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.16.15', 'groups': 'k8s-cluster'}})
included: /home/vagrant/kubespray/roles/download/tasks/download_container.yml for test1 => (item={'key': 'kubeadm_pause', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.1', 'groups': 'k8s-cluster'}})

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  01:59:49 +0000 (0:00:02.200)       0:01:37.092 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  01:59:49 +0000 (0:00:00.081)       0:01:37.174 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  01:59:49 +0000 (0:00:00.085)       0:01:37.259 ********
ok: [test1] => {"ansible_facts": {"pull_args": "quay.io/coreos/etcd:v3.3.12"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  01:59:49 +0000 (0:00:00.084)       0:01:37.344 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  01:59:49 +0000 (0:00:00.039)       0:01:37.384 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.316)       0:01:37.701 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.089)       0:01:37.790 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.102)       0:01:37.893 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.045)       0:01:37.939 ********
ok: [test1] => {
    "msg": "quay.io/coreos/etcd"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.080)       0:01:38.019 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.083)       0:01:38.102 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "quay.io/coreos/etcd:v3.3.12"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.085)       0:01:38.187 ********
ok: [test1] => {"ansible_facts": {"image_filename": "quay.io_coreos_etcd_v3.3.12.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.082)       0:01:38.270 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_coreos_etcd_v3.3.12.tar", "image_path_final": "/tmp/releases/images/quay.io_coreos_etcd_v3.3.12.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.084)       0:01:38.354 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.040)       0:01:38.394 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.038)       0:01:38.433 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.059)       0:01:38.493 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.041)       0:01:38.534 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  01:59:50 +0000 (0:00:00.101)       0:01:38.636 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  01:59:51 +0000 (0:00:00.318)       0:01:38.955 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  01:59:51 +0000 (0:00:00.080)       0:01:39.035 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  01:59:51 +0000 (0:00:00.047)       0:01:39.082 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  01:59:51 +0000 (0:00:00.104)       0:01:39.187 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "quay.io/coreos/etcd:v3.3.12"], "delta": "0:00:05.912276", "end": "2020-10-16 02:00:01.456492", "rc": 0, "start": "2020-10-16 01:59:55.544216", "stderr": "", "stderr_lines": [], "stdout": "v3.3.12: Pulling from coreos/etcd\n6c40cc604d8e: Pulling fs layer\n0c0f49f488a2: Pulling fs layer\n2a8faafca7e5: Pulling fs layer\na29a1dc564f3: Pulling fs layer\n0772095a9172: Pulling fs layer\nb7439762be07: Pulling fs layer\na29a1dc564f3: Waiting\n0772095a9172: Waiting\nb7439762be07: Waiting\n6c40cc604d8e: Verifying Checksum\n6c40cc604d8e: Download complete\n6c40cc604d8e: Pull complete\n2a8faafca7e5: Verifying Checksum\n2a8faafca7e5: Download complete\n0c0f49f488a2: Verifying Checksum\n0c0f49f488a2: Download complete\na29a1dc564f3: Verifying Checksum\na29a1dc564f3: Download complete\n0c0f49f488a2: Pull complete\n0772095a9172: Verifying Checksum\n0772095a9172: Download complete\nb7439762be07: Verifying Checksum\nb7439762be07: Download complete\n2a8faafca7e5: Pull complete\na29a1dc564f3: Pull complete\n0772095a9172: Pull complete\nb7439762be07: Pull complete\nDigest: sha256:e0511b8f682923a100b9588c5804bf3ea722e025ffe7036003953eee05f5ba7c\nStatus: Downloaded newer image for quay.io/coreos/etcd:v3.3.12\nquay.io/coreos/etcd:v3.3.12", "stdout_lines": ["v3.3.12: Pulling from coreos/etcd", "6c40cc604d8e: Pulling fs layer", "0c0f49f488a2: Pulling fs layer", "2a8faafca7e5: Pulling fs layer", "a29a1dc564f3: Pulling fs layer", "0772095a9172: Pulling fs layer", "b7439762be07: Pulling fs layer", "a29a1dc564f3: Waiting", "0772095a9172: Waiting", "b7439762be07: Waiting", "6c40cc604d8e: Verifying Checksum", "6c40cc604d8e: Download complete", "6c40cc604d8e: Pull complete", "2a8faafca7e5: Verifying Checksum", "2a8faafca7e5: Download complete", "0c0f49f488a2: Verifying Checksum", "0c0f49f488a2: Download complete", "a29a1dc564f3: Verifying Checksum", "a29a1dc564f3: Download complete", "0c0f49f488a2: Pull complete", "0772095a9172: Verifying Checksum", "0772095a9172: Download complete", "b7439762be07: Verifying Checksum", "b7439762be07: Download complete", "2a8faafca7e5: Pull complete", "a29a1dc564f3: Pull complete", "0772095a9172: Pull complete", "b7439762be07: Pull complete", "Digest: sha256:e0511b8f682923a100b9588c5804bf3ea722e025ffe7036003953eee05f5ba7c", "Status: Downloaded newer image for quay.io/coreos/etcd:v3.3.12", "quay.io/coreos/etcd:v3.3.12"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  01:59:57 +0000 (0:00:06.125)       0:01:45.312 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  01:59:57 +0000 (0:00:00.062)       0:01:45.375 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  01:59:57 +0000 (0:00:00.052)       0:01:45.427 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  01:59:57 +0000 (0:00:00.043)       0:01:45.471 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/quay.io_coreos_etcd_v3.3.12.tar", "state": "absent"}

TASK [download : download_file | Starting download of file] ************************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.203)       0:01:45.674 ********
ok: [test1] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz"
}

TASK [download : download_file | Set pathname of cached file] **********************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.080)       0:01:45.755 ********
ok: [test1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/cni-plugins-linux-amd64-v0.8.6.tgz"}, "changed": false}

TASK [download : download_file | Create dest directory on node] ********************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.081)       0:01:45.836 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 50, "state": "directory", "uid": 0}

TASK [download : download_file | Create local cache directory] *********************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.215)       0:01:46.051 ********
ok: [test1 -> localhost] => {"changed": false, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : download_file | Check if file is available in cache] **************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.204)       0:01:46.256 ********

TASK [download : download_file | Set file_is_cached fact based on previous task] ***************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.038)       0:01:46.294 ********

TASK [download : download_file | Copy file from cache to nodes, if it is available] ************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.045)       0:01:46.340 ********

TASK [download : download_file | Set mode and owner] *******************************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.037)       0:01:46.378 ********

TASK [download : download_file | Download item] ************************************************************************
Friday 16 October 2020  01:59:58 +0000 (0:00:00.061)       0:01:46.439 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "checksum_dest": null, "checksum_src": "a31251105250279fe57b4474d91d2db1d4d48b5a", "dest": "/tmp/releases/cni-plugins-linux-amd64-v0.8.6.tgz", "gid": 0, "group": "root", "md5sum": "6a3c50ac061c1f1f0a699c43f7f574c5", "mode": "0755", "msg": "OK (36878412 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 36878412, "src": "/root/.ansible/tmp/ansible-moduletmp-1602813602.84-5dFc4_/tmpD0NPQT", "state": "file", "status_code": 200, "uid": 0, "url": "https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz"}

TASK [download : download_file | Extract file archives] ****************************************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:09.667)       0:01:56.106 ********
included: /home/vagrant/kubespray/roles/download/tasks/extract_file.yml for test1

TASK [download : extract_file | Unpacking archive] *********************************************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:00.070)       0:01:56.176 ********

TASK [download : download_file | Copy file back to ansible host file cache] ********************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:00.042)       0:01:56.218 ********

TASK [download : download_file | Starting download of file] ************************************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:00.038)       0:01:56.257 ********
ok: [test1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubeadm"
}

TASK [download : download_file | Set pathname of cached file] **********************************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:00.090)       0:01:56.348 ********
ok: [test1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.16.15-amd64"}, "changed": false}

TASK [download : download_file | Create dest directory on node] ********************************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:00.083)       0:01:56.431 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 92, "state": "directory", "uid": 0}

TASK [download : download_file | Create local cache directory] *********************************************************
Friday 16 October 2020  02:00:08 +0000 (0:00:00.209)       0:01:56.641 ********
ok: [test1 -> localhost] => {"changed": false, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : download_file | Check if file is available in cache] **************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.204)       0:01:56.845 ********

TASK [download : download_file | Set file_is_cached fact based on previous task] ***************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.040)       0:01:56.885 ********

TASK [download : download_file | Copy file from cache to nodes, if it is available] ************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.040)       0:01:56.926 ********

TASK [download : download_file | Set mode and owner] *******************************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.040)       0:01:56.966 ********

TASK [download : download_file | Download item] ************************************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.063)       0:01:57.030 ********
ok: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": false, "dest": "/tmp/releases/kubeadm-v1.16.15-amd64", "gid": 0, "group": "root", "mode": "0755", "msg": "file already exists", "owner": "root", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 40488960, "state": "file", "uid": 0, "url": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubeadm"}

TASK [download : download_file | Extract file archives] ****************************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.366)       0:01:57.396 ********
included: /home/vagrant/kubespray/roles/download/tasks/extract_file.yml for test1

TASK [download : extract_file | Unpacking archive] *********************************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.074)       0:01:57.471 ********

TASK [download : download_file | Copy file back to ansible host file cache] ********************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.042)       0:01:57.513 ********

TASK [download : download_file | Starting download of file] ************************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.039)       0:01:57.553 ********
ok: [test1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubelet"
}

TASK [download : download_file | Set pathname of cached file] **********************************************************
Friday 16 October 2020  02:00:09 +0000 (0:00:00.085)       0:01:57.639 ********
ok: [test1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubelet-v1.16.15-amd64"}, "changed": false}

TASK [download : download_file | Create dest directory on node] ********************************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.089)       0:01:57.728 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 92, "state": "directory", "uid": 0}

TASK [download : download_file | Create local cache directory] *********************************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.215)       0:01:57.944 ********
ok: [test1 -> localhost] => {"changed": false, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : download_file | Check if file is available in cache] **************************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.199)       0:01:58.144 ********

TASK [download : download_file | Set file_is_cached fact based on previous task] ***************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.039)       0:01:58.183 ********

TASK [download : download_file | Copy file from cache to nodes, if it is available] ************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.038)       0:01:58.222 ********

TASK [download : download_file | Set mode and owner] *******************************************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.038)       0:01:58.260 ********

TASK [download : download_file | Download item] ************************************************************************
Friday 16 October 2020  02:00:10 +0000 (0:00:00.059)       0:01:58.320 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "checksum_dest": null, "checksum_src": "e79b8a7b9c81d5963030d4e74855082bee997429", "dest": "/tmp/releases/kubelet-v1.16.15-amd64", "gid": 0, "group": "root", "md5sum": "a04494d1ce2baf22b2417dd4794b7eb0", "mode": "0755", "msg": "OK (111234072 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 111234072, "src": "/root/.ansible/tmp/ansible-moduletmp-1602813614.76-lRxHnd/tmptKLmam", "state": "file", "status_code": 200, "uid": 0, "url": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubelet"}

TASK [download : download_file | Extract file archives] ****************************************************************
Friday 16 October 2020  02:00:21 +0000 (0:00:11.299)       0:02:09.620 ********
included: /home/vagrant/kubespray/roles/download/tasks/extract_file.yml for test1

TASK [download : extract_file | Unpacking archive] *********************************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.070)       0:02:09.690 ********

TASK [download : download_file | Copy file back to ansible host file cache] ********************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.041)       0:02:09.732 ********

TASK [download : download_file | Starting download of file] ************************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.038)       0:02:09.770 ********
ok: [test1] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubectl"
}

TASK [download : download_file | Set pathname of cached file] **********************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.106)       0:02:09.877 ********
ok: [test1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubectl-v1.16.15-amd64"}, "changed": false}

TASK [download : download_file | Create dest directory on node] ********************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.084)       0:02:09.961 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 122, "state": "directory", "uid": 0}

TASK [download : download_file | Create local cache directory] *********************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.226)       0:02:10.188 ********
ok: [test1 -> localhost] => {"changed": false, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : download_file | Check if file is available in cache] **************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.219)       0:02:10.408 ********

TASK [download : download_file | Set file_is_cached fact based on previous task] ***************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.041)       0:02:10.449 ********

TASK [download : download_file | Copy file from cache to nodes, if it is available] ************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.038)       0:02:10.488 ********

TASK [download : download_file | Set mode and owner] *******************************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.041)       0:02:10.530 ********

TASK [download : download_file | Download item] ************************************************************************
Friday 16 October 2020  02:00:22 +0000 (0:00:00.065)       0:02:10.596 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "checksum_dest": null, "checksum_src": "400d204aee57e02f72088f1beea80da990c73cdf", "dest": "/tmp/releases/kubectl-v1.16.15-amd64", "gid": 0, "group": "root", "md5sum": "d6d84f4e2bd19628f0fb85e477c87fa8", "mode": "0755", "msg": "OK (42967040 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 42967040, "src": "/root/.ansible/tmp/ansible-moduletmp-1602813627.17-BeOOV5/tmpIem8sv", "state": "file", "status_code": 200, "uid": 0, "url": "https://storage.googleapis.com/kubernetes-release/release/v1.16.15/bin/linux/amd64/kubectl"}

TASK [download : download_file | Extract file archives] ****************************************************************
Friday 16 October 2020  02:00:28 +0000 (0:00:06.001)       0:02:16.597 ********
included: /home/vagrant/kubespray/roles/download/tasks/extract_file.yml for test1

TASK [download : extract_file | Unpacking archive] *********************************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.074)       0:02:16.672 ********

TASK [download : download_file | Copy file back to ansible host file cache] ********************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.042)       0:02:16.715 ********

TASK [download : download_file | Starting download of file] ************************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.038)       0:02:16.753 ********
ok: [test1] => {
    "msg": "https://github.com/projectcalico/calicoctl/releases/download/v3.7.3/calicoctl-linux-amd64"
}

TASK [download : download_file | Set pathname of cached file] **********************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.079)       0:02:16.833 ********
ok: [test1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/calicoctl"}, "changed": false}

TASK [download : download_file | Create dest directory on node] ********************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.085)       0:02:16.919 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 152, "state": "directory", "uid": 0}

TASK [download : download_file | Create local cache directory] *********************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.216)       0:02:17.135 ********
ok: [test1 -> localhost] => {"changed": false, "gid": 1000, "group": "vagrant", "mode": "0755", "owner": "vagrant", "path": "/tmp/kubespray_cache", "size": 4096, "state": "directory", "uid": 1000}

TASK [download : download_file | Check if file is available in cache] **************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.205)       0:02:17.340 ********

TASK [download : download_file | Set file_is_cached fact based on previous task] ***************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.039)       0:02:17.380 ********

TASK [download : download_file | Copy file from cache to nodes, if it is available] ************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.040)       0:02:17.420 ********

TASK [download : download_file | Set mode and owner] *******************************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.043)       0:02:17.463 ********

TASK [download : download_file | Download item] ************************************************************************
Friday 16 October 2020  02:00:29 +0000 (0:00:00.058)       0:02:17.522 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "checksum_dest": null, "checksum_src": "84f9e061d85fddf6437700a90af18084654cbb21", "dest": "/tmp/releases/calicoctl", "gid": 0, "group": "root", "md5sum": "7840346b42d3df44cecb256266104e88", "mode": "0755", "msg": "OK (35861536 bytes)", "owner": "root", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 35861536, "src": "/root/.ansible/tmp/ansible-moduletmp-1602813634.67-MMfjNU/tmpnI4tUX", "state": "file", "status_code": 200, "uid": 0, "url": "https://github.com/projectcalico/calicoctl/releases/download/v3.7.3/calicoctl-linux-amd64"}

TASK [download : download_file | Extract file archives] ****************************************************************
Friday 16 October 2020  02:00:38 +0000 (0:00:09.028)       0:02:26.550 ********
included: /home/vagrant/kubespray/roles/download/tasks/extract_file.yml for test1

TASK [download : extract_file | Unpacking archive] *********************************************************************
Friday 16 October 2020  02:00:38 +0000 (0:00:00.070)       0:02:26.621 ********

TASK [download : download_file | Copy file back to ansible host file cache] ********************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.043)       0:02:26.664 ********

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.037)       0:02:26.702 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.082)       0:02:26.785 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.083)       0:02:26.868 ********
ok: [test1] => {"ansible_facts": {"pull_args": "docker.io/calico/node:v3.7.3"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.088)       0:02:26.957 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.043)       0:02:27.000 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.341)       0:02:27.342 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.088)       0:02:27.431 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.111)       0:02:27.542 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:00:39 +0000 (0:00:00.048)       0:02:27.591 ********
ok: [test1] => {
    "msg": "docker.io/calico/node"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.082)       0:02:27.673 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.082)       0:02:27.756 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "docker.io/calico/node:v3.7.3"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.085)       0:02:27.841 ********
ok: [test1] => {"ansible_facts": {"image_filename": "docker.io_calico_node_v3.7.3.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.083)       0:02:27.925 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_calico_node_v3.7.3.tar", "image_path_final": "/tmp/releases/images/docker.io_calico_node_v3.7.3.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.087)       0:02:28.012 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.039)       0:02:28.052 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.037)       0:02:28.090 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.060)       0:02:28.151 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.041)       0:02:28.192 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.101)       0:02:28.294 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:00:40 +0000 (0:00:00.311)       0:02:28.605 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:00:41 +0000 (0:00:00.080)       0:02:28.685 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:00:41 +0000 (0:00:00.042)       0:02:28.728 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:00:41 +0000 (0:00:00.099)       0:02:28.827 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "docker.io/calico/node:v3.7.3"], "delta": "0:00:15.301494", "end": "2020-10-16 02:01:02.156333", "rc": 0, "start": "2020-10-16 02:00:46.854839", "stderr": "", "stderr_lines": [], "stdout": "v3.7.3: Pulling from calico/node\n27833a3ba0a5: Pulling fs layer\n876ce371124d: Pulling fs layer\nbd5563b0fe6e: Pulling fs layer\nc8b9144b9508: Pulling fs layer\nafa3aaafdcf4: Pulling fs layer\n02692ea2b1d5: Pulling fs layer\n873bc9bf36bf: Pulling fs layer\n7935b08ac09f: Pulling fs layer\nafa3aaafdcf4: Waiting\n02692ea2b1d5: Waiting\n873bc9bf36bf: Waiting\n7935b08ac09f: Waiting\nc8b9144b9508: Waiting\nbd5563b0fe6e: Verifying Checksum\nbd5563b0fe6e: Download complete\nc8b9144b9508: Verifying Checksum\nc8b9144b9508: Download complete\nafa3aaafdcf4: Verifying Checksum\nafa3aaafdcf4: Download complete\n876ce371124d: Verifying Checksum\n876ce371124d: Download complete\n27833a3ba0a5: Verifying Checksum\n27833a3ba0a5: Download complete\n02692ea2b1d5: Verifying Checksum\n02692ea2b1d5: Download complete\n7935b08ac09f: Verifying Checksum\n7935b08ac09f: Download complete\n873bc9bf36bf: Verifying Checksum\n873bc9bf36bf: Download complete\n27833a3ba0a5: Pull complete\n876ce371124d: Pull complete\nbd5563b0fe6e: Pull complete\nc8b9144b9508: Pull complete\nafa3aaafdcf4: Pull complete\n02692ea2b1d5: Pull complete\n873bc9bf36bf: Pull complete\n7935b08ac09f: Pull complete\nDigest: sha256:a2782b53500c96e35299b8af729eaf39423f9ffd903d9fda675073f4a063502a\nStatus: Downloaded newer image for calico/node:v3.7.3\ndocker.io/calico/node:v3.7.3", "stdout_lines": ["v3.7.3: Pulling from calico/node", "27833a3ba0a5: Pulling fs layer", "876ce371124d: Pulling fs layer", "bd5563b0fe6e: Pulling fs layer", "c8b9144b9508: Pulling fs layer", "afa3aaafdcf4: Pulling fs layer", "02692ea2b1d5: Pulling fs layer", "873bc9bf36bf: Pulling fs layer", "7935b08ac09f: Pulling fs layer", "afa3aaafdcf4: Waiting", "02692ea2b1d5: Waiting", "873bc9bf36bf: Waiting", "7935b08ac09f: Waiting", "c8b9144b9508: Waiting", "bd5563b0fe6e: Verifying Checksum", "bd5563b0fe6e: Download complete", "c8b9144b9508: Verifying Checksum", "c8b9144b9508: Download complete", "afa3aaafdcf4: Verifying Checksum", "afa3aaafdcf4: Download complete", "876ce371124d: Verifying Checksum", "876ce371124d: Download complete", "27833a3ba0a5: Verifying Checksum", "27833a3ba0a5: Download complete", "02692ea2b1d5: Verifying Checksum", "02692ea2b1d5: Download complete", "7935b08ac09f: Verifying Checksum", "7935b08ac09f: Download complete", "873bc9bf36bf: Verifying Checksum", "873bc9bf36bf: Download complete", "27833a3ba0a5: Pull complete", "876ce371124d: Pull complete", "bd5563b0fe6e: Pull complete", "c8b9144b9508: Pull complete", "afa3aaafdcf4: Pull complete", "02692ea2b1d5: Pull complete", "873bc9bf36bf: Pull complete", "7935b08ac09f: Pull complete", "Digest: sha256:a2782b53500c96e35299b8af729eaf39423f9ffd903d9fda675073f4a063502a", "Status: Downloaded newer image for calico/node:v3.7.3", "docker.io/calico/node:v3.7.3"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:00:55 +0000 (0:00:14.347)       0:02:43.175 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:00:55 +0000 (0:00:00.060)       0:02:43.235 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:00:55 +0000 (0:00:00.043)       0:02:43.278 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:00:55 +0000 (0:00:00.038)       0:02:43.317 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/docker.io_calico_node_v3.7.3.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:00:55 +0000 (0:00:00.212)       0:02:43.529 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:00:55 +0000 (0:00:00.082)       0:02:43.611 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.083)       0:02:43.695 ********
ok: [test1] => {"ansible_facts": {"pull_args": "docker.io/calico/cni:v3.7.3"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.082)       0:02:43.777 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.041)       0:02:43.819 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.366)       0:02:44.186 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.090)       0:02:44.276 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.102)       0:02:44.378 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.048)       0:02:44.427 ********
ok: [test1] => {
    "msg": "docker.io/calico/cni"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.083)       0:02:44.511 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:00:56 +0000 (0:00:00.081)       0:02:44.592 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "docker.io/calico/cni:v3.7.3"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.086)       0:02:44.678 ********
ok: [test1] => {"ansible_facts": {"image_filename": "docker.io_calico_cni_v3.7.3.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.079)       0:02:44.758 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_calico_cni_v3.7.3.tar", "image_path_final": "/tmp/releases/images/docker.io_calico_cni_v3.7.3.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.084)       0:02:44.842 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.040)       0:02:44.883 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.039)       0:02:44.922 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.061)       0:02:44.983 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.041)       0:02:45.025 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.100)       0:02:45.125 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.299)       0:02:45.425 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:00:57 +0000 (0:00:00.088)       0:02:45.513 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.041)       0:02:45.555 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:00:57 +0000 (0:00:00.099)       0:02:45.654 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "docker.io/calico/cni:v3.7.3"], "delta": "0:00:09.197339", "end": "2020-10-16 02:01:14.270645", "rc": 0, "start": "2020-10-16 02:01:05.073306", "stderr": "", "stderr_lines": [], "stdout": "v3.7.3: Pulling from calico/cni\n27833a3ba0a5: Already exists\n721f98eef711: Pulling fs layer\nb1d8d882f6de: Pulling fs layer\n26ee977bfd07: Pulling fs layer\nb1d8d882f6de: Verifying Checksum\nb1d8d882f6de: Download complete\n26ee977bfd07: Verifying Checksum\n26ee977bfd07: Download complete\n721f98eef711: Verifying Checksum\n721f98eef711: Download complete\n721f98eef711: Pull complete\nb1d8d882f6de: Pull complete\n26ee977bfd07: Pull complete\nDigest: sha256:258a0cb3c25022e44ebda3606112c40865adb67b8fb7be3d119f960957301ad6\nStatus: Downloaded newer image for calico/cni:v3.7.3\ndocker.io/calico/cni:v3.7.3", "stdout_lines": ["v3.7.3: Pulling from calico/cni", "27833a3ba0a5: Already exists", "721f98eef711: Pulling fs layer", "b1d8d882f6de: Pulling fs layer", "26ee977bfd07: Pulling fs layer", "b1d8d882f6de: Verifying Checksum", "b1d8d882f6de: Download complete", "26ee977bfd07: Verifying Checksum", "26ee977bfd07: Download complete", "721f98eef711: Verifying Checksum", "721f98eef711: Download complete", "721f98eef711: Pull complete", "b1d8d882f6de: Pull complete", "26ee977bfd07: Pull complete", "Digest: sha256:258a0cb3c25022e44ebda3606112c40865adb67b8fb7be3d119f960957301ad6", "Status: Downloaded newer image for calico/cni:v3.7.3", "docker.io/calico/cni:v3.7.3"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:01:06 +0000 (0:00:08.703)       0:02:54.358 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:01:06 +0000 (0:00:00.060)       0:02:54.419 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:01:06 +0000 (0:00:00.041)       0:02:54.460 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:01:06 +0000 (0:00:00.046)       0:02:54.507 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/docker.io_calico_cni_v3.7.3.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.254)       0:02:54.761 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.081)       0:02:54.843 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.082)       0:02:54.925 ********
ok: [test1] => {"ansible_facts": {"pull_args": "docker.io/calico/kube-controllers:v3.7.3"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.083)       0:02:55.009 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.043)       0:02:55.052 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.318)       0:02:55.371 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.083)       0:02:55.455 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.101)       0:02:55.556 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:01:07 +0000 (0:00:00.046)       0:02:55.603 ********
ok: [test1] => {
    "msg": "docker.io/calico/kube-controllers"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.082)       0:02:55.685 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.081)       0:02:55.766 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "docker.io/calico/kube-controllers:v3.7.3"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.140)       0:02:55.907 ********
ok: [test1] => {"ansible_facts": {"image_filename": "docker.io_calico_kube-controllers_v3.7.3.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.133)       0:02:56.041 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_calico_kube-controllers_v3.7.3.tar", "image_path_final": "/tmp/releases/images/docker.io_calico_kube-controllers_v3.7.3.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.140)       0:02:56.181 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.040)       0:02:56.221 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.043)       0:02:56.265 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.063)       0:02:56.329 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.042)       0:02:56.371 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:01:08 +0000 (0:00:00.100)       0:02:56.472 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:01:09 +0000 (0:00:00.291)       0:02:56.764 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:01:09 +0000 (0:00:00.082)       0:02:56.846 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:01:09 +0000 (0:00:00.041)       0:02:56.887 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:01:09 +0000 (0:00:00.159)       0:02:57.047 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "docker.io/calico/kube-controllers:v3.7.3"], "delta": "0:00:07.551056", "end": "2020-10-16 02:01:24.896838", "rc": 0, "start": "2020-10-16 02:01:17.345782", "stderr": "", "stderr_lines": [], "stdout": "v3.7.3: Pulling from calico/kube-controllers\n821ecb6b759c: Pulling fs layer\n1dab4222c54e: Pulling fs layer\n1dab4222c54e: Verifying Checksum\n1dab4222c54e: Download complete\n821ecb6b759c: Verifying Checksum\n821ecb6b759c: Download complete\n821ecb6b759c: Pull complete\n1dab4222c54e: Pull complete\nDigest: sha256:6bc3fd181fabb580df33442d728b39d4eeccae0883a50d85b1a26cac796a2999\nStatus: Downloaded newer image for calico/kube-controllers:v3.7.3\ndocker.io/calico/kube-controllers:v3.7.3", "stdout_lines": ["v3.7.3: Pulling from calico/kube-controllers", "821ecb6b759c: Pulling fs layer", "1dab4222c54e: Pulling fs layer", "1dab4222c54e: Verifying Checksum", "1dab4222c54e: Download complete", "821ecb6b759c: Verifying Checksum", "821ecb6b759c: Download complete", "821ecb6b759c: Pull complete", "1dab4222c54e: Pull complete", "Digest: sha256:6bc3fd181fabb580df33442d728b39d4eeccae0883a50d85b1a26cac796a2999", "Status: Downloaded newer image for calico/kube-controllers:v3.7.3", "docker.io/calico/kube-controllers:v3.7.3"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:07.823)       0:03:04.870 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.059)       0:03:04.930 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.043)       0:03:04.973 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.038)       0:03:05.011 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/docker.io_calico_kube-controllers_v3.7.3.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.260)       0:03:05.272 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.086)       0:03:05.358 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.079)       0:03:05.437 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/pause:3.1"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.081)       0:03:05.519 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:01:17 +0000 (0:00:00.039)       0:03:05.559 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.361)       0:03:05.921 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.085)       0:03:06.007 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.100)       0:03:06.107 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.046)       0:03:06.154 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/pause"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.089)       0:03:06.244 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.138)       0:03:06.382 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/pause:3.1"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:01:18 +0000 (0:00:00.140)       0:03:06.523 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_pause_3.1.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.139)       0:03:06.662 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_pause_3.1.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_pause_3.1.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.137)       0:03:06.800 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.047)       0:03:06.847 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.038)       0:03:06.886 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.061)       0:03:06.947 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.044)       0:03:06.992 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.097)       0:03:07.090 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.303)       0:03:07.393 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:01:19 +0000 (0:00:00.147)       0:03:07.541 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:01:19 +0000 (0:00:00.041)       0:03:07.583 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:01:20 +0000 (0:00:00.159)       0:03:07.742 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/pause:3.1"], "delta": "0:00:01.077199", "end": "2020-10-16 02:01:29.116057", "rc": 0, "start": "2020-10-16 02:01:28.038858", "stderr": "", "stderr_lines": [], "stdout": "3.1: Pulling from pause\n67ddbfb20a22: Pulling fs layer\n67ddbfb20a22: Verifying Checksum\n67ddbfb20a22: Download complete\n67ddbfb20a22: Pull complete\nDigest: sha256:f78411e19d84a252e53bff71a4407a5686c46983a2c2eeed83929b888179acea\nStatus: Downloaded newer image for k8s.gcr.io/pause:3.1\nk8s.gcr.io/pause:3.1", "stdout_lines": ["3.1: Pulling from pause", "67ddbfb20a22: Pulling fs layer", "67ddbfb20a22: Verifying Checksum", "67ddbfb20a22: Download complete", "67ddbfb20a22: Pull complete", "Digest: sha256:f78411e19d84a252e53bff71a4407a5686c46983a2c2eeed83929b888179acea", "Status: Downloaded newer image for k8s.gcr.io/pause:3.1", "k8s.gcr.io/pause:3.1"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:01:21 +0000 (0:00:01.351)       0:03:09.094 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:01:21 +0000 (0:00:00.061)       0:03:09.155 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:01:21 +0000 (0:00:00.042)       0:03:09.198 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:01:21 +0000 (0:00:00.038)       0:03:09.237 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_pause_3.1.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:01:21 +0000 (0:00:00.211)       0:03:09.448 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:01:21 +0000 (0:00:00.084)       0:03:09.532 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:01:21 +0000 (0:00:00.087)       0:03:09.620 ********
ok: [test1] => {"ansible_facts": {"pull_args": "docker.io/library/nginx:1.17"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.085)       0:03:09.705 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.039)       0:03:09.745 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.380)       0:03:10.126 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.156)       0:03:10.282 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.173)       0:03:10.456 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.048)       0:03:10.504 ********
ok: [test1] => {
    "msg": "docker.io/library/nginx"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:01:22 +0000 (0:00:00.136)       0:03:10.641 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.138)       0:03:10.779 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "docker.io/library/nginx:1.17"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.137)       0:03:10.916 ********
ok: [test1] => {"ansible_facts": {"image_filename": "docker.io_library_nginx_1.17.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.080)       0:03:10.997 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_library_nginx_1.17.tar", "image_path_final": "/tmp/releases/images/docker.io_library_nginx_1.17.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.082)       0:03:11.079 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.047)       0:03:11.126 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.037)       0:03:11.164 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.059)       0:03:11.224 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.041)       0:03:11.265 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:01:23 +0000 (0:00:00.108)       0:03:11.374 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:01:24 +0000 (0:00:00.349)       0:03:11.724 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:01:24 +0000 (0:00:00.136)       0:03:11.861 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:01:24 +0000 (0:00:00.042)       0:03:11.903 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:01:24 +0000 (0:00:00.156)       0:03:12.060 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "docker.io/library/nginx:1.17"], "delta": "0:00:12.668259", "end": "2020-10-16 02:01:45.014406", "rc": 0, "start": "2020-10-16 02:01:32.346147", "stderr": "", "stderr_lines": [], "stdout": "1.17: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nafb6ec6fdc1c: Verifying Checksum\nafb6ec6fdc1c: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:6fff55753e3b34e36e24e37039ee9eae1fe38a6420d8ae16ef37c92d1eb26699\nStatus: Downloaded newer image for nginx:1.17\ndocker.io/library/nginx:1.17", "stdout_lines": ["1.17: Pulling from library/nginx", "afb6ec6fdc1c: Pulling fs layer", "b90c53a0b692: Pulling fs layer", "11fa52a0fdc0: Pulling fs layer", "11fa52a0fdc0: Verifying Checksum", "11fa52a0fdc0: Download complete", "afb6ec6fdc1c: Verifying Checksum", "afb6ec6fdc1c: Download complete", "b90c53a0b692: Verifying Checksum", "b90c53a0b692: Download complete", "afb6ec6fdc1c: Pull complete", "b90c53a0b692: Pull complete", "11fa52a0fdc0: Pull complete", "Digest: sha256:6fff55753e3b34e36e24e37039ee9eae1fe38a6420d8ae16ef37c92d1eb26699", "Status: Downloaded newer image for nginx:1.17", "docker.io/library/nginx:1.17"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:01:37 +0000 (0:00:12.942)       0:03:25.002 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:01:37 +0000 (0:00:00.060)       0:03:25.063 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:01:37 +0000 (0:00:00.043)       0:03:25.106 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:01:37 +0000 (0:00:00.038)       0:03:25.145 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/docker.io_library_nginx_1.17.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:01:37 +0000 (0:00:00.278)       0:03:25.423 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:01:37 +0000 (0:00:00.090)       0:03:25.514 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.146)       0:03:25.660 ********
ok: [test1] => {"ansible_facts": {"pull_args": "docker.io/coredns/coredns:1.6.0"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.145)       0:03:25.806 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.043)       0:03:25.850 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.397)       0:03:26.247 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.155)       0:03:26.402 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.160)       0:03:26.563 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:01:38 +0000 (0:00:00.046)       0:03:26.609 ********
ok: [test1] => {
    "msg": "docker.io/coredns/coredns"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.139)       0:03:26.748 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.142)       0:03:26.891 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "docker.io/coredns/coredns:1.6.0"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.141)       0:03:27.032 ********
ok: [test1] => {"ansible_facts": {"image_filename": "docker.io_coredns_coredns_1.6.0.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.140)       0:03:27.173 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_coredns_coredns_1.6.0.tar", "image_path_final": "/tmp/releases/images/docker.io_coredns_coredns_1.6.0.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.145)       0:03:27.319 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.039)       0:03:27.358 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.039)       0:03:27.398 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.058)       0:03:27.457 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.043)       0:03:27.501 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:01:39 +0000 (0:00:00.097)       0:03:27.599 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:01:40 +0000 (0:00:00.401)       0:03:28.000 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:01:40 +0000 (0:00:00.145)       0:03:28.146 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:01:40 +0000 (0:00:00.045)       0:03:28.191 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:01:40 +0000 (0:00:00.161)       0:03:28.353 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "docker.io/coredns/coredns:1.6.0"], "delta": "0:00:06.551948", "end": "2020-10-16 02:01:55.188432", "rc": 0, "start": "2020-10-16 02:01:48.636484", "stderr": "", "stderr_lines": [], "stdout": "1.6.0: Pulling from coredns/coredns\nc6568d217a00: Pulling fs layer\n57189c74f55b: Pulling fs layer\nc6568d217a00: Verifying Checksum\nc6568d217a00: Download complete\nc6568d217a00: Pull complete\n57189c74f55b: Verifying Checksum\n57189c74f55b: Download complete\n57189c74f55b: Pull complete\nDigest: sha256:263d03f2b889a75a0b91e035c2a14d45d7c1559c53444c5f7abf3a76014b779d\nStatus: Downloaded newer image for coredns/coredns:1.6.0\ndocker.io/coredns/coredns:1.6.0", "stdout_lines": ["1.6.0: Pulling from coredns/coredns", "c6568d217a00: Pulling fs layer", "57189c74f55b: Pulling fs layer", "c6568d217a00: Verifying Checksum", "c6568d217a00: Download complete", "c6568d217a00: Pull complete", "57189c74f55b: Verifying Checksum", "57189c74f55b: Download complete", "57189c74f55b: Pull complete", "Digest: sha256:263d03f2b889a75a0b91e035c2a14d45d7c1559c53444c5f7abf3a76014b779d", "Status: Downloaded newer image for coredns/coredns:1.6.0", "docker.io/coredns/coredns:1.6.0"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:01:47 +0000 (0:00:06.829)       0:03:35.182 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:01:47 +0000 (0:00:00.060)       0:03:35.243 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:01:47 +0000 (0:00:00.041)       0:03:35.284 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:01:47 +0000 (0:00:00.041)       0:03:35.326 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/docker.io_coredns_coredns_1.6.0.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:01:47 +0000 (0:00:00.266)       0:03:35.593 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:01:48 +0000 (0:00:00.082)       0:03:35.676 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:01:48 +0000 (0:00:00.143)       0:03:35.819 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/k8s-dns-node-cache:1.15.8"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:01:48 +0000 (0:00:00.139)       0:03:35.959 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:01:48 +0000 (0:00:00.039)       0:03:35.998 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:01:48 +0000 (0:00:00.405)       0:03:36.404 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:01:48 +0000 (0:00:00.148)       0:03:36.552 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.163)       0:03:36.716 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.049)       0:03:36.765 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/k8s-dns-node-cache"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.151)       0:03:36.917 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.153)       0:03:37.071 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/k8s-dns-node-cache:1.15.8"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.141)       0:03:37.213 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_k8s-dns-node-cache_1.15.8.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.136)       0:03:37.349 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_k8s-dns-node-cache_1.15.8.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_k8s-dns-node-cache_1.15.8.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.141)       0:03:37.491 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.039)       0:03:37.531 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.038)       0:03:37.570 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:01:49 +0000 (0:00:00.059)       0:03:37.630 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:01:50 +0000 (0:00:00.041)       0:03:37.672 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:01:50 +0000 (0:00:00.096)       0:03:37.768 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:01:50 +0000 (0:00:00.442)       0:03:38.211 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:01:50 +0000 (0:00:00.146)       0:03:38.357 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:01:50 +0000 (0:00:00.042)       0:03:38.400 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:01:50 +0000 (0:00:00.165)       0:03:38.565 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/k8s-dns-node-cache:1.15.8"], "delta": "0:00:06.388529", "end": "2020-10-16 02:02:05.240888", "rc": 0, "start": "2020-10-16 02:01:58.852359", "stderr": "", "stderr_lines": [], "stdout": "1.15.8: Pulling from k8s-dns-node-cache\n39fafc05754f: Pulling fs layer\nd98efe364a78: Pulling fs layer\n7c5f17f5ec8d: Pulling fs layer\nd98efe364a78: Verifying Checksum\nd98efe364a78: Download complete\n39fafc05754f: Verifying Checksum\n39fafc05754f: Download complete\n7c5f17f5ec8d: Verifying Checksum\n7c5f17f5ec8d: Download complete\n39fafc05754f: Pull complete\nd98efe364a78: Pull complete\n7c5f17f5ec8d: Pull complete\nDigest: sha256:e56ae401a57af3274bfdc81febcde521f2696c9057cc825ade4a7cb8b0367152\nStatus: Downloaded newer image for k8s.gcr.io/k8s-dns-node-cache:1.15.8\nk8s.gcr.io/k8s-dns-node-cache:1.15.8", "stdout_lines": ["1.15.8: Pulling from k8s-dns-node-cache", "39fafc05754f: Pulling fs layer", "d98efe364a78: Pulling fs layer", "7c5f17f5ec8d: Pulling fs layer", "d98efe364a78: Verifying Checksum", "d98efe364a78: Download complete", "39fafc05754f: Verifying Checksum", "39fafc05754f: Download complete", "7c5f17f5ec8d: Verifying Checksum", "7c5f17f5ec8d: Download complete", "39fafc05754f: Pull complete", "d98efe364a78: Pull complete", "7c5f17f5ec8d: Pull complete", "Digest: sha256:e56ae401a57af3274bfdc81febcde521f2696c9057cc825ade4a7cb8b0367152", "Status: Downloaded newer image for k8s.gcr.io/k8s-dns-node-cache:1.15.8", "k8s.gcr.io/k8s-dns-node-cache:1.15.8"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:01:57 +0000 (0:00:06.675)       0:03:45.240 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:01:57 +0000 (0:00:00.060)       0:03:45.301 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:01:57 +0000 (0:00:00.047)       0:03:45.348 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:01:57 +0000 (0:00:00.038)       0:03:45.387 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_k8s-dns-node-cache_1.15.8.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:01:57 +0000 (0:00:00.204)       0:03:45.592 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.088)       0:03:45.680 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.085)       0:03:45.766 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.083)       0:03:45.850 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.040)       0:03:45.890 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.347)       0:03:46.238 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.095)       0:03:46.333 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.104)       0:03:46.438 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.047)       0:03:46.486 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/cluster-proportional-autoscaler-amd64"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:01:58 +0000 (0:00:00.089)       0:03:46.576 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.083)       0:03:46.659 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.082)       0:03:46.742 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_cluster-proportional-autoscaler-amd64_1.6.0.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.079)       0:03:46.821 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_cluster-proportional-autoscaler-amd64_1.6.0.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_cluster-proportional-autoscaler-amd64_1.6.0.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.089)       0:03:46.911 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.039)       0:03:46.951 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.046)       0:03:46.997 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.061)       0:03:47.058 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.042)       0:03:47.101 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.102)       0:03:47.204 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:01:59 +0000 (0:00:00.360)       0:03:47.564 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:01:59 +0000 (0:00:00.083)       0:03:47.648 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:00 +0000 (0:00:00.043)       0:03:47.691 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:00 +0000 (0:00:00.107)       0:03:47.799 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0"], "delta": "0:00:02.346743", "end": "2020-10-16 02:02:10.362007", "rc": 0, "start": "2020-10-16 02:02:08.015264", "stderr": "", "stderr_lines": [], "stdout": "1.6.0: Pulling from cluster-proportional-autoscaler-amd64\n4e1edcbff92b: Pulling fs layer\n614d844ab0e6: Pulling fs layer\n4e1edcbff92b: Verifying Checksum\n4e1edcbff92b: Download complete\n4e1edcbff92b: Pull complete\n614d844ab0e6: Verifying Checksum\n614d844ab0e6: Download complete\n614d844ab0e6: Pull complete\nDigest: sha256:0abeb6a79ad5aec10e920110446a97fb75180da8680094acb6715de62507f4b0\nStatus: Downloaded newer image for k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0\nk8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0", "stdout_lines": ["1.6.0: Pulling from cluster-proportional-autoscaler-amd64", "4e1edcbff92b: Pulling fs layer", "614d844ab0e6: Pulling fs layer", "4e1edcbff92b: Verifying Checksum", "4e1edcbff92b: Download complete", "4e1edcbff92b: Pull complete", "614d844ab0e6: Verifying Checksum", "614d844ab0e6: Download complete", "614d844ab0e6: Pull complete", "Digest: sha256:0abeb6a79ad5aec10e920110446a97fb75180da8680094acb6715de62507f4b0", "Status: Downloaded newer image for k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0", "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:02 +0000 (0:00:02.565)       0:03:50.364 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:02 +0000 (0:00:00.060)       0:03:50.425 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:02 +0000 (0:00:00.042)       0:03:50.468 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:02 +0000 (0:00:00.039)       0:03:50.508 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_cluster-proportional-autoscaler-amd64_1.6.0.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.210)       0:03:50.718 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.083)       0:03:50.801 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.087)       0:03:50.889 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/metrics-server-amd64:v0.3.3"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.089)       0:03:50.979 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.040)       0:03:51.019 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.346)       0:03:51.365 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.095)       0:03:51.461 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.106)       0:03:51.568 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:03 +0000 (0:00:00.047)       0:03:51.615 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/metrics-server-amd64"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.085)       0:03:51.701 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.083)       0:03:51.785 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/metrics-server-amd64:v0.3.3"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.084)       0:03:51.869 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_metrics-server-amd64_v0.3.3.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.084)       0:03:51.954 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_metrics-server-amd64_v0.3.3.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_metrics-server-amd64_v0.3.3.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.094)       0:03:52.049 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.041)       0:03:52.090 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.041)       0:03:52.132 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.064)       0:03:52.196 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.050)       0:03:52.247 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:04 +0000 (0:00:00.106)       0:03:52.354 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:05 +0000 (0:00:00.348)       0:03:52.703 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:05 +0000 (0:00:00.083)       0:03:52.786 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:05 +0000 (0:00:00.043)       0:03:52.830 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:05 +0000 (0:00:00.102)       0:03:52.932 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/metrics-server-amd64:v0.3.3"], "delta": "0:00:02.729039", "end": "2020-10-16 02:02:15.874680", "rc": 0, "start": "2020-10-16 02:02:13.145641", "stderr": "", "stderr_lines": [], "stdout": "v0.3.3: Pulling from metrics-server-amd64\n4e1edcbff92b: Already exists\n9d2fd7b10205: Pulling fs layer\n9d2fd7b10205: Verifying Checksum\n9d2fd7b10205: Download complete\n9d2fd7b10205: Pull complete\nDigest: sha256:4ca116565ff6a46e582bada50ba3550f95b368db1d2415829241a565a6c38e2a\nStatus: Downloaded newer image for k8s.gcr.io/metrics-server-amd64:v0.3.3\nk8s.gcr.io/metrics-server-amd64:v0.3.3", "stdout_lines": ["v0.3.3: Pulling from metrics-server-amd64", "4e1edcbff92b: Already exists", "9d2fd7b10205: Pulling fs layer", "9d2fd7b10205: Verifying Checksum", "9d2fd7b10205: Download complete", "9d2fd7b10205: Pull complete", "Digest: sha256:4ca116565ff6a46e582bada50ba3550f95b368db1d2415829241a565a6c38e2a", "Status: Downloaded newer image for k8s.gcr.io/metrics-server-amd64:v0.3.3", "k8s.gcr.io/metrics-server-amd64:v0.3.3"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:02.949)       0:03:55.882 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.062)       0:03:55.944 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.043)       0:03:55.987 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.038)       0:03:56.026 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_metrics-server-amd64_v0.3.3.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.207)       0:03:56.233 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.081)       0:03:56.314 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.085)       0:03:56.400 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/addon-resizer:1.8.3"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.083)       0:03:56.483 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:08 +0000 (0:00:00.045)       0:03:56.529 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.392)       0:03:56.922 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.088)       0:03:57.011 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.108)       0:03:57.120 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.051)       0:03:57.171 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/addon-resizer"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.087)       0:03:57.259 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.089)       0:03:57.348 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/addon-resizer:1.8.3"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.089)       0:03:57.438 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_addon-resizer_1.8.3.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.089)       0:03:57.527 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_addon-resizer_1.8.3.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_addon-resizer_1.8.3.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:09 +0000 (0:00:00.093)       0:03:57.621 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.041)       0:03:57.663 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.041)       0:03:57.704 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.066)       0:03:57.770 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.044)       0:03:57.815 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.103)       0:03:57.918 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.346)       0:03:58.265 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:10 +0000 (0:00:00.086)       0:03:58.352 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.043)       0:03:58.396 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:10 +0000 (0:00:00.102)       0:03:58.499 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/addon-resizer:1.8.3"], "delta": "0:00:01.992944", "end": "2020-10-16 02:02:20.708150", "rc": 0, "start": "2020-10-16 02:02:18.715206", "stderr": "", "stderr_lines": [], "stdout": "1.8.3: Pulling from addon-resizer\n75a0e65efd51: Pulling fs layer\n9c0d5254a3ef: Pulling fs layer\n75a0e65efd51: Verifying Checksum\n75a0e65efd51: Download complete\n75a0e65efd51: Pull complete\n9c0d5254a3ef: Verifying Checksum\n9c0d5254a3ef: Download complete\n9c0d5254a3ef: Pull complete\nDigest: sha256:07353f7b26327f0d933515a22b1de587b040d3d85c464ea299c1b9f242529326\nStatus: Downloaded newer image for k8s.gcr.io/addon-resizer:1.8.3\nk8s.gcr.io/addon-resizer:1.8.3", "stdout_lines": ["1.8.3: Pulling from addon-resizer", "75a0e65efd51: Pulling fs layer", "9c0d5254a3ef: Pulling fs layer", "75a0e65efd51: Verifying Checksum", "75a0e65efd51: Download complete", "75a0e65efd51: Pull complete", "9c0d5254a3ef: Verifying Checksum", "9c0d5254a3ef: Download complete", "9c0d5254a3ef: Pull complete", "Digest: sha256:07353f7b26327f0d933515a22b1de587b040d3d85c464ea299c1b9f242529326", "Status: Downloaded newer image for k8s.gcr.io/addon-resizer:1.8.3", "k8s.gcr.io/addon-resizer:1.8.3"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:02.220)       0:04:00.719 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.061)       0:04:00.780 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.050)       0:04:00.831 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.043)       0:04:00.874 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_addon-resizer_1.8.3.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.215)       0:04:01.090 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.091)       0:04:01.182 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.091)       0:04:01.274 ********
ok: [test1] => {"ansible_facts": {"pull_args": "gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.089)       0:04:01.364 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:13 +0000 (0:00:00.049)       0:04:01.413 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.327)       0:04:01.740 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.090)       0:04:01.831 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.108)       0:04:01.939 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.047)       0:04:01.987 ********
ok: [test1] => {
    "msg": "gcr.io/google_containers/kubernetes-dashboard-amd64"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.084)       0:04:02.072 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.084)       0:04:02.157 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.087)       0:04:02.244 ********
ok: [test1] => {"ansible_facts": {"image_filename": "gcr.io_google_containers_kubernetes-dashboard-amd64_v1.10.1.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.082)       0:04:02.326 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/gcr.io_google_containers_kubernetes-dashboard-amd64_v1.10.1.tar", "image_path_final": "/tmp/releases/images/gcr.io_google_containers_kubernetes-dashboard-amd64_v1.10.1.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.087)       0:04:02.414 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.043)       0:04:02.458 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.048)       0:04:02.507 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.061)       0:04:02.569 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:14 +0000 (0:00:00.046)       0:04:02.615 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:15 +0000 (0:00:00.103)       0:04:02.719 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:15 +0000 (0:00:00.318)       0:04:03.037 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:15 +0000 (0:00:00.083)       0:04:03.121 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:15 +0000 (0:00:00.042)       0:04:03.163 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:15 +0000 (0:00:00.102)       0:04:03.266 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1"], "delta": "0:00:09.698097", "end": "2020-10-16 02:02:33.169930", "rc": 0, "start": "2020-10-16 02:02:23.471833", "stderr": "", "stderr_lines": [], "stdout": "v1.10.1: Pulling from google_containers/kubernetes-dashboard-amd64\n9518d8afb433: Pulling fs layer\n9518d8afb433: Verifying Checksum\n9518d8afb433: Download complete\n9518d8afb433: Pull complete\nDigest: sha256:0ae6b69432e78069c5ce2bcde0fe409c5c4d6f0f4d9cd50a17974fea38898747\nStatus: Downloaded newer image for gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1\ngcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1", "stdout_lines": ["v1.10.1: Pulling from google_containers/kubernetes-dashboard-amd64", "9518d8afb433: Pulling fs layer", "9518d8afb433: Verifying Checksum", "9518d8afb433: Download complete", "9518d8afb433: Pull complete", "Digest: sha256:0ae6b69432e78069c5ce2bcde0fe409c5c4d6f0f4d9cd50a17974fea38898747", "Status: Downloaded newer image for gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1", "gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:25 +0000 (0:00:09.918)       0:04:13.184 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:25 +0000 (0:00:00.064)       0:04:13.249 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:25 +0000 (0:00:00.045)       0:04:13.294 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:25 +0000 (0:00:00.038)       0:04:13.333 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/gcr.io_google_containers_kubernetes-dashboard-amd64_v1.10.1.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:25 +0000 (0:00:00.211)       0:04:13.544 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:25 +0000 (0:00:00.081)       0:04:13.625 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.083)       0:04:13.709 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/kube-apiserver:v1.16.15"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.089)       0:04:13.799 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.043)       0:04:13.843 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.301)       0:04:14.144 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.091)       0:04:14.235 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.113)       0:04:14.349 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.047)       0:04:14.396 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/kube-apiserver"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.080)       0:04:14.476 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.081)       0:04:14.557 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/kube-apiserver:v1.16.15"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:26 +0000 (0:00:00.083)       0:04:14.641 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_kube-apiserver_v1.16.15.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.080)       0:04:14.721 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_kube-apiserver_v1.16.15.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_kube-apiserver_v1.16.15.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.082)       0:04:14.804 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.045)       0:04:14.850 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.038)       0:04:14.888 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.061)       0:04:14.950 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.048)       0:04:14.998 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.100)       0:04:15.098 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.312)       0:04:15.411 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:27 +0000 (0:00:00.082)       0:04:15.493 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.042)       0:04:15.536 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:27 +0000 (0:00:00.101)       0:04:15.637 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/kube-apiserver:v1.16.15"], "delta": "0:00:09.195160", "end": "2020-10-16 02:02:45.033057", "rc": 0, "start": "2020-10-16 02:02:35.837897", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15: Pulling from kube-apiserver\n4ba180b702c8: Pulling fs layer\n7b69d93d97ac: Pulling fs layer\n4ba180b702c8: Verifying Checksum\n4ba180b702c8: Download complete\n7b69d93d97ac: Verifying Checksum\n7b69d93d97ac: Download complete\n4ba180b702c8: Pull complete\n7b69d93d97ac: Pull complete\nDigest: sha256:58075c15f5978b4b73e58b004bb3a1856ad58a9061ac3075ef860207ba00ac75\nStatus: Downloaded newer image for k8s.gcr.io/kube-apiserver:v1.16.15\nk8s.gcr.io/kube-apiserver:v1.16.15", "stdout_lines": ["v1.16.15: Pulling from kube-apiserver", "4ba180b702c8: Pulling fs layer", "7b69d93d97ac: Pulling fs layer", "4ba180b702c8: Verifying Checksum", "4ba180b702c8: Download complete", "7b69d93d97ac: Verifying Checksum", "7b69d93d97ac: Download complete", "4ba180b702c8: Pull complete", "7b69d93d97ac: Pull complete", "Digest: sha256:58075c15f5978b4b73e58b004bb3a1856ad58a9061ac3075ef860207ba00ac75", "Status: Downloaded newer image for k8s.gcr.io/kube-apiserver:v1.16.15", "k8s.gcr.io/kube-apiserver:v1.16.15"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:37 +0000 (0:00:09.414)       0:04:25.051 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:37 +0000 (0:00:00.060)       0:04:25.112 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:37 +0000 (0:00:00.044)       0:04:25.156 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:37 +0000 (0:00:00.038)       0:04:25.195 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_kube-apiserver_v1.16.15.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:37 +0000 (0:00:00.214)       0:04:25.409 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:37 +0000 (0:00:00.082)       0:04:25.491 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:37 +0000 (0:00:00.083)       0:04:25.574 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/kube-controller-manager:v1.16.15"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.083)       0:04:25.658 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.040)       0:04:25.699 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.340)       0:04:26.039 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.085)       0:04:26.124 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.101)       0:04:26.226 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.048)       0:04:26.275 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/kube-controller-manager"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.088)       0:04:26.364 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.081)       0:04:26.446 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/kube-controller-manager:v1.16.15"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.084)       0:04:26.531 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_kube-controller-manager_v1.16.15.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:38 +0000 (0:00:00.086)       0:04:26.618 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_kube-controller-manager_v1.16.15.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_kube-controller-manager_v1.16.15.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.084)       0:04:26.702 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.039)       0:04:26.742 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.038)       0:04:26.780 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.061)       0:04:26.842 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.043)       0:04:26.885 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.098)       0:04:26.984 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.360)       0:04:27.344 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:39 +0000 (0:00:00.080)       0:04:27.425 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.041)       0:04:27.467 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:39 +0000 (0:00:00.102)       0:04:27.570 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/kube-controller-manager:v1.16.15"], "delta": "0:00:06.053199", "end": "2020-10-16 02:02:53.812902", "rc": 0, "start": "2020-10-16 02:02:47.759703", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15: Pulling from kube-controller-manager\n4ba180b702c8: Already exists\ne48f52e994b1: Pulling fs layer\ne48f52e994b1: Verifying Checksum\ne48f52e994b1: Download complete\ne48f52e994b1: Pull complete\nDigest: sha256:da7ac5487dc7b6eddfb4fbdf39af92bc065416a7dac147a937a39aff72716fe9\nStatus: Downloaded newer image for k8s.gcr.io/kube-controller-manager:v1.16.15\nk8s.gcr.io/kube-controller-manager:v1.16.15", "stdout_lines": ["v1.16.15: Pulling from kube-controller-manager", "4ba180b702c8: Already exists", "e48f52e994b1: Pulling fs layer", "e48f52e994b1: Verifying Checksum", "e48f52e994b1: Download complete", "e48f52e994b1: Pull complete", "Digest: sha256:da7ac5487dc7b6eddfb4fbdf39af92bc065416a7dac147a937a39aff72716fe9", "Status: Downloaded newer image for k8s.gcr.io/kube-controller-manager:v1.16.15", "k8s.gcr.io/kube-controller-manager:v1.16.15"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:06.265)       0:04:33.835 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.058)       0:04:33.893 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.051)       0:04:33.944 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.040)       0:04:33.985 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_kube-controller-manager_v1.16.15.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.201)       0:04:34.187 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.080)       0:04:34.267 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.082)       0:04:34.350 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/kube-scheduler:v1.16.15"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.083)       0:04:34.433 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:46 +0000 (0:00:00.040)       0:04:34.473 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.295)       0:04:34.769 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.087)       0:04:34.857 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.106)       0:04:34.963 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.046)       0:04:35.010 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/kube-scheduler"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.081)       0:04:35.092 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.085)       0:04:35.178 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/kube-scheduler:v1.16.15"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.084)       0:04:35.263 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_kube-scheduler_v1.16.15.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.078)       0:04:35.341 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_kube-scheduler_v1.16.15.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_kube-scheduler_v1.16.15.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.083)       0:04:35.425 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.040)       0:04:35.466 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.038)       0:04:35.504 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.064)       0:04:35.569 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:47 +0000 (0:00:00.043)       0:04:35.612 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:48 +0000 (0:00:00.102)       0:04:35.714 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:48 +0000 (0:00:00.315)       0:04:36.030 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:48 +0000 (0:00:00.083)       0:04:36.113 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:48 +0000 (0:00:00.049)       0:04:36.162 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:48 +0000 (0:00:00.102)       0:04:36.265 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/kube-scheduler:v1.16.15"], "delta": "0:00:02.993600", "end": "2020-10-16 02:02:59.446130", "rc": 0, "start": "2020-10-16 02:02:56.452530", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15: Pulling from kube-scheduler\n4ba180b702c8: Already exists\n552d3020fe05: Pulling fs layer\n552d3020fe05: Verifying Checksum\n552d3020fe05: Download complete\n552d3020fe05: Pull complete\nDigest: sha256:d9156baf649cd356bad6be119a62cf137b73956957604275ab8e3008bee96c8f\nStatus: Downloaded newer image for k8s.gcr.io/kube-scheduler:v1.16.15\nk8s.gcr.io/kube-scheduler:v1.16.15", "stdout_lines": ["v1.16.15: Pulling from kube-scheduler", "4ba180b702c8: Already exists", "552d3020fe05: Pulling fs layer", "552d3020fe05: Verifying Checksum", "552d3020fe05: Download complete", "552d3020fe05: Pull complete", "Digest: sha256:d9156baf649cd356bad6be119a62cf137b73956957604275ab8e3008bee96c8f", "Status: Downloaded newer image for k8s.gcr.io/kube-scheduler:v1.16.15", "k8s.gcr.io/kube-scheduler:v1.16.15"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:51 +0000 (0:00:03.211)       0:04:39.477 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:51 +0000 (0:00:00.063)       0:04:39.540 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:51 +0000 (0:00:00.041)       0:04:39.582 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:51 +0000 (0:00:00.042)       0:04:39.624 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_kube-scheduler_v1.16.15.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.206)       0:04:39.830 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.081)       0:04:39.912 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.087)       0:04:40.000 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/kube-proxy:v1.16.15"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.085)       0:04:40.085 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.039)       0:04:40.126 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.306)       0:04:40.432 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.094)       0:04:40.526 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": true}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:02:52 +0000 (0:00:00.105)       0:04:40.631 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.046)       0:04:40.678 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/kube-proxy"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.083)       0:04:40.762 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.081)       0:04:40.844 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/kube-proxy:v1.16.15"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.083)       0:04:40.928 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_kube-proxy_v1.16.15.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.080)       0:04:41.009 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_kube-proxy_v1.16.15.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_kube-proxy_v1.16.15.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.084)       0:04:41.093 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.039)       0:04:41.132 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.039)       0:04:41.172 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.060)       0:04:41.232 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.044)       0:04:41.277 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:02:53 +0000 (0:00:00.106)       0:04:41.383 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:02:54 +0000 (0:00:00.313)       0:04:41.696 ********
ok: [test1] => {"ansible_facts": {"pull_required": true}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:02:54 +0000 (0:00:00.084)       0:04:41.781 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:02:54 +0000 (0:00:00.042)       0:04:41.824 ********
ok: [test1] => {
    "msg": "XXX Pull required is: True"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:02:54 +0000 (0:00:00.102)       0:04:41.927 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/bin/docker", "pull", "k8s.gcr.io/kube-proxy:v1.16.15"], "delta": "0:00:05.331255", "end": "2020-10-16 02:03:07.448485", "rc": 0, "start": "2020-10-16 02:03:02.117230", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15: Pulling from kube-proxy\n4ba180b702c8: Already exists\n85b604bcc41a: Pulling fs layer\nfafe7e2b354a: Pulling fs layer\nb2c4667c1ca7: Pulling fs layer\nc93c6a0c3ea5: Pulling fs layer\nbeea6d17d8e9: Pulling fs layer\nff80cf25c34f: Pulling fs layer\nc93c6a0c3ea5: Waiting\nbeea6d17d8e9: Waiting\nff80cf25c34f: Waiting\nb2c4667c1ca7: Verifying Checksum\nb2c4667c1ca7: Download complete\nc93c6a0c3ea5: Verifying Checksum\nc93c6a0c3ea5: Download complete\nfafe7e2b354a: Verifying Checksum\nfafe7e2b354a: Download complete\nbeea6d17d8e9: Verifying Checksum\nbeea6d17d8e9: Download complete\nff80cf25c34f: Verifying Checksum\nff80cf25c34f: Download complete\n85b604bcc41a: Download complete\n85b604bcc41a: Pull complete\nfafe7e2b354a: Pull complete\nb2c4667c1ca7: Pull complete\nc93c6a0c3ea5: Pull complete\nbeea6d17d8e9: Pull complete\nff80cf25c34f: Pull complete\nDigest: sha256:656661fb58ea588a4633d8af66989a4b7fa5f9f1380fcf2bbbb07546390c681a\nStatus: Downloaded newer image for k8s.gcr.io/kube-proxy:v1.16.15\nk8s.gcr.io/kube-proxy:v1.16.15", "stdout_lines": ["v1.16.15: Pulling from kube-proxy", "4ba180b702c8: Already exists", "85b604bcc41a: Pulling fs layer", "fafe7e2b354a: Pulling fs layer", "b2c4667c1ca7: Pulling fs layer", "c93c6a0c3ea5: Pulling fs layer", "beea6d17d8e9: Pulling fs layer", "ff80cf25c34f: Pulling fs layer", "c93c6a0c3ea5: Waiting", "beea6d17d8e9: Waiting", "ff80cf25c34f: Waiting", "b2c4667c1ca7: Verifying Checksum", "b2c4667c1ca7: Download complete", "c93c6a0c3ea5: Verifying Checksum", "c93c6a0c3ea5: Download complete", "fafe7e2b354a: Verifying Checksum", "fafe7e2b354a: Download complete", "beea6d17d8e9: Verifying Checksum", "beea6d17d8e9: Download complete", "ff80cf25c34f: Verifying Checksum", "ff80cf25c34f: Download complete", "85b604bcc41a: Download complete", "85b604bcc41a: Pull complete", "fafe7e2b354a: Pull complete", "b2c4667c1ca7: Pull complete", "c93c6a0c3ea5: Pull complete", "beea6d17d8e9: Pull complete", "ff80cf25c34f: Pull complete", "Digest: sha256:656661fb58ea588a4633d8af66989a4b7fa5f9f1380fcf2bbbb07546390c681a", "Status: Downloaded newer image for k8s.gcr.io/kube-proxy:v1.16.15", "k8s.gcr.io/kube-proxy:v1.16.15"]}

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:02:59 +0000 (0:00:05.555)       0:04:47.482 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:02:59 +0000 (0:00:00.059)       0:04:47.541 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:02:59 +0000 (0:00:00.041)       0:04:47.582 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:02:59 +0000 (0:00:00.037)       0:04:47.620 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_kube-proxy_v1.16.15.tar", "state": "absent"}

TASK [download : container_download | Make download decision if pull is required by tag or sha256] *********************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.206)       0:04:47.826 ********
included: /home/vagrant/kubespray/roles/download/tasks/set_docker_image_facts.yml for test1

TASK [download : Set if containers should be pulled by digest] *********************************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.081)       0:04:47.908 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : Set pull_args] ****************************************************************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.082)       0:04:47.991 ********
ok: [test1] => {"ansible_facts": {"pull_args": "k8s.gcr.io/pause:3.1"}, "changed": false}

TASK [download : Set image pull command for containerd] ****************************************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.081)       0:04:48.072 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.042)       0:04:48.114 ********
ok: [test1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : Set if pull is required per container] ****************************************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.317)       0:04:48.432 ********
ok: [test1] => {"ansible_facts": {"pull_required": false}, "changed": false}

TASK [download : Does any host require container pull?] ****************************************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.090)       0:04:48.522 ********
ok: [test1] => {"ansible_facts": {"any_pull_required": false}, "changed": false}

TASK [download : Check the local digest sha256 corresponds to the given image tag] *************************************
Friday 16 October 2020  02:03:00 +0000 (0:00:00.108)       0:04:48.631 ********

TASK [download : set_container_facts | Display the name of the image being processed] **********************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.048)       0:04:48.680 ********
ok: [test1] => {
    "msg": "k8s.gcr.io/pause"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***********************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.084)       0:04:48.764 ********
ok: [test1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}

TASK [download : set_container_facts | Define by what name to pull the image] ******************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.082)       0:04:48.847 ********
ok: [test1] => {"ansible_facts": {"image_reponame": "k8s.gcr.io/pause:3.1"}, "changed": false}

TASK [download : set_container_facts | Define file name of image] ******************************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.089)       0:04:48.936 ********
ok: [test1] => {"ansible_facts": {"image_filename": "k8s.gcr.io_pause_3.1.tar"}, "changed": false}

TASK [download : set_container_facts | Define path of image] ***********************************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.089)       0:04:49.026 ********
ok: [test1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/k8s.gcr.io_pause_3.1.tar", "image_path_final": "/tmp/releases/images/k8s.gcr.io_pause_3.1.tar"}, "changed": false}

TASK [download : download_container | Determine if image is in cache] **************************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.088)       0:04:49.114 ********

TASK [download : download_container | Set fact indicating if image is in cache] ****************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.040)       0:04:49.155 ********

TASK [download : download_container | Upload image to node if it is cached] ********************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.041)       0:04:49.196 ********

TASK [download : download_container | Load image into docker] **********************************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.068)       0:04:49.265 ********

TASK [download : download_container | Prepare container download] ******************************************************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.044)       0:04:49.310 ********
included: /home/vagrant/kubespray/roles/download/tasks/check_pull_required.yml for test1

TASK [download : check_pull_required |  Generate a list of information about the images on a node] *********************
Friday 16 October 2020  02:03:01 +0000 (0:00:00.109)       0:04:49.420 ********
ok: [test1 -> 10.1.7.152] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***********************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.322)       0:04:49.742 ********
ok: [test1] => {"ansible_facts": {"pull_required": false}, "changed": false}

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] **********
Friday 16 October 2020  02:03:02 +0000 (0:00:00.085)       0:04:49.827 ********

TASK [download : debug] ************************************************************************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.042)       0:04:49.869 ********
ok: [test1] => {
    "msg": "XXX Pull required is: False"
}

TASK [download : download_container | Download image if required] ******************************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.105)       0:04:49.974 ********

TASK [download : download_container | Check if image changed] **********************************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.046)       0:04:50.020 ********

TASK [download : download_container | Save and compress image] *********************************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.060)       0:04:50.081 ********

TASK [download : download_container | Copy image to ansible host cache] ************************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.048)       0:04:50.130 ********

TASK [download : download_container | Remove container image from cache] ***********************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.038)       0:04:50.168 ********
ok: [test1] => {"changed": false, "path": "/tmp/releases/images/k8s.gcr.io_pause_3.1.tar", "state": "absent"}

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:03:02 +0000 (0:00:00.205)       0:04:50.374 ********

PLAY [etcd] ************************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:03:03 +0000 (0:00:01.194)       0:04:51.568 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:03:03 +0000 (0:00:00.041)       0:04:51.610 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:03:03 +0000 (0:00:00.038)       0:04:51.649 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.038)       0:04:51.687 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.043)       0:04:51.731 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.044)       0:04:51.775 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.044)       0:04:51.820 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.039)       0:04:51.860 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.038)       0:04:51.899 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.042)       0:04:51.941 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.037)       0:04:51.978 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:03:04 +0000 (0:00:00.039)       0:04:52.018 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:03:05 +0000 (0:00:00.802)       0:04:52.820 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:03:05 +0000 (0:00:00.802)       0:04:53.623 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [adduser : User | Create User Group] ******************************************************************************
Friday 16 October 2020  02:03:06 +0000 (0:00:00.064)       0:04:53.687 ********
changed: [test1] => {"changed": true, "gid": 991, "name": "etcd", "state": "present", "system": true}

TASK [adduser : User | Create User] ************************************************************************************
Friday 16 October 2020  02:03:06 +0000 (0:00:00.205)       0:04:53.892 ********
changed: [test1] => {"changed": true, "comment": "Etcd user", "create_home": false, "group": 991, "home": "/home/etcd", "name": "etcd", "shell": "/bin/nologin", "state": "present", "system": true, "uid": 996}

TASK [adduser : User | Create User Group] ******************************************************************************
Friday 16 October 2020  02:03:06 +0000 (0:00:00.237)       0:04:54.129 ********
ok: [test1] => {"changed": false, "gid": 994, "name": "kube-cert", "state": "present", "system": true}

TASK [adduser : User | Create User] ************************************************************************************
Friday 16 October 2020  02:03:06 +0000 (0:00:00.202)       0:04:54.332 ********
ok: [test1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 994, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 997}

TASK [etcd : set architecture_groups] **********************************************************************************
Friday 16 October 2020  02:03:06 +0000 (0:00:00.236)       0:04:54.569 ********
ok: [test1] => {"ansible_facts": {"architecture_groups": {"aarch64": "arm64", "x86_64": "amd64"}}, "changed": false}

TASK [etcd : ansible_architecture_rename] ******************************************************************************
Friday 16 October 2020  02:03:06 +0000 (0:00:00.065)       0:04:54.634 ********
ok: [test1] => {"ansible_facts": {"host_architecture": "amd64"}, "changed": false}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:07 +0000 (0:00:00.072)       0:04:54.706 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/check_certs.yml for test1

TASK [etcd : Check_certs | check if all certs have already been generated on first master] *****************************
Friday 16 October 2020  02:03:07 +0000 (0:00:00.095)       0:04:54.801 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "examined": 0, "files": [], "matched": 0, "msg": "/etc/ssl/etcd/ssl was skipped as it does not seem to be a valid directory or it cannot be accessed\n"}

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] *********
Friday 16 October 2020  02:03:07 +0000 (0:00:00.371)       0:04:55.173 ********
ok: [test1] => {"ansible_facts": {"etcd_secret_changed": false, "gen_certs": false, "sync_certs": false}, "changed": false}

TASK [etcd : Check certs | check if a cert already exists on node] *****************************************************
Friday 16 October 2020  02:03:07 +0000 (0:00:00.066)       0:04:55.239 ********
ok: [test1] => (item=ca.pem) => {"changed": false, "item": "ca.pem", "stat": {"exists": false}}
ok: [test1] => (item=node-test1-key.pem) => {"changed": false, "item": "node-test1-key.pem", "stat": {"exists": false}}

TASK [etcd : Check_certs | Set 'gen_certs' to true] ********************************************************************
Friday 16 October 2020  02:03:07 +0000 (0:00:00.323)       0:04:55.563 ********
ok: [test1] => (item=/etc/ssl/etcd/ssl/ca.pem) => {"ansible_facts": {"gen_certs": true}, "changed": false, "item": "/etc/ssl/etcd/ssl/ca.pem"}
ok: [test1] => (item=/etc/ssl/etcd/ssl/node-test1-key.pem) => {"ansible_facts": {"gen_certs": true}, "changed": false, "item": "/etc/ssl/etcd/ssl/node-test1-key.pem"}
ok: [test1] => (item=/etc/ssl/etcd/ssl/admin-test1-key.pem) => {"ansible_facts": {"gen_certs": true}, "changed": false, "item": "/etc/ssl/etcd/ssl/admin-test1-key.pem"}
ok: [test1] => (item=/etc/ssl/etcd/ssl/member-test1-key.pem) => {"ansible_facts": {"gen_certs": true}, "changed": false, "item": "/etc/ssl/etcd/ssl/member-test1-key.pem"}

TASK [etcd : Check_certs | Set 'gen_master_certs' to true] *************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.159)       0:04:55.722 ********
ok: [test1] => {"ansible_facts": {"gen_master_certs": {"test1": true}}, "changed": false}

TASK [etcd : Check_certs | Set 'gen_node_certs' to true] ***************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.071)       0:04:55.794 ********
ok: [test1] => {"ansible_facts": {"gen_node_certs": {"test1": true}}, "changed": false}

TASK [etcd : Check_certs | Set 'sync_certs' to true] *******************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.071)       0:04:55.866 ********
ok: [test1] => {"ansible_facts": {"sync_certs": true}, "changed": false}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.074)       0:04:55.941 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/gen_certs_script.yml for test1

TASK [etcd : Gen_certs | create etcd cert dir] *************************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.087)       0:04:56.028 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "kube", "path": "/etc/ssl/etcd/ssl", "secontext": "unconfined_u:object_r:cert_t:s0", "size": 6, "state": "directory", "uid": 997}

TASK [etcd : Gen_certs | create etcd script dir (on test1)] ************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.216)       0:04:56.244 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/usr/local/bin/etcd-scripts", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [etcd : Gen_certs | create etcd cert dir (on test1)] **************************************************************
Friday 16 October 2020  02:03:08 +0000 (0:00:00.226)       0:04:56.470 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "kube", "path": "/etc/ssl/etcd/ssl", "secontext": "unconfined_u:object_r:cert_t:s0", "size": 6, "state": "directory", "uid": 997}

TASK [etcd : Gen_certs | write openssl config] *************************************************************************
Friday 16 October 2020  02:03:09 +0000 (0:00:00.219)       0:04:56.690 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "checksum": "207c403de1035146d6cc5f5b928f1b861e135a42", "dest": "/etc/ssl/etcd/openssl.conf", "gid": 0, "group": "root", "md5sum": "868052381bc7fe557b86995270fa17b8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:cert_t:s0", "size": 802, "src": "/root/.ansible/tmp/ansible-tmp-1602813789.0900936-27982761788622/source", "state": "file", "uid": 0}

TASK [etcd : Gen_certs | copy certs generation script] *****************************************************************
Friday 16 October 2020  02:03:09 +0000 (0:00:00.531)       0:04:57.221 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "checksum": "266083b165c0bcb22f1eba7e88d4a6e3720e1ce1", "dest": "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "gid": 0, "group": "root", "md5sum": "1fc99690a2ed343216be5d01050c7129", "mode": "0700", "owner": "root", "secontext": "system_u:object_r:bin_t:s0", "size": 3411, "src": "/root/.ansible/tmp/ansible-tmp-1602813789.6285465-96191180726032/source", "state": "file", "uid": 0}

TASK [etcd : Gen_certs | run cert generation script] *******************************************************************
Friday 16 October 2020  02:03:10 +0000 (0:00:00.448)       0:04:57.670 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": ["bash", "-x", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "-f", "/etc/ssl/etcd/openssl.conf", "-d", "/etc/ssl/etcd/ssl"], "delta": "0:00:00.436509", "end": "2020-10-16 02:03:18.268338", "rc": 0, "start": "2020-10-16 02:03:17.831829", "stderr": "+ set -o errexit\n+ set -o pipefail\n+ (( 4 ))\n+ case \"$1\" in\n+ CONFIG=/etc/ssl/etcd/openssl.conf\n+ shift 2\n+ (( 2 ))\n+ case \"$1\" in\n+ SSLDIR=/etc/ssl/etcd/ssl\n+ shift 2\n+ (( 0 ))\n+ '[' -z /etc/ssl/etcd/openssl.conf ']'\n+ '[' -z /etc/ssl/etcd/ssl ']'\n++ mktemp -d /tmp/etcd_cacert.XXXXXX\n+ tmpdir=/tmp/etcd_cacert.KB4qxn\n+ trap 'rm -rf \"${tmpdir}\"' EXIT\n+ cd /tmp/etcd_cacert.KB4qxn\n+ mkdir -p /etc/ssl/etcd/ssl\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ openssl genrsa -out ca-key.pem 2048\n+ openssl req -x509 -new -nodes -key ca-key.pem -days 36500 -out ca.pem -subj /CN=etcd-ca\n+ '[' -n '  test1  ' ']'\n+ for host in '$MASTERS'\n+ cn=test1\n+ openssl genrsa -out member-test1-key.pem 2048\n+ openssl req -new -key member-test1-key.pem -out member-test1.csr -subj /CN=etcd-member-test1 -config /etc/ssl/etcd/openssl.conf\n+ openssl x509 -req -in member-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ openssl genrsa -out admin-test1-key.pem 2048\n+ openssl req -new -key admin-test1-key.pem -out admin-test1.csr -subj /CN=etcd-admin-test1\n+ openssl x509 -req -in admin-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -n '  test1  ' ']'\n+ for host in '$HOSTS'\n+ cn=test1\n+ openssl genrsa -out node-test1-key.pem 2048\n+ openssl req -new -key node-test1-key.pem -out node-test1.csr -subj /CN=etcd-node-test1\n+ openssl x509 -req -in node-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ mv admin-test1-key.pem admin-test1.pem ca-key.pem ca.pem member-test1-key.pem member-test1.pem node-test1-key.pem node-test1.pem /etc/ssl/etcd/ssl/\n+ rm -rf /tmp/etcd_cacert.KB4qxn", "stderr_lines": ["+ set -o errexit", "+ set -o pipefail", "+ (( 4 ))", "+ case \"$1\" in", "+ CONFIG=/etc/ssl/etcd/openssl.conf", "+ shift 2", "+ (( 2 ))", "+ case \"$1\" in", "+ SSLDIR=/etc/ssl/etcd/ssl", "+ shift 2", "+ (( 0 ))", "+ '[' -z /etc/ssl/etcd/openssl.conf ']'", "+ '[' -z /etc/ssl/etcd/ssl ']'", "++ mktemp -d /tmp/etcd_cacert.XXXXXX", "+ tmpdir=/tmp/etcd_cacert.KB4qxn", "+ trap 'rm -rf \"${tmpdir}\"' EXIT", "+ cd /tmp/etcd_cacert.KB4qxn", "+ mkdir -p /etc/ssl/etcd/ssl", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ openssl genrsa -out ca-key.pem 2048", "+ openssl req -x509 -new -nodes -key ca-key.pem -days 36500 -out ca.pem -subj /CN=etcd-ca", "+ '[' -n '  test1  ' ']'", "+ for host in '$MASTERS'", "+ cn=test1", "+ openssl genrsa -out member-test1-key.pem 2048", "+ openssl req -new -key member-test1-key.pem -out member-test1.csr -subj /CN=etcd-member-test1 -config /etc/ssl/etcd/openssl.conf", "+ openssl x509 -req -in member-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ openssl genrsa -out admin-test1-key.pem 2048", "+ openssl req -new -key admin-test1-key.pem -out admin-test1.csr -subj /CN=etcd-admin-test1", "+ openssl x509 -req -in admin-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -n '  test1  ' ']'", "+ for host in '$HOSTS'", "+ cn=test1", "+ openssl genrsa -out node-test1-key.pem 2048", "+ openssl req -new -key node-test1-key.pem -out node-test1.csr -subj /CN=etcd-node-test1", "+ openssl x509 -req -in node-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ mv admin-test1-key.pem admin-test1.pem ca-key.pem ca.pem member-test1-key.pem member-test1.pem node-test1-key.pem node-test1.pem /etc/ssl/etcd/ssl/", "+ rm -rf /tmp/etcd_cacert.KB4qxn"], "stdout": "", "stdout_lines": []}

TASK [etcd : Gen_certs | Gather etcd master certs] *********************************************************************
Friday 16 October 2020  02:03:10 +0000 (0:00:00.695)       0:04:58.365 ********

TASK [etcd : Gen_certs | Write etcd master certs] **********************************************************************
Friday 16 October 2020  02:03:10 +0000 (0:00:00.164)       0:04:58.530 ********

TASK [etcd : Gen_certs | Set cert names per node] **********************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.163)       0:04:58.693 ********
ok: [test1] => {"ansible_facts": {"my_etcd_node_certs": ["ca.pem", "node-test1.pem", "node-test1-key.pem"]}, "changed": false}

TASK [etcd : Check_certs | Set 'sync_certs' to true on nodes] **********************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.066)       0:04:58.760 ********

TASK [etcd : Gen_certs | Gather node certs] ****************************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.102)       0:04:58.863 ********

TASK [etcd : Gen_certs | Copy certs on nodes] **************************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.043)       0:04:58.906 ********

TASK [etcd : Gen_certs | check certificate permissions] ****************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.043)       0:04:58.950 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0640", "owner": "kube", "path": "/etc/ssl/etcd/ssl", "secontext": "unconfined_u:object_r:cert_t:s0", "size": 188, "state": "directory", "uid": 997}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.194)       0:04:59.144 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/upd_ca_trust.yml for test1

TASK [etcd : Gen_certs | target ca-certificate store file] *************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.074)       0:04:59.219 ********
ok: [test1] => {"ansible_facts": {"ca_cert_path": "/etc/pki/ca-trust/source/anchors/etcd-ca.crt"}, "changed": false}

TASK [etcd : Gen_certs | add CA to trusted CA dir] *********************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.072)       0:04:59.291 ********
changed: [test1] => {"changed": true, "checksum": "12662e5816a1c051d6c12969579e3aabe5f344d8", "dest": "/etc/pki/ca-trust/source/anchors/etcd-ca.crt", "gid": 0, "group": "root", "md5sum": "9627e86c0818a26802364cc67e8368a1", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:cert_t:s0", "size": 1090, "src": "/etc/ssl/etcd/ssl/ca.pem", "state": "file", "uid": 0}

TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Container Linux by CoreOS)] ************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.234)       0:04:59.525 ********

TASK [etcd : Gen_certs | update ca-certificates (RedHat)] **************************************************************
Friday 16 October 2020  02:03:11 +0000 (0:00:00.039)       0:04:59.565 ********
changed: [test1] => {"changed": true, "cmd": ["update-ca-trust", "extract"], "delta": "0:00:00.622193", "end": "2020-10-16 02:03:20.341646", "rc": 0, "start": "2020-10-16 02:03:19.719453", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [etcd : Gen_certs | update ca-certificates (ClearLinux)] **********************************************************
Friday 16 October 2020  02:03:12 +0000 (0:00:00.809)       0:05:00.375 ********

TASK [etcd : Gen_certs | Get etcd certificate serials] *****************************************************************
Friday 16 October 2020  02:03:12 +0000 (0:00:00.046)       0:05:00.421 ********
ok: [test1] => {"changed": false, "cmd": ["openssl", "x509", "-in", "/etc/ssl/etcd/ssl/node-test1.pem", "-noout", "-serial"], "delta": "0:00:00.014578", "end": "2020-10-16 02:03:20.602411", "rc": 0, "start": "2020-10-16 02:03:20.587833", "stderr": "", "stderr_lines": [], "stdout": "serial=E47783DE00D013A2", "stdout_lines": ["serial=E47783DE00D013A2"]}

TASK [etcd : Set etcd_client_cert_serial] ******************************************************************************
Friday 16 October 2020  02:03:12 +0000 (0:00:00.216)       0:05:00.637 ********
ok: [test1] => {"ansible_facts": {"etcd_client_cert_serial": "E47783DE00D013A2"}, "changed": false}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:13 +0000 (0:00:00.070)       0:05:00.707 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/install_docker.yml for test1

TASK [etcd : Install | Copy etcdctl binary from docker container] ******************************************************
Friday 16 October 2020  02:03:13 +0000 (0:00:00.077)       0:05:00.784 ********
ok: [test1] => {"attempts": 1, "changed": false, "cmd": ["sh", "-c", "/usr/bin/docker rm -f etcdctl-binarycopy; /usr/bin/docker create --name etcdctl-binarycopy quay.io/coreos/etcd:v3.3.12 && /usr/bin/docker cp etcdctl-binarycopy:/usr/local/bin/etcdctl /usr/local/bin/etcdctl && /usr/bin/docker rm -f etcdctl-binarycopy"], "delta": "0:00:00.710540", "end": "2020-10-16 02:03:21.654844", "rc": 0, "start": "2020-10-16 02:03:20.944304", "stderr": "Error: No such container: etcdctl-binarycopy", "stderr_lines": ["Error: No such container: etcdctl-binarycopy"], "stdout": "8c1db1c097cbccf988574a0a2c403209b26427935e7bce1dea12727976de2164\netcdctl-binarycopy", "stdout_lines": ["8c1db1c097cbccf988574a0a2c403209b26427935e7bce1dea12727976de2164", "etcdctl-binarycopy"]}

TASK [etcd : Install etcd launch script] *******************************************************************************
Friday 16 October 2020  02:03:14 +0000 (0:00:00.907)       0:05:01.692 ********
changed: [test1] => {"changed": true, "checksum": "02238ae4b13c583d0e318c9f45c8a9bc31759294", "dest": "/usr/local/bin/etcd", "gid": 0, "group": "root", "md5sum": "58ba5031763c80301f2bc525de0e64db", "mode": "0750", "owner": "root", "secontext": "system_u:object_r:bin_t:s0", "size": 351, "src": "/root/.ansible/tmp/ansible-tmp-1602813794.0847032-95788191079942/source", "state": "file", "uid": 0}

TASK [etcd : Install etcd-events launch script] ************************************************************************
Friday 16 October 2020  02:03:14 +0000 (0:00:00.442)       0:05:02.134 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:14 +0000 (0:00:00.039)       0:05:02.173 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/configure.yml for test1

TASK [etcd : Configure | Check if etcd cluster is healthy] *************************************************************
Friday 16 October 2020  02:03:14 +0000 (0:00:00.110)       0:05:02.284 ********
ok: [test1] => {"changed": false, "cmd": "/usr/local/bin/etcdctl --endpoints=https://10.0.2.15:2379 cluster-health | grep -q 'cluster is healthy'", "delta": "0:00:00.012159", "end": "2020-10-16 02:03:22.525927", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2020-10-16 02:03:22.513768", "stderr": "Error:  client: etcd cluster is unavailable or misconfigured; error #0: dial tcp 10.0.2.15:2379: connect: connection refused\n\nerror #0: dial tcp 10.0.2.15:2379: connect: connection refused", "stderr_lines": ["Error:  client: etcd cluster is unavailable or misconfigured; error #0: dial tcp 10.0.2.15:2379: connect: connection refused", "", "error #0: dial tcp 10.0.2.15:2379: connect: connection refused"], "stdout": "", "stdout_lines": []}

TASK [etcd : Configure | Check if etcd-events cluster is healthy] ******************************************************
Friday 16 October 2020  02:03:14 +0000 (0:00:00.275)       0:05:02.560 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:14 +0000 (0:00:00.041)       0:05:02.602 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/refresh_config.yml for test1

TASK [etcd : Refresh config | Create etcd config file] *****************************************************************
Friday 16 October 2020  02:03:15 +0000 (0:00:00.067)       0:05:02.670 ********
changed: [test1] => {"changed": true, "checksum": "3201de25fd8910dec764cffec812028c6fb0d9a9", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "md5sum": "f098f920a8b253bd69a0b589998e1b76", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 957, "src": "/root/.ansible/tmp/ansible-tmp-1602813795.1317058-69276817697772/source", "state": "file", "uid": 0}

TASK [etcd : Refresh config | Create etcd-events config file] **********************************************************
Friday 16 October 2020  02:03:15 +0000 (0:00:00.613)       0:05:03.284 ********

TASK [etcd : Configure | Copy etcd.service systemd file] ***************************************************************
Friday 16 October 2020  02:03:15 +0000 (0:00:00.042)       0:05:03.326 ********
changed: [test1] => {"changed": true, "checksum": "643a64e6855d3b34a04abbf561fd843945934936", "dest": "/etc/systemd/system/etcd.service", "gid": 0, "group": "root", "md5sum": "6c8c57186e4e724d74edfed4489ea5be", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 354, "src": "/root/.ansible/tmp/ansible-tmp-1602813795.721398-191688417837630/source", "state": "file", "uid": 0}

TASK [etcd : Configure | Copy etcd-events.service systemd file] ********************************************************
Friday 16 October 2020  02:03:16 +0000 (0:00:00.438)       0:05:03.764 ********

TASK [etcd : Configure | reload systemd] *******************************************************************************
Friday 16 October 2020  02:03:16 +0000 (0:00:00.041)       0:05:03.806 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

TASK [etcd : Configure | Ensure etcd is running] ***********************************************************************
Friday 16 October 2020  02:03:16 +0000 (0:00:00.331)       0:05:04.137 ********
changed: [test1] => {"changed": true, "enabled": true, "name": "etcd", "state": "started", "status": {"ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "docker.service system.slice systemd-journald.socket basic.target", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "Conflicts": "shutdown.target", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "etcd docker wrapper", "DevicePolicy": "auto", "EnvironmentFile": "/etc/etcd.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/bin/docker ; argv[]=/usr/bin/docker rm -f etcd1 ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStop": "{ path=/usr/bin/docker ; argv[]=/usr/bin/docker stop etcd1 ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/etcd.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "etcd.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "4096", "LimitNPROC": "15098", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "0", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "etcd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "yes", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "system.slice basic.target", "Restart": "always", "RestartUSec": "15s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "root", "Wants": "docker.socket", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}

TASK [etcd : Configure | Ensure etcd-events is running] ****************************************************************
Friday 16 October 2020  02:03:16 +0000 (0:00:00.393)       0:05:04.531 ********

TASK [etcd : Configure | Wait for etcd cluster to be healthy] **********************************************************
Friday 16 October 2020  02:03:16 +0000 (0:00:00.042)       0:05:04.574 ********
FAILED - RETRYING: Configure | Wait for etcd cluster to be healthy (4 retries left).
ok: [test1] => {"attempts": 2, "changed": false, "cmd": "/usr/local/bin/etcdctl --no-sync --endpoints=https://10.0.2.15:2379 cluster-health | grep -q 'cluster is healthy'", "delta": "0:00:00.027318", "end": "2020-10-16 02:03:34.057317", "rc": 0, "start": "2020-10-16 02:03:34.029999", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [etcd : Configure | Wait for etcd-events cluster to be healthy] ***************************************************
Friday 16 October 2020  02:03:26 +0000 (0:00:09.525)       0:05:14.099 ********

TASK [etcd : Configure | Check if member is in etcd cluster] ***********************************************************
Friday 16 October 2020  02:03:26 +0000 (0:00:00.041)       0:05:14.140 ********
ok: [test1] => {"changed": false, "cmd": "/usr/local/bin/etcdctl --no-sync --endpoints=https://10.0.2.15:2379 member list | grep -q 10.0.2.15", "delta": "0:00:00.019419", "end": "2020-10-16 02:03:34.452766", "rc": 0, "start": "2020-10-16 02:03:34.433347", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [etcd : Configure | Check if member is in etcd-events cluster] ****************************************************
Friday 16 October 2020  02:03:26 +0000 (0:00:00.352)       0:05:14.493 ********

TASK [etcd : Configure | Join member(s) to etcd cluster one at a time] *************************************************
Friday 16 October 2020  02:03:26 +0000 (0:00:00.042)       0:05:14.535 ********

TASK [etcd : Configure | Join member(s) to etcd-events cluster one at a time] ******************************************
Friday 16 October 2020  02:03:26 +0000 (0:00:00.048)       0:05:14.583 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:26 +0000 (0:00:00.052)       0:05:14.636 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/refresh_config.yml for test1

TASK [etcd : Refresh config | Create etcd config file] *****************************************************************
Friday 16 October 2020  02:03:27 +0000 (0:00:00.075)       0:05:14.712 ********
changed: [test1] => {"changed": true, "checksum": "85ae82349d69b48a9eb7d785aea9356cde855b8e", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "md5sum": "5098240af8d07fe523263f1c24be5278", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 962, "src": "/root/.ansible/tmp/ansible-tmp-1602813807.1060035-179563440998342/source", "state": "file", "uid": 0}

TASK [etcd : Refresh config | Create etcd-events config file] **********************************************************
Friday 16 October 2020  02:03:27 +0000 (0:00:00.548)       0:05:15.261 ********

TASK [etcd : Restart etcd if certs changed] ****************************************************************************
Friday 16 October 2020  02:03:27 +0000 (0:00:00.045)       0:05:15.306 ********

TASK [etcd : Restart etcd-events if certs changed] *********************************************************************
Friday 16 October 2020  02:03:27 +0000 (0:00:00.042)       0:05:15.348 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:27 +0000 (0:00:00.042)       0:05:15.391 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/refresh_config.yml for test1

TASK [etcd : Refresh config | Create etcd config file] *****************************************************************
Friday 16 October 2020  02:03:27 +0000 (0:00:00.077)       0:05:15.468 ********
ok: [test1] => {"changed": false, "checksum": "85ae82349d69b48a9eb7d785aea9356cde855b8e", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/etcd.env", "secontext": "system_u:object_r:etc_t:s0", "size": 962, "state": "file", "uid": 0}

TASK [etcd : Refresh config | Create etcd-events config file] **********************************************************
Friday 16 October 2020  02:03:28 +0000 (0:00:00.576)       0:05:16.045 ********

TASK [etcd : Install etcdctl binary from etcd role] ********************************************************************
Friday 16 October 2020  02:03:28 +0000 (0:00:00.042)       0:05:16.088 ********

RUNNING HANDLER [etcd : restart etcd] **********************************************************************************
Friday 16 October 2020  02:03:28 +0000 (0:00:00.022)       0:05:16.110 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001973", "end": "2020-10-16 02:03:36.342263", "rc": 0, "start": "2020-10-16 02:03:36.340290", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [etcd : Backup etcd data] ******************************************************************************
Friday 16 October 2020  02:03:28 +0000 (0:00:00.319)       0:05:16.430 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001906", "end": "2020-10-16 02:03:36.658696", "rc": 0, "start": "2020-10-16 02:03:36.656790", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [etcd : Refresh Time Fact] *****************************************************************************
Friday 16 October 2020  02:03:29 +0000 (0:00:00.320)       0:05:16.750 ********
ok: [test1]

RUNNING HANDLER [etcd : Set Backup Directory] **************************************************************************
Friday 16 October 2020  02:03:29 +0000 (0:00:00.478)       0:05:17.229 ********
ok: [test1] => {"ansible_facts": {"etcd_backup_directory": "/var/backups/etcd-2020-10-16_02:03:37"}, "changed": false}

RUNNING HANDLER [etcd : Create Backup Directory] ***********************************************************************
Friday 16 October 2020  02:03:29 +0000 (0:00:00.136)       0:05:17.365 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0600", "owner": "root", "path": "/var/backups/etcd-2020-10-16_02:03:37", "secontext": "unconfined_u:object_r:var_t:s0", "size": 6, "state": "directory", "uid": 0}

RUNNING HANDLER [etcd : Stat etcd v2 data directory] *******************************************************************
Friday 16 October 2020  02:03:29 +0000 (0:00:00.265)       0:05:17.631 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602813804.7752995, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 0, "charset": "binary", "ctime": 1602813804.7902994, "dev": 2049, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 68332489, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "inode/directory", "mode": "0700", "mtime": 1602813804.7902994, "nlink": 4, "path": "/var/lib/etcd/member", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 29, "uid": 0, "version": "1506581944", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}

RUNNING HANDLER [etcd : Backup etcd v2 data] ***************************************************************************
Friday 16 October 2020  02:03:30 +0000 (0:00:00.260)       0:05:17.891 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/etcdctl", "backup", "--data-dir", "/var/lib/etcd", "--backup-dir", "/var/backups/etcd-2020-10-16_02:03:37"], "delta": "0:00:00.014625", "end": "2020-10-16 02:03:38.139765", "rc": 0, "start": "2020-10-16 02:03:38.125140", "stderr": "2020-10-16 02:03:38.134462 I | ignoring EntryConfChange raft entry\n2020-10-16 02:03:38.134556 I | ignoring member attribute update on /0/members/6c47286b8fd5fd37/attributes", "stderr_lines": ["2020-10-16 02:03:38.134462 I | ignoring EntryConfChange raft entry", "2020-10-16 02:03:38.134556 I | ignoring member attribute update on /0/members/6c47286b8fd5fd37/attributes"], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [etcd : Backup etcd v3 data] ***************************************************************************
Friday 16 October 2020  02:03:30 +0000 (0:00:00.277)       0:05:18.168 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/etcdctl", "--endpoints=https://10.0.2.15:2379", "snapshot", "save", "/var/backups/etcd-2020-10-16_02:03:37/snapshot.db"], "delta": "0:00:00.030350", "end": "2020-10-16 02:03:38.510437", "rc": 0, "start": "2020-10-16 02:03:38.480087", "stderr": "", "stderr_lines": [], "stdout": "Snapshot saved at /var/backups/etcd-2020-10-16_02:03:37/snapshot.db", "stdout_lines": ["Snapshot saved at /var/backups/etcd-2020-10-16_02:03:37/snapshot.db"]}

RUNNING HANDLER [etcd : etcd | reload systemd] *************************************************************************
Friday 16 October 2020  02:03:30 +0000 (0:00:00.369)       0:05:18.538 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

RUNNING HANDLER [etcd : reload etcd] ***********************************************************************************
Friday 16 October 2020  02:03:31 +0000 (0:00:00.387)       0:05:18.925 ********
changed: [test1] => {"changed": true, "name": "etcd", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 02:03:24 UTC", "ActiveEnterTimestampMonotonic": "842755257", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "system.slice systemd-journald.socket basic.target docker.service", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 02:03:24 UTC", "AssertTimestampMonotonic": "842706743", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 02:03:24 UTC", "ConditionTimestampMonotonic": "842706742", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/etcd.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "etcd docker wrapper", "DevicePolicy": "auto", "EnvironmentFile": "/etc/etcd.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "16207", "ExecMainStartTimestamp": "Fri 2020-10-16 02:03:24 UTC", "ExecMainStartTimestampMonotonic": "842755197", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/bin/docker ; argv[]=/usr/bin/docker rm -f etcd1 ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStop": "{ path=/usr/bin/docker ; argv[]=/usr/bin/docker stop etcd1 ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/etcd.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "etcd.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2020-10-16 02:03:24 UTC", "InactiveExitTimestampMonotonic": "842714129", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "4096", "LimitNPROC": "15098", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "16207", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "etcd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "yes", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "system.slice basic.target", "Restart": "always", "RestartUSec": "15s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "User": "root", "WantedBy": "multi-user.target", "Wants": "docker.socket", "WatchdogTimestamp": "Fri 2020-10-16 02:03:24 UTC", "WatchdogTimestampMonotonic": "842755237", "WatchdogUSec": "0"}}

RUNNING HANDLER [etcd : wait for etcd up] ******************************************************************************
Friday 16 October 2020  02:03:32 +0000 (0:00:01.567)       0:05:20.492 ********
ok: [test1] => {"attempts": 1, "changed": false, "connection": "close", "content_length": "17", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:03:50 GMT", "json": {"health": "true"}, "msg": "OK (17 bytes)", "redirected": false, "status": 200, "url": "https://10.0.2.15:2379/health"}

RUNNING HANDLER [etcd : set etcd_secret_changed] ***********************************************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:10.365)       0:05:30.858 ********
ok: [test1] => {"ansible_facts": {"etcd_secret_changed": true}, "changed": false}

PLAY [k8s-cluster] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.176)       0:05:31.035 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.037)       0:05:31.072 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.038)       0:05:31.111 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.038)       0:05:31.150 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.043)       0:05:31.194 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.043)       0:05:31.238 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.044)       0:05:31.282 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.038)       0:05:31.321 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.037)       0:05:31.359 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.039)       0:05:31.398 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.037)       0:05:31.436 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:03:43 +0000 (0:00:00.038)       0:05:31.475 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:03:44 +0000 (0:00:00.848)       0:05:32.324 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:03:45 +0000 (0:00:00.837)       0:05:33.161 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [adduser : User | Create User Group] ******************************************************************************
Friday 16 October 2020  02:03:45 +0000 (0:00:00.132)       0:05:33.294 ********
ok: [test1] => {"changed": false, "gid": 991, "name": "etcd", "state": "present", "system": true}

TASK [adduser : User | Create User] ************************************************************************************
Friday 16 October 2020  02:03:45 +0000 (0:00:00.265)       0:05:33.560 ********
ok: [test1] => {"append": false, "changed": false, "comment": "Etcd user", "group": 991, "home": "/home/etcd", "move_home": false, "name": "etcd", "shell": "/bin/nologin", "state": "present", "uid": 996}

TASK [adduser : User | Create User Group] ******************************************************************************
Friday 16 October 2020  02:03:46 +0000 (0:00:00.298)       0:05:33.858 ********
ok: [test1] => {"changed": false, "gid": 994, "name": "kube-cert", "state": "present", "system": true}

TASK [adduser : User | Create User] ************************************************************************************
Friday 16 October 2020  02:03:46 +0000 (0:00:00.267)       0:05:34.125 ********
ok: [test1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 994, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 997}

TASK [etcd : set architecture_groups] **********************************************************************************
Friday 16 October 2020  02:03:46 +0000 (0:00:00.309)       0:05:34.434 ********
ok: [test1] => {"ansible_facts": {"architecture_groups": {"aarch64": "arm64", "x86_64": "amd64"}}, "changed": false}

TASK [etcd : ansible_architecture_rename] ******************************************************************************
Friday 16 October 2020  02:03:46 +0000 (0:00:00.133)       0:05:34.568 ********
ok: [test1] => {"ansible_facts": {"host_architecture": "amd64"}, "changed": false}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:47 +0000 (0:00:00.135)       0:05:34.703 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/check_certs.yml for test1

TASK [etcd : Check_certs | check if all certs have already been generated on first master] *****************************
Friday 16 October 2020  02:03:47 +0000 (0:00:00.090)       0:05:34.794 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "examined": 8, "files": [{"atime": 1602813799.4843526, "checksum": "12662e5816a1c051d6c12969579e3aabe5f344d8", "ctime": 1602813799.1103563, "dev": 2049, "gid": 0, "gr_name": "root", "inode": 68332464, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1602813797.9543679, "nlink": 1, "path": "/etc/ssl/etcd/ssl/ca.pem", "pw_name": "kube", "rgrp": true, "roth": false, "rusr": true, "size": 1090, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1602813798.248365, "checksum": "dfaffb175b5b1cd07d12b73926bb09a5abfe1901", "ctime": 1602813799.1113563, "dev": 2049, "gid": 0, "gr_name": "root", "inode": 68332472, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1602813798.244365, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-test1-key.pem", "pw_name": "kube", "rgrp": true, "roth": false, "rusr": true, "size": 1675, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1602813800.6003413, "checksum": "700c185bd19910e3fa90bc69d3fc3e1744d2457c", "ctime": 1602813799.1113563, "dev": 2049, "gid": 0, "gr_name": "root", "inode": 68332474, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1602813798.2633648, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-test1.pem", "pw_name": "kube", "rgrp": true, "roth": false, "rusr": true, "size": 1359, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 3, "msg": ""}

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] *********
Friday 16 October 2020  02:03:47 +0000 (0:00:00.264)       0:05:35.058 ********
ok: [test1] => {"ansible_facts": {"etcd_secret_changed": false, "gen_certs": false, "sync_certs": false}, "changed": false}

TASK [etcd : Check certs | check if a cert already exists on node] *****************************************************
Friday 16 October 2020  02:03:47 +0000 (0:00:00.137)       0:05:35.196 ********
ok: [test1] => (item=ca.pem) => {"changed": false, "item": "ca.pem", "stat": {"atime": 1602813799.4843526, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "12662e5816a1c051d6c12969579e3aabe5f344d8", "ctime": 1602813799.1103563, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 68332464, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0640", "mtime": 1602813797.9543679, "nlink": 1, "path": "/etc/ssl/etcd/ssl/ca.pem", "pw_name": "kube", "readable": true, "rgrp": true, "roth": false, "rusr": true, "size": 1090, "uid": 997, "version": "1989103242", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
ok: [test1] => (item=node-test1-key.pem) => {"changed": false, "item": "node-test1-key.pem", "stat": {"atime": 1602813835.0010505, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "dfaffb175b5b1cd07d12b73926bb09a5abfe1901", "ctime": 1602813799.1113563, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 68332472, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0640", "mtime": 1602813798.244365, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-test1-key.pem", "pw_name": "kube", "readable": true, "rgrp": true, "roth": false, "rusr": true, "size": 1675, "uid": 997, "version": "1269165931", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [etcd : Check_certs | Set 'gen_certs' to true] ********************************************************************
Friday 16 October 2020  02:03:47 +0000 (0:00:00.424)       0:05:35.620 ********
ok: [test1] => (item=/etc/ssl/etcd/ssl/admin-test1-key.pem) => {"ansible_facts": {"gen_certs": true}, "changed": false, "item": "/etc/ssl/etcd/ssl/admin-test1-key.pem"}
ok: [test1] => (item=/etc/ssl/etcd/ssl/member-test1-key.pem) => {"ansible_facts": {"gen_certs": true}, "changed": false, "item": "/etc/ssl/etcd/ssl/member-test1-key.pem"}

TASK [etcd : Check_certs | Set 'gen_master_certs' to true] *************************************************************
Friday 16 October 2020  02:03:48 +0000 (0:00:00.213)       0:05:35.834 ********
ok: [test1] => {"ansible_facts": {"gen_master_certs": {"test1": true}}, "changed": false}

TASK [etcd : Check_certs | Set 'gen_node_certs' to true] ***************************************************************
Friday 16 October 2020  02:03:48 +0000 (0:00:00.144)       0:05:35.978 ********
ok: [test1] => {"ansible_facts": {"gen_node_certs": {"test1": false}}, "changed": false}

TASK [etcd : Check_certs | Set 'sync_certs' to true] *******************************************************************
Friday 16 October 2020  02:03:48 +0000 (0:00:00.147)       0:05:36.125 ********
ok: [test1] => {"ansible_facts": {"sync_certs": true}, "changed": false}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:48 +0000 (0:00:00.148)       0:05:36.273 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/gen_certs_script.yml for test1

TASK [etcd : Gen_certs | create etcd cert dir] *************************************************************************
Friday 16 October 2020  02:03:48 +0000 (0:00:00.081)       0:05:36.355 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "kube", "path": "/etc/ssl/etcd/ssl", "secontext": "unconfined_u:object_r:cert_t:s0", "size": 188, "state": "directory", "uid": 997}

TASK [etcd : Gen_certs | create etcd script dir (on test1)] ************************************************************
Friday 16 October 2020  02:03:48 +0000 (0:00:00.296)       0:05:36.652 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/usr/local/bin/etcd-scripts", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 30, "state": "directory", "uid": 0}

TASK [etcd : Gen_certs | create etcd cert dir (on test1)] **************************************************************
Friday 16 October 2020  02:03:49 +0000 (0:00:00.298)       0:05:36.951 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "kube", "path": "/etc/ssl/etcd/ssl", "secontext": "unconfined_u:object_r:cert_t:s0", "size": 188, "state": "directory", "uid": 997}

TASK [etcd : Gen_certs | write openssl config] *************************************************************************
Friday 16 October 2020  02:03:49 +0000 (0:00:00.406)       0:05:37.357 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "checksum": "207c403de1035146d6cc5f5b928f1b861e135a42", "dest": "/etc/ssl/etcd/openssl.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/ssl/etcd/openssl.conf", "secontext": "system_u:object_r:cert_t:s0", "size": 802, "state": "file", "uid": 0}

TASK [etcd : Gen_certs | copy certs generation script] *****************************************************************
Friday 16 October 2020  02:03:50 +0000 (0:00:00.535)       0:05:37.893 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "checksum": "266083b165c0bcb22f1eba7e88d4a6e3720e1ce1", "dest": "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "secontext": "system_u:object_r:bin_t:s0", "size": 3411, "state": "file", "uid": 0}

TASK [etcd : Gen_certs | run cert generation script] *******************************************************************
Friday 16 October 2020  02:03:50 +0000 (0:00:00.424)       0:05:38.318 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": ["bash", "-x", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "-f", "/etc/ssl/etcd/openssl.conf", "-d", "/etc/ssl/etcd/ssl"], "delta": "0:00:00.196116", "end": "2020-10-16 02:03:58.657315", "rc": 0, "start": "2020-10-16 02:03:58.461199", "stderr": "+ set -o errexit\n+ set -o pipefail\n+ (( 4 ))\n+ case \"$1\" in\n+ CONFIG=/etc/ssl/etcd/openssl.conf\n+ shift 2\n+ (( 2 ))\n+ case \"$1\" in\n+ SSLDIR=/etc/ssl/etcd/ssl\n+ shift 2\n+ (( 0 ))\n+ '[' -z /etc/ssl/etcd/openssl.conf ']'\n+ '[' -z /etc/ssl/etcd/ssl ']'\n++ mktemp -d /tmp/etcd_cacert.XXXXXX\n+ tmpdir=/tmp/etcd_cacert.aKyQAm\n+ trap 'rm -rf \"${tmpdir}\"' EXIT\n+ cd /tmp/etcd_cacert.aKyQAm\n+ mkdir -p /etc/ssl/etcd/ssl\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ cp /etc/ssl/etcd/ssl/ca.pem /etc/ssl/etcd/ssl/ca-key.pem .\n+ '[' -n '  test1  ' ']'\n+ for host in '$MASTERS'\n+ cn=test1\n+ openssl genrsa -out member-test1-key.pem 2048\n+ openssl req -new -key member-test1-key.pem -out member-test1.csr -subj /CN=etcd-member-test1 -config /etc/ssl/etcd/openssl.conf\n+ openssl x509 -req -in member-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ openssl genrsa -out admin-test1-key.pem 2048\n+ openssl req -new -key admin-test1-key.pem -out admin-test1.csr -subj /CN=etcd-admin-test1\n+ openssl x509 -req -in admin-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -n '  ' ']'\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ rm -f ca.pem ca-key.pem\n+ mv admin-test1-key.pem admin-test1.pem member-test1-key.pem member-test1.pem /etc/ssl/etcd/ssl/\n+ rm -rf /tmp/etcd_cacert.aKyQAm", "stderr_lines": ["+ set -o errexit", "+ set -o pipefail", "+ (( 4 ))", "+ case \"$1\" in", "+ CONFIG=/etc/ssl/etcd/openssl.conf", "+ shift 2", "+ (( 2 ))", "+ case \"$1\" in", "+ SSLDIR=/etc/ssl/etcd/ssl", "+ shift 2", "+ (( 0 ))", "+ '[' -z /etc/ssl/etcd/openssl.conf ']'", "+ '[' -z /etc/ssl/etcd/ssl ']'", "++ mktemp -d /tmp/etcd_cacert.XXXXXX", "+ tmpdir=/tmp/etcd_cacert.aKyQAm", "+ trap 'rm -rf \"${tmpdir}\"' EXIT", "+ cd /tmp/etcd_cacert.aKyQAm", "+ mkdir -p /etc/ssl/etcd/ssl", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ cp /etc/ssl/etcd/ssl/ca.pem /etc/ssl/etcd/ssl/ca-key.pem .", "+ '[' -n '  test1  ' ']'", "+ for host in '$MASTERS'", "+ cn=test1", "+ openssl genrsa -out member-test1-key.pem 2048", "+ openssl req -new -key member-test1-key.pem -out member-test1.csr -subj /CN=etcd-member-test1 -config /etc/ssl/etcd/openssl.conf", "+ openssl x509 -req -in member-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ openssl genrsa -out admin-test1-key.pem 2048", "+ openssl req -new -key admin-test1-key.pem -out admin-test1.csr -subj /CN=etcd-admin-test1", "+ openssl x509 -req -in admin-test1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-test1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -n '  ' ']'", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ rm -f ca.pem ca-key.pem", "+ mv admin-test1-key.pem admin-test1.pem member-test1-key.pem member-test1.pem /etc/ssl/etcd/ssl/", "+ rm -rf /tmp/etcd_cacert.aKyQAm"], "stdout": "", "stdout_lines": []}

TASK [etcd : Gen_certs | Gather etcd master certs] *********************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.455)       0:05:38.773 ********

TASK [etcd : Gen_certs | Write etcd master certs] **********************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.162)       0:05:38.936 ********

TASK [etcd : Gen_certs | Set cert names per node] **********************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.176)       0:05:39.112 ********
ok: [test1] => {"ansible_facts": {"my_etcd_node_certs": ["ca.pem", "node-test1.pem", "node-test1-key.pem"]}, "changed": false}

TASK [etcd : Check_certs | Set 'sync_certs' to true on nodes] **********************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.065)       0:05:39.178 ********

TASK [etcd : Gen_certs | Gather node certs] ****************************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.116)       0:05:39.294 ********

TASK [etcd : Gen_certs | Copy certs on nodes] **************************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.045)       0:05:39.340 ********

TASK [etcd : Gen_certs | check certificate permissions] ****************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.043)       0:05:39.384 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0640", "owner": "kube", "path": "/etc/ssl/etcd/ssl", "secontext": "unconfined_u:object_r:cert_t:s0", "size": 188, "state": "directory", "uid": 997}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:51 +0000 (0:00:00.202)       0:05:39.586 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/upd_ca_trust.yml for test1

TASK [etcd : Gen_certs | target ca-certificate store file] *************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.074)       0:05:39.661 ********
ok: [test1] => {"ansible_facts": {"ca_cert_path": "/etc/pki/ca-trust/source/anchors/etcd-ca.crt"}, "changed": false}

TASK [etcd : Gen_certs | add CA to trusted CA dir] *********************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.073)       0:05:39.734 ********
ok: [test1] => {"changed": false, "checksum": "12662e5816a1c051d6c12969579e3aabe5f344d8", "dest": "/etc/pki/ca-trust/source/anchors/etcd-ca.crt", "gid": 0, "group": "root", "md5sum": "9627e86c0818a26802364cc67e8368a1", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:cert_t:s0", "size": 1090, "src": "/etc/ssl/etcd/ssl/ca.pem", "state": "file", "uid": 0}

TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Container Linux by CoreOS)] ************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.240)       0:05:39.975 ********

TASK [etcd : Gen_certs | update ca-certificates (RedHat)] **************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.043)       0:05:40.019 ********

TASK [etcd : Gen_certs | update ca-certificates (ClearLinux)] **********************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.042)       0:05:40.061 ********

TASK [etcd : Gen_certs | Get etcd certificate serials] *****************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.041)       0:05:40.102 ********
ok: [test1] => {"changed": false, "cmd": ["openssl", "x509", "-in", "/etc/ssl/etcd/ssl/node-test1.pem", "-noout", "-serial"], "delta": "0:00:00.014361", "end": "2020-10-16 02:04:00.253493", "rc": 0, "start": "2020-10-16 02:04:00.239132", "stderr": "", "stderr_lines": [], "stdout": "serial=E47783DE00D013A2", "stdout_lines": ["serial=E47783DE00D013A2"]}

TASK [etcd : Set etcd_client_cert_serial] ******************************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.206)       0:05:40.308 ********
ok: [test1] => {"ansible_facts": {"etcd_client_cert_serial": "E47783DE00D013A2"}, "changed": false}

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.074)       0:05:40.383 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/install_docker.yml for test1

TASK [etcd : Install | Copy etcdctl binary from docker container] ******************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.076)       0:05:40.460 ********

TASK [etcd : Install etcd launch script] *******************************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.039)       0:05:40.499 ********

TASK [etcd : Install etcd-events launch script] ************************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.038)       0:05:40.538 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:52 +0000 (0:00:00.039)       0:05:40.578 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/configure.yml for test1

TASK [etcd : Configure | Check if etcd cluster is healthy] *************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.099)       0:05:40.678 ********

TASK [etcd : Configure | Check if etcd-events cluster is healthy] ******************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.043)       0:05:40.721 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.043)       0:05:40.764 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/refresh_config.yml for test1

TASK [etcd : Refresh config | Create etcd config file] *****************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.069)       0:05:40.834 ********

TASK [etcd : Refresh config | Create etcd-events config file] **********************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.043)       0:05:40.878 ********

TASK [etcd : Configure | Copy etcd.service systemd file] ***************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.043)       0:05:40.922 ********

TASK [etcd : Configure | Copy etcd-events.service systemd file] ********************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.045)       0:05:40.967 ********

TASK [etcd : Configure | reload systemd] *******************************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.044)       0:05:41.011 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

TASK [etcd : Configure | Ensure etcd is running] ***********************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.327)       0:05:41.339 ********

TASK [etcd : Configure | Ensure etcd-events is running] ****************************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.042)       0:05:41.381 ********

TASK [etcd : Configure | Wait for etcd cluster to be healthy] **********************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.044)       0:05:41.426 ********

TASK [etcd : Configure | Wait for etcd-events cluster to be healthy] ***************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.040)       0:05:41.467 ********

TASK [etcd : Configure | Check if member is in etcd cluster] ***********************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.040)       0:05:41.507 ********

TASK [etcd : Configure | Check if member is in etcd-events cluster] ****************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.042)       0:05:41.549 ********

TASK [etcd : Configure | Join member(s) to etcd cluster one at a time] *************************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.042)       0:05:41.592 ********

TASK [etcd : Configure | Join member(s) to etcd-events cluster one at a time] ******************************************
Friday 16 October 2020  02:03:53 +0000 (0:00:00.051)       0:05:41.643 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.056)       0:05:41.700 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/refresh_config.yml for test1

TASK [etcd : Refresh config | Create etcd config file] *****************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.079)       0:05:41.780 ********

TASK [etcd : Refresh config | Create etcd-events config file] **********************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.043)       0:05:41.823 ********

TASK [etcd : Restart etcd if certs changed] ****************************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.044)       0:05:41.867 ********

TASK [etcd : Restart etcd-events if certs changed] *********************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.044)       0:05:41.912 ********

TASK [etcd : include_tasks] ********************************************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.048)       0:05:41.961 ********
included: /home/vagrant/kubespray/roles/etcd/tasks/refresh_config.yml for test1

TASK [etcd : Refresh config | Create etcd config file] *****************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.078)       0:05:42.039 ********

TASK [etcd : Refresh config | Create etcd-events config file] **********************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.041)       0:05:42.081 ********

TASK [etcd : Install etcdctl binary from etcd role] ********************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.041)       0:05:42.123 ********

RUNNING HANDLER [etcd : set etcd_secret_changed] ***********************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.022)       0:05:42.145 ********
ok: [test1] => {"ansible_facts": {"etcd_secret_changed": true}, "changed": false}

PLAY [k8s-cluster] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.127)       0:05:42.273 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.039)       0:05:42.312 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.039)       0:05:42.352 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.041)       0:05:42.393 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.043)       0:05:42.437 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.043)       0:05:42.481 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.043)       0:05:42.525 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.040)       0:05:42.565 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.042)       0:05:42.607 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:03:54 +0000 (0:00:00.040)       0:05:42.647 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:03:55 +0000 (0:00:00.040)       0:05:42.688 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:03:55 +0000 (0:00:00.039)       0:05:42.728 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:03:55 +0000 (0:00:00.812)       0:05:43.540 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:03:56 +0000 (0:00:00.790)       0:05:44.331 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes/node : look up docker cgroup driver] ******************************************************************
Friday 16 October 2020  02:03:56 +0000 (0:00:00.085)       0:05:44.416 ********
ok: [test1] => {"changed": false, "cmd": "docker info | grep 'Cgroup Driver' | awk -F': ' '{ print $2; }'", "delta": "0:00:00.098124", "end": "2020-10-16 02:04:04.660020", "rc": 0, "start": "2020-10-16 02:04:04.561896", "stderr": "WARNING: bridge-nf-call-ip6tables is disabled", "stderr_lines": ["WARNING: bridge-nf-call-ip6tables is disabled"], "stdout": "cgroupfs", "stdout_lines": ["cgroupfs"]}

TASK [kubernetes/node : set standalone_kubelet fact] *******************************************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.301)       0:05:44.718 ********
ok: [test1] => {"ansible_facts": {"standalone_kubelet": false}, "changed": false}

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for containerd] ****************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.076)       0:05:44.794 ********

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for other engines] *************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.039)       0:05:44.834 ********
ok: [test1] => {"ansible_facts": {"kubelet_cgroup_driver_detected": "cgroupfs"}, "changed": false}

TASK [kubernetes/node : os specific vars] ******************************************************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.083)       0:05:44.918 ********

TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] ***********************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.043)       0:05:44.962 ********
ok: [test1] => {"changed": false, "cmd": " docker ps -af name=kubelet | grep kubelet ", "delta": "0:00:00.050935", "end": "2020-10-16 02:04:05.157112", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2020-10-16 02:04:05.106177", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [kubernetes/node : Pre-upgrade | copy /var/lib/cni from kubelet] **************************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.252)       0:05:45.214 ********

TASK [kubernetes/node : Pre-upgrade | ensure kubelet container service is stopped if using host deployment] ************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.040)       0:05:45.254 ********

TASK [kubernetes/node : Pre-upgrade | ensure kubelet container is removed if using host deployment] ********************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.039)       0:05:45.294 ********

TASK [kubernetes/node : Ensure /var/lib/cni exists] ********************************************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.038)       0:05:45.332 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/var/lib/cni", "secontext": "unconfined_u:object_r:var_lib_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [kubernetes/node : install | Copy kubeadm binary from download dir] ***********************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.226)       0:05:45.559 ********

TASK [kubernetes/node : install | Set kubeadm binary permissions] ******************************************************
Friday 16 October 2020  02:03:57 +0000 (0:00:00.041)       0:05:45.601 ********

TASK [kubernetes/node : install | Copy kubelet binary from download dir] ***********************************************
Friday 16 October 2020  02:03:58 +0000 (0:00:00.059)       0:05:45.660 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": "/usr/bin/rsync --delay-updates -F --archive --no-owner --no-group --out-format=<<CHANGED>>%i %n%L /tmp/releases/kubelet-v1.16.15-amd64 /usr/local/bin/kubelet", "msg": ">f+++++++++ kubelet-v1.16.15-amd64\n", "rc": 0, "stdout_lines": [">f+++++++++ kubelet-v1.16.15-amd64"]}

TASK [kubernetes/node : install | Set kubelet binary permissions] ******************************************************
Friday 16 October 2020  02:03:58 +0000 (0:00:00.712)       0:05:46.373 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/kubelet", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 111234072, "state": "file", "uid": 0}

TASK [kubernetes/node : install | Copy socat wrapper for Container Linux] **********************************************
Friday 16 October 2020  02:03:58 +0000 (0:00:00.220)       0:05:46.594 ********

TASK [kubernetes/node : haproxy | Cleanup potentially deployed haproxy] ************************************************
Friday 16 October 2020  02:03:58 +0000 (0:00:00.038)       0:05:46.632 ********

TASK [kubernetes/node : nginx-proxy | Make nginx directory] ************************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.041)       0:05:46.673 ********

TASK [kubernetes/node : nginx-proxy | Write nginx-proxy configuration] *************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.040)       0:05:46.714 ********

TASK [kubernetes/node : nginx-proxy | Get checksum from config] ********************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.046)       0:05:46.761 ********

TASK [kubernetes/node : nginx-proxy | Write static pod] ****************************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.043)       0:05:46.805 ********

TASK [kubernetes/node : haproxy | Cleanup potentially deployed nginx-proxy] ********************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.045)       0:05:46.850 ********

TASK [kubernetes/node : haproxy | Make haproxy directory] **************************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.042)       0:05:46.893 ********

TASK [kubernetes/node : haproxy | Write haproxy configuration] *********************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.041)       0:05:46.935 ********

TASK [kubernetes/node : haproxy | Get checksum from config] ************************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.041)       0:05:46.976 ********

TASK [kubernetes/node : haproxy | Write static pod] ********************************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.047)       0:05:47.024 ********

TASK [kubernetes/node : Ensure nodePort range is reserved] *************************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.040)       0:05:47.064 ********
changed: [test1] => {"changed": true}

TASK [kubernetes/node : Verify if br_netfilter module exists] **********************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.236)       0:05:47.301 ********
ok: [test1] => {"changed": false, "cmd": "modinfo br_netfilter", "delta": "0:00:00.004303", "end": "2020-10-16 02:04:07.450362", "failed_when_result": false, "rc": 0, "start": "2020-10-16 02:04:07.446059", "stderr": "", "stderr_lines": [], "stdout": "filename:       /lib/modules/3.10.0-1127.el7.x86_64/kernel/net/bridge/br_netfilter.ko.xz\ndescription:    Linux ethernet netfilter firewall bridge\nauthor:         Bart De Schuymer <bdschuym@pandora.be>\nauthor:         Lennert Buytenhek <buytenh@gnu.org>\nlicense:        GPL\nretpoline:      Y\nrhelversion:    7.8\nsrcversion:     C4DE536495D55C12BA6A8A8\ndepends:        bridge\nintree:         Y\nvermagic:       3.10.0-1127.el7.x86_64 SMP mod_unload modversions \nsigner:         CentOS Linux kernel signing key\nsig_key:        69:0E:8A:48:2F:E7:6B:FB:F2:31:D8:60:F0:C6:62:D8:F1:17:3D:57\nsig_hashalgo:   sha256", "stdout_lines": ["filename:       /lib/modules/3.10.0-1127.el7.x86_64/kernel/net/bridge/br_netfilter.ko.xz", "description:    Linux ethernet netfilter firewall bridge", "author:         Bart De Schuymer <bdschuym@pandora.be>", "author:         Lennert Buytenhek <buytenh@gnu.org>", "license:        GPL", "retpoline:      Y", "rhelversion:    7.8", "srcversion:     C4DE536495D55C12BA6A8A8", "depends:        bridge", "intree:         Y", "vermagic:       3.10.0-1127.el7.x86_64 SMP mod_unload modversions ", "signer:         CentOS Linux kernel signing key", "sig_key:        69:0E:8A:48:2F:E7:6B:FB:F2:31:D8:60:F0:C6:62:D8:F1:17:3D:57", "sig_hashalgo:   sha256"]}

TASK [kubernetes/node : Verify br_netfilter module path exists] ********************************************************
Friday 16 October 2020  02:03:59 +0000 (0:00:00.211)       0:05:47.512 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/modules-load.d", "secontext": "system_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [kubernetes/node : Enable br_netfilter module] ********************************************************************
Friday 16 October 2020  02:04:00 +0000 (0:00:00.202)       0:05:47.715 ********
ok: [test1] => {"changed": false, "name": "br_netfilter", "params": "", "state": "present"}

TASK [kubernetes/node : Persist br_netfilter module] *******************************************************************
Friday 16 October 2020  02:04:00 +0000 (0:00:00.359)       0:05:48.074 ********
changed: [test1] => {"changed": true, "checksum": "c3394aff3e3a3e3920e68205b8e839b3d725648e", "dest": "/etc/modules-load.d/kubespray-br_netfilter.conf", "gid": 0, "group": "root", "md5sum": "6f034a1d190cd9ba928c0c4df2a4aad4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 12, "src": "/root/.ansible/tmp/ansible-tmp-1602813840.481305-1468150359413/source", "state": "file", "uid": 0}

TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] ***************************************************
Friday 16 October 2020  02:04:00 +0000 (0:00:00.433)       0:05:48.508 ********
ok: [test1] => {"changed": false, "cmd": ["sysctl", "net.bridge.bridge-nf-call-iptables"], "delta": "0:00:00.003243", "end": "2020-10-16 02:04:08.648625", "failed_when_result": false, "rc": 0, "start": "2020-10-16 02:04:08.645382", "stderr": "", "stderr_lines": [], "stdout": "net.bridge.bridge-nf-call-iptables = 1", "stdout_lines": ["net.bridge.bridge-nf-call-iptables = 1"]}

TASK [kubernetes/node : Enable bridge-nf-call tables] ******************************************************************
Friday 16 October 2020  02:04:01 +0000 (0:00:00.197)       0:05:48.706 ********
changed: [test1] => (item=net.bridge.bridge-nf-call-iptables) => {"changed": true, "item": "net.bridge.bridge-nf-call-iptables"}
changed: [test1] => (item=net.bridge.bridge-nf-call-arptables) => {"changed": true, "item": "net.bridge.bridge-nf-call-arptables"}
changed: [test1] => (item=net.bridge.bridge-nf-call-ip6tables) => {"changed": true, "item": "net.bridge.bridge-nf-call-ip6tables"}

TASK [kubernetes/node : Modprode Kernel Module for IPVS] ***************************************************************
Friday 16 October 2020  02:04:01 +0000 (0:00:00.539)       0:05:49.245 ********
changed: [test1] => (item=ip_vs) => {"changed": true, "item": "ip_vs", "name": "ip_vs", "params": "", "state": "present"}
changed: [test1] => (item=ip_vs_rr) => {"changed": true, "item": "ip_vs_rr", "name": "ip_vs_rr", "params": "", "state": "present"}
changed: [test1] => (item=ip_vs_wrr) => {"changed": true, "item": "ip_vs_wrr", "name": "ip_vs_wrr", "params": "", "state": "present"}
changed: [test1] => (item=ip_vs_sh) => {"changed": true, "item": "ip_vs_sh", "name": "ip_vs_sh", "params": "", "state": "present"}

TASK [kubernetes/node : Modprobe nf_conntrack_ipv4 for kernels < 4.19] *************************************************
Friday 16 October 2020  02:04:02 +0000 (0:00:00.684)       0:05:49.930 ********
ok: [test1] => {"changed": false, "name": "nf_conntrack_ipv4", "params": "", "state": "present"}

TASK [kubernetes/node : Modprobe nf_conntrack for kernels >= 4.19] *****************************************************
Friday 16 October 2020  02:04:02 +0000 (0:00:00.208)       0:05:50.138 ********

TASK [kubernetes/node : Persist ip_vs modules] *************************************************************************
Friday 16 October 2020  02:04:02 +0000 (0:00:00.037)       0:05:50.176 ********
changed: [test1] => {"changed": true, "checksum": "fb666e350805b04493805c3b11187436eb0a0e31", "dest": "/etc/modules-load.d/kube_proxy-ipvs.conf", "gid": 0, "group": "root", "md5sum": "d9cc4491b5121715fca6283f5790775c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 52, "src": "/root/.ansible/tmp/ansible-tmp-1602813842.5873826-71811298620073/source", "state": "file", "uid": 0}

TASK [kubernetes/node : Purge proxy manifest for kubeadm or if proxy services being provided by other means, e.g. network_plugin] ***
Friday 16 October 2020  02:04:02 +0000 (0:00:00.452)       0:05:50.628 ********

TASK [kubernetes/node : Set command for kube-proxy cleanup] ************************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.037)       0:05:50.665 ********

TASK [kubernetes/node : Ensure kube-proxy container is pulled for containerd] ******************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.039)       0:05:50.705 ********

TASK [kubernetes/node : Cleanup kube-proxy leftovers from node] ********************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.035)       0:05:50.741 ********

TASK [kubernetes/node : include_tasks] *********************************************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.035)       0:05:50.777 ********

TASK [kubernetes/node : Test if openstack_cacert is a base64 string] ***************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.038)       0:05:50.816 ********

TASK [kubernetes/node : Write cacert file] *****************************************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.039)       0:05:50.855 ********

TASK [kubernetes/node : Write cloud-config] ****************************************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.038)       0:05:50.894 ********

TASK [kubernetes/node : Make sure dynamic kubelet configuration directory is writeable] ********************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.039)       0:05:50.933 ********

TASK [kubernetes/node : gets the kubeadm version] **********************************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.042)       0:05:50.975 ********
changed: [test1] => {"changed": true, "cmd": ["/usr/local/bin/kubeadm", "version", "-o", "short"], "delta": "0:00:00.063328", "end": "2020-10-16 02:04:11.175583", "rc": 0, "start": "2020-10-16 02:04:11.112255", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15", "stdout_lines": ["v1.16.15"]}

TASK [kubernetes/node : sets kubeadm api version to v1beta1] ***********************************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.263)       0:05:51.239 ********
ok: [test1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta1"}, "changed": false}

TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] ***********************************************
Friday 16 October 2020  02:04:03 +0000 (0:00:00.087)       0:05:51.326 ********
changed: [test1] => {"changed": true, "checksum": "786392cea2386366a781b91336c06aa52c7c8a16", "dest": "/etc/kubernetes/kubelet.env", "gid": 0, "group": "root", "md5sum": "88b54378b3d832c64d954ab852915d72", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 624, "src": "/root/.ansible/tmp/ansible-tmp-1602813843.7355602-34641284274177/source", "state": "file", "uid": 0}

TASK [kubernetes/node : Write kubelet config file] *********************************************************************
Friday 16 October 2020  02:04:04 +0000 (0:00:00.505)       0:05:51.832 ********
changed: [test1] => {"changed": true, "checksum": "835fda02932227a08fcdf9eb5072f89baafcee71", "dest": "/etc/kubernetes/kubelet-config.yaml", "gid": 0, "group": "root", "md5sum": "7f7e22176173ccf10dc9278845c23353", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 631, "src": "/root/.ansible/tmp/ansible-tmp-1602813844.2397738-138619386978909/source", "state": "file", "uid": 0}

TASK [kubernetes/node : Write kubelet systemd init file] ***************************************************************
Friday 16 October 2020  02:04:04 +0000 (0:00:00.459)       0:05:52.292 ********
changed: [test1] => {"changed": true, "checksum": "761e8e18b8328b49b5bbdaa6b69a2a48add4a96c", "dest": "/etc/systemd/system/kubelet.service", "gid": 0, "group": "root", "md5sum": "db0895130fa041b6d7f49e95d5cd7125", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 563, "src": "/root/.ansible/tmp/ansible-tmp-1602813844.6934264-207172643796947/source", "state": "file", "uid": 0}

RUNNING HANDLER [kubernetes/node : restart kubelet] ********************************************************************
Friday 16 October 2020  02:04:05 +0000 (0:00:00.446)       0:05:52.739 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002073", "end": "2020-10-16 02:04:12.897316", "rc": 0, "start": "2020-10-16 02:04:12.895243", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [kubernetes/node : Kubelet | reload systemd] ***********************************************************
Friday 16 October 2020  02:04:05 +0000 (0:00:00.209)       0:05:52.949 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

RUNNING HANDLER [kubernetes/node : Kubelet | reload kubelet] ***********************************************************
Friday 16 October 2020  02:04:05 +0000 (0:00:00.336)       0:05:53.285 ********
changed: [test1] => {"changed": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "basic.target system.slice systemd-journald.socket docker.service", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "Conflicts": "shutdown.target", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "EnvironmentFile": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/kubelet.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "4096", "LimitNPROC": "15098", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "0", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "system.slice basic.target", "Restart": "always", "RestartUSec": "10s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min 30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "root", "Wants": "docker.socket", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}

TASK [kubernetes/node : Enable kubelet] ********************************************************************************
Friday 16 October 2020  02:04:05 +0000 (0:00:00.364)       0:05:53.649 ********
changed: [test1] => {"changed": true, "enabled": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 02:04:13 UTC", "ActiveEnterTimestampMonotonic": "891813943", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "basic.target system.slice systemd-journald.socket docker.service", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 02:04:13 UTC", "AssertTimestampMonotonic": "891809202", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 02:04:13 UTC", "ConditionTimestampMonotonic": "891809202", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/kubelet.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "EnvironmentFile": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "17375", "ExecMainStartTimestamp": "Fri 2020-10-16 02:04:13 UTC", "ExecMainStartTimestampMonotonic": "891813890", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[Fri 2020-10-16 02:04:13 UTC] ; stop_time=[n/a] ; pid=17375 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/kubelet.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Fri 2020-10-16 02:04:13 UTC", "InactiveExitTimestampMonotonic": "891813943", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "4096", "LimitNPROC": "15098", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "17375", "MemoryAccounting": "no", "MemoryCurrent": "16142336", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "system.slice basic.target", "Restart": "always", "RestartUSec": "10s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "7", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min 30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "root", "Wants": "docker.socket", "WatchdogTimestamp": "Fri 2020-10-16 02:04:13 UTC", "WatchdogTimestampMonotonic": "891813922", "WatchdogUSec": "0"}}

PLAY [kube-master] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.436)       0:05:54.086 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.041)       0:05:54.127 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.039)       0:05:54.167 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.039)       0:05:54.206 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.046)       0:05:54.253 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.043)       0:05:54.296 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.043)       0:05:54.340 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.038)       0:05:54.379 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.039)       0:05:54.419 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.038)       0:05:54.457 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.044)       0:05:54.502 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:04:06 +0000 (0:00:00.042)       0:05:54.545 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:04:07 +0000 (0:00:00.782)       0:05:55.327 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.779)       0:05:56.107 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes/tokens : Check_tokens | check if the tokens have already been generated on first master] **************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.079)       0:05:56.187 ********

TASK [kubernetes/tokens : Check_tokens | Set default value for 'sync_tokens' and 'gen_tokens' to false] ****************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.039)       0:05:56.226 ********

TASK [kubernetes/tokens : Check_tokens | Set 'sync_tokens' and 'gen_tokens' to true] ***********************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.041)       0:05:56.268 ********

TASK [kubernetes/tokens : Check tokens | check if a cert already exists] ***********************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.037)       0:05:56.305 ********

TASK [kubernetes/tokens : Check_tokens | Set 'sync_tokens' to true] ****************************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.036)       0:05:56.341 ********

TASK [kubernetes/tokens : Make sure the tokens directory exits] ********************************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.036)       0:05:56.377 ********

TASK [kubernetes/tokens : Gen_tokens | copy tokens generation script] **************************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.060)       0:05:56.438 ********

TASK [kubernetes/tokens : Gen_tokens | generate tokens for master components] ******************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.065)       0:05:56.504 ********

TASK [kubernetes/tokens : Gen_tokens | generate tokens for node components] ********************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.061)       0:05:56.566 ********

TASK [kubernetes/tokens : Gen_tokens | Get list of tokens from first master] *******************************************
Friday 16 October 2020  02:04:08 +0000 (0:00:00.065)       0:05:56.631 ********

TASK [kubernetes/tokens : Gen_tokens | Gather tokens] ******************************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.059)       0:05:56.691 ********

TASK [kubernetes/tokens : Gen_tokens | Copy tokens on masters] *********************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.040)       0:05:56.731 ********

TASK [kubernetes/master : Pre-upgrade | Delete master manifests if etcd secrets changed] *******************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.040)       0:05:56.771 ********
ok: [test1] => (item=kube-apiserver) => {"changed": false, "item": "kube-apiserver", "path": "/etc/kubernetes/manifests/kube-apiserver.manifest", "state": "absent"}
ok: [test1] => (item=kube-controller-manager) => {"changed": false, "item": "kube-controller-manager", "path": "/etc/kubernetes/manifests/kube-controller-manager.manifest", "state": "absent"}
ok: [test1] => (item=kube-scheduler) => {"changed": false, "item": "kube-scheduler", "path": "/etc/kubernetes/manifests/kube-scheduler.manifest", "state": "absent"}

TASK [kubernetes/master : Pre-upgrade | Delete master containers forcefully] *******************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.479)       0:05:57.251 ********

TASK [kubernetes/master : Make sure the users directory exits] *********************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.059)       0:05:57.311 ********

TASK [kubernetes/master : Populate users for basic auth in API] ********************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.037)       0:05:57.348 ********

TASK [kubernetes/master : Create webhook token auth config] ************************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.041)       0:05:57.389 ********

TASK [kubernetes/master : Check if secret for encrypting data at rest already exist] ***********************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.038)       0:05:57.427 ********

TASK [kubernetes/master : Slurp secrets_encryption file if it exists] **************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.037)       0:05:57.465 ********

TASK [kubernetes/master : Base 64 Decode slurped secrets_encryption.yaml file] *****************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.040)       0:05:57.506 ********

TASK [kubernetes/master : Extract secret value from secrets_encryption.yaml] *******************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.036)       0:05:57.542 ********

TASK [kubernetes/master : Set kube_encrypt_token across master nodes] **************************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.057)       0:05:57.600 ********

TASK [kubernetes/master : Write secrets for encrypting secret data at rest] ********************************************
Friday 16 October 2020  02:04:09 +0000 (0:00:00.039)       0:05:57.640 ********

TASK [kubernetes/master : Install | Copy kubectl binary from download dir] *********************************************
Friday 16 October 2020  02:04:10 +0000 (0:00:00.061)       0:05:57.701 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "cmd": "/usr/bin/rsync --delay-updates -F --archive --no-owner --no-group --out-format=<<CHANGED>>%i %n%L /tmp/releases/kubectl-v1.16.15-amd64 /usr/local/bin/kubectl", "msg": ">f+++++++++ kubectl-v1.16.15-amd64\n", "rc": 0, "stdout_lines": [">f+++++++++ kubectl-v1.16.15-amd64"]}

TASK [kubernetes/master : install | Set kubectl binary permissions] ****************************************************
Friday 16 October 2020  02:04:10 +0000 (0:00:00.400)       0:05:58.101 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/kubectl", "secontext": "unconfined_u:object_r:bin_t:s0", "size": 42967040, "state": "file", "uid": 0}

TASK [kubernetes/master : Install kubectl bash completion] *************************************************************
Friday 16 October 2020  02:04:10 +0000 (0:00:00.192)       0:05:58.294 ********
changed: [test1] => {"changed": true, "cmd": "/usr/local/bin/kubectl completion bash >/etc/bash_completion.d/kubectl.sh", "delta": "0:00:00.086190", "end": "2020-10-16 02:04:18.498814", "rc": 0, "start": "2020-10-16 02:04:18.412624", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [kubernetes/master : Set kubectl bash completion file permissions] ************************************************
Friday 16 October 2020  02:04:10 +0000 (0:00:00.271)       0:05:58.565 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/kubectl.sh", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 393965, "state": "file", "uid": 0}

TASK [kubernetes/master : Disable SecurityContextDeny admission-controller and enable PodSecurityPolicy] ***************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.193)       0:05:58.758 ********

TASK [kubernetes/master : kubeadm | Check if old apiserver cert exists on host] ****************************************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.056)       0:05:58.815 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/master : Copy old certs to the kubeadm expected path] *************************************************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.179)       0:05:58.995 ********

TASK [kubernetes/master : Install OIDC certificate] ********************************************************************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.168)       0:05:59.163 ********

TASK [kubernetes/master : kubeadm | Check serviceaccount key] **********************************************************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.036)       0:05:59.200 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/master : kubeadm | Check if kubeadm has already run] **************************************************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.197)       0:05:59.398 ********
ok: [test1] => {"changed": false, "stat": {"exists": false}}

TASK [kubernetes/master : kubeadm | Delete old admin.conf] *************************************************************
Friday 16 October 2020  02:04:11 +0000 (0:00:00.180)       0:05:59.578 ********
ok: [test1] => {"changed": false, "path": "/etc/kubernetes/admin.conf", "state": "absent"}

TASK [kubernetes/master : kubeadm | Delete old static pods] ************************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.198)       0:05:59.777 ********

TASK [kubernetes/master : kubeadm | Forcefully delete old static pods] *************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.070)       0:05:59.848 ********

TASK [kubernetes/master : kubeadm | aggregate all SANs] ****************************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.061)       0:05:59.910 ********
ok: [test1] => {"ansible_facts": {"apiserver_sans": ["kubernetes", "kubernetes.default", "kubernetes.default.svc", "kubernetes.default.svc.cluster.local", "10.233.0.1", "localhost", "127.0.0.1", "test1", "lb-apiserver.kubernetes.local", "10.0.2.15", "test1.cluster.local"]}, "changed": false}

TASK [kubernetes/master : Create audit-policy directory] ***************************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.173)       0:06:00.083 ********

TASK [kubernetes/master : Write api audit policy yaml] *****************************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.039)       0:06:00.122 ********

TASK [kubernetes/master : set kubeadm_config_api_fqdn define] **********************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.039)       0:06:00.162 ********

TASK [kubernetes/master : gets the kubeadm version] ********************************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.040)       0:06:00.202 ********
changed: [test1] => {"changed": true, "cmd": ["/usr/local/bin/kubeadm", "version", "-o", "short"], "delta": "0:00:00.052964", "end": "2020-10-16 02:04:20.371779", "rc": 0, "start": "2020-10-16 02:04:20.318815", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15", "stdout_lines": ["v1.16.15"]}

TASK [kubernetes/master : sets kubeadm api version to v1beta2] *********************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.233)       0:06:00.435 ********
ok: [test1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta2"}, "changed": false}

TASK [kubernetes/master : kubeadm | Create kubeadm config] *************************************************************
Friday 16 October 2020  02:04:12 +0000 (0:00:00.066)       0:06:00.502 ********
changed: [test1] => {"changed": true, "checksum": "1f919761806bd3e52ecc57c95dc01ae81c3ace32", "dest": "/etc/kubernetes/kubeadm-config.yaml", "gid": 0, "group": "root", "md5sum": "ea2c7460bb917f39cf58d64590d99c44", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 3094, "src": "/root/.ansible/tmp/ansible-tmp-1602813852.8906069-146485770882660/source", "state": "file", "uid": 0}

TASK [kubernetes/master : Backup old certs and keys] *******************************************************************
Friday 16 October 2020  02:04:13 +0000 (0:00:00.641)       0:06:01.144 ********

TASK [kubernetes/master : kubeadm | Check if apiserver.crt contains all needed SANs] ***********************************
Friday 16 October 2020  02:04:13 +0000 (0:00:00.109)       0:06:01.253 ********

TASK [kubernetes/master : kubeadm | regenerate apiserver cert 1/2] *****************************************************
Friday 16 October 2020  02:04:13 +0000 (0:00:00.161)       0:06:01.414 ********

TASK [kubernetes/master : kubeadm | regenerate apiserver cert 2/2] *****************************************************
Friday 16 October 2020  02:04:13 +0000 (0:00:00.057)       0:06:01.472 ********

TASK [kubernetes/master : kubeadm | Initialize first master] ***********************************************************
Friday 16 October 2020  02:04:13 +0000 (0:00:00.045)       0:06:01.517 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": ["timeout", "-k", "300s", "300s", "/usr/local/bin/kubeadm", "init", "--config=/etc/kubernetes/kubeadm-config.yaml", "--ignore-preflight-errors=all", "--skip-phases=addon/coredns", "--upload-certs"], "delta": "0:00:20.549421", "end": "2020-10-16 02:04:42.190134", "failed_when_result": false, "rc": 0, "start": "2020-10-16 02:04:21.640713", "stderr": "W1016 02:04:21.699033   17563 defaults.go:199] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]\n\t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/", "stderr_lines": ["W1016 02:04:21.699033   17563 defaults.go:199] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "\t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/"], "stdout": "[init] Using Kubernetes version: v1.16.15\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Activating the kubelet service\n[certs] Using certificateDir folder \"/etc/kubernetes/ssl\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [test1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local localhost test1 lb-apiserver.kubernetes.local test1.cluster.local] and IPs [10.233.0.1 10.0.2.15 10.0.2.15 10.233.0.1 127.0.0.1 10.0.2.15]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] External etcd mode: Skipping etcd/ca certificate authority generation\n[certs] External etcd mode: Skipping etcd/server certificate generation\n[certs] External etcd mode: Skipping etcd/peer certificate generation\n[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation\n[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[controlplane] Adding extra host path mount \"etc-pki-tls\" to \"kube-apiserver\"\n[controlplane] Adding extra host path mount \"etc-pki-ca-trust\" to \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[controlplane] Adding extra host path mount \"etc-pki-tls\" to \"kube-apiserver\"\n[controlplane] Adding extra host path mount \"etc-pki-ca-trust\" to \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[controlplane] Adding extra host path mount \"etc-pki-tls\" to \"kube-apiserver\"\n[controlplane] Adding extra host path mount \"etc-pki-ca-trust\" to \"kube-apiserver\"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 5m0s\n[apiclient] All control plane components are healthy after 16.003448 seconds\n[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n[kubelet] Creating a ConfigMap \"kubelet-config-1.16\" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace\n[upload-certs] Using certificate key:\n6f814e43daa1c814db0473a5ae5cc7b8cc8786cc2c3fff8238f72d435fa93ea1\n[mark-control-plane] Marking the node test1 as control-plane by adding the label \"node-role.kubernetes.io/master=''\"\n[bootstrap-token] Using token: 5xb6q2.vwkgfy7o8j0w8usm\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of the control-plane node running the following command on each as root:\n\n  kubeadm join 10.0.2.15:6443 --token 5xb6q2.vwkgfy7o8j0w8usm \\\n    --discovery-token-ca-cert-hash sha256:53621c2b6fd4e9d4644de9b21d1503c3eaebc7096ddd9f42e9e8e56b9cace4e3 \\\n    --control-plane --certificate-key 6f814e43daa1c814db0473a5ae5cc7b8cc8786cc2c3fff8238f72d435fa93ea1\n\nPlease note that the certificate-key gives access to cluster sensitive data, keep it secret!\nAs a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use \n\"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward.\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 10.0.2.15:6443 --token 5xb6q2.vwkgfy7o8j0w8usm \\\n    --discovery-token-ca-cert-hash sha256:53621c2b6fd4e9d4644de9b21d1503c3eaebc7096ddd9f42e9e8e56b9cace4e3 ", "stdout_lines": ["[init] Using Kubernetes version: v1.16.15", "[preflight] Running pre-flight checks", "[preflight] Pulling images required for setting up a Kubernetes cluster", "[preflight] This might take a minute or two, depending on the speed of your internet connection", "[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'", "[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"", "[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"", "[kubelet-start] Activating the kubelet service", "[certs] Using certificateDir folder \"/etc/kubernetes/ssl\"", "[certs] Generating \"ca\" certificate and key", "[certs] Generating \"apiserver\" certificate and key", "[certs] apiserver serving cert is signed for DNS names [test1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local localhost test1 lb-apiserver.kubernetes.local test1.cluster.local] and IPs [10.233.0.1 10.0.2.15 10.0.2.15 10.233.0.1 127.0.0.1 10.0.2.15]", "[certs] Generating \"apiserver-kubelet-client\" certificate and key", "[certs] Generating \"front-proxy-ca\" certificate and key", "[certs] Generating \"front-proxy-client\" certificate and key", "[certs] External etcd mode: Skipping etcd/ca certificate authority generation", "[certs] External etcd mode: Skipping etcd/server certificate generation", "[certs] External etcd mode: Skipping etcd/peer certificate generation", "[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation", "[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation", "[certs] Generating \"sa\" key and public key", "[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"", "[kubeconfig] Writing \"admin.conf\" kubeconfig file", "[kubeconfig] Writing \"kubelet.conf\" kubeconfig file", "[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file", "[kubeconfig] Writing \"scheduler.conf\" kubeconfig file", "[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"", "[control-plane] Creating static Pod manifest for \"kube-apiserver\"", "[controlplane] Adding extra host path mount \"etc-pki-tls\" to \"kube-apiserver\"", "[controlplane] Adding extra host path mount \"etc-pki-ca-trust\" to \"kube-apiserver\"", "[control-plane] Creating static Pod manifest for \"kube-controller-manager\"", "[controlplane] Adding extra host path mount \"etc-pki-tls\" to \"kube-apiserver\"", "[controlplane] Adding extra host path mount \"etc-pki-ca-trust\" to \"kube-apiserver\"", "[control-plane] Creating static Pod manifest for \"kube-scheduler\"", "[controlplane] Adding extra host path mount \"etc-pki-tls\" to \"kube-apiserver\"", "[controlplane] Adding extra host path mount \"etc-pki-ca-trust\" to \"kube-apiserver\"", "[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 5m0s", "[apiclient] All control plane components are healthy after 16.003448 seconds", "[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace", "[kubelet] Creating a ConfigMap \"kubelet-config-1.16\" in namespace kube-system with the configuration for the kubelets in the cluster", "[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace", "[upload-certs] Using certificate key:", "6f814e43daa1c814db0473a5ae5cc7b8cc8786cc2c3fff8238f72d435fa93ea1", "[mark-control-plane] Marking the node test1 as control-plane by adding the label \"node-role.kubernetes.io/master=''\"", "[bootstrap-token] Using token: 5xb6q2.vwkgfy7o8j0w8usm", "[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles", "[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials", "[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token", "[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster", "[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace", "[addons] Applied essential addon: kube-proxy", "", "Your Kubernetes control-plane has initialized successfully!", "", "To start using your cluster, you need to run the following as a regular user:", "", "  mkdir -p $HOME/.kube", "  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config", "  sudo chown $(id -u):$(id -g) $HOME/.kube/config", "", "You should now deploy a pod network to the cluster.", "Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:", "  https://kubernetes.io/docs/concepts/cluster-administration/addons/", "", "You can now join any number of the control-plane node running the following command on each as root:", "", "  kubeadm join 10.0.2.15:6443 --token 5xb6q2.vwkgfy7o8j0w8usm \\", "    --discovery-token-ca-cert-hash sha256:53621c2b6fd4e9d4644de9b21d1503c3eaebc7096ddd9f42e9e8e56b9cace4e3 \\", "    --control-plane --certificate-key 6f814e43daa1c814db0473a5ae5cc7b8cc8786cc2c3fff8238f72d435fa93ea1", "", "Please note that the certificate-key gives access to cluster sensitive data, keep it secret!", "As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use ", "\"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward.", "", "Then you can join any number of worker nodes by running the following on each as root:", "", "kubeadm join 10.0.2.15:6443 --token 5xb6q2.vwkgfy7o8j0w8usm \\", "    --discovery-token-ca-cert-hash sha256:53621c2b6fd4e9d4644de9b21d1503c3eaebc7096ddd9f42e9e8e56b9cace4e3 "]}

TASK [kubernetes/master : set kubeadm certificate key] *****************************************************************
Friday 16 October 2020  02:04:34 +0000 (0:00:20.762)       0:06:22.279 ********

TASK [kubernetes/master : Create hardcoded kubeadm token for joining nodes with 24h expiration (if defined)] ***********
Friday 16 October 2020  02:04:35 +0000 (0:00:01.016)       0:06:23.296 ********

TASK [kubernetes/master : Create kubeadm token for joining nodes with 24h expiration (default)] ************************
Friday 16 October 2020  02:04:35 +0000 (0:00:00.065)       0:06:23.361 ********
changed: [test1 -> 10.1.7.152] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/kubeadm", "--kubeconfig", "/etc/kubernetes/admin.conf", "token", "create"], "delta": "0:00:00.079102", "end": "2020-10-16 02:04:43.566780", "rc": 0, "start": "2020-10-16 02:04:43.487678", "stderr": "", "stderr_lines": [], "stdout": "8twwfb.bucizcfcwqgf0s54", "stdout_lines": ["8twwfb.bucizcfcwqgf0s54"]}

TASK [kubernetes/master : Set kubeadm_token] ***************************************************************************
Friday 16 October 2020  02:04:35 +0000 (0:00:00.287)       0:06:23.649 ********
ok: [test1] => {"ansible_facts": {"kubeadm_token": "8twwfb.bucizcfcwqgf0s54"}, "changed": false}

TASK [kubernetes/master : kubeadm | Initialize other masters (experimental control plane)] *****************************
Friday 16 October 2020  02:04:36 +0000 (0:00:00.066)       0:06:23.715 ********

TASK [kubernetes/master : kubeadm | Initialize other masters (legacy not control plane)] *******************************
Friday 16 October 2020  02:04:36 +0000 (0:00:00.042)       0:06:23.757 ********
included: /home/vagrant/kubespray/roles/kubernetes/master/tasks/kubeadm-secondary-legacy.yml for test1

TASK [kubernetes/master : slurp kubeadm certs] *************************************************************************
Friday 16 October 2020  02:04:36 +0000 (0:00:00.115)       0:06:23.872 ********
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/apiserver.crt) => {"changed": false, "content": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVHVENDQXdHZ0F3SUJBZ0lJQjZqRFlibzA0YW93RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TURFd01UWXdNakEwTWpKYUZ3MHlNVEV3TVRZd01qQTBNak5hTUJreApGekFWQmdOVkJBTVREbXQxWW1VdFlYQnBjMlZ5ZG1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXY0azBneEY5K3p6cnMrSWpQRmRyVy8rOTZKTWJpcjJ5K1RYc0dQbGE1ZWxTZzdzaUZTeDcKWWlkNnRMNEk0TlhzZmgyRWlqQVVXNUpTYmx4S3Mwa1p2R1o3OFdzYlRFOE5zWnV4V0VSVXZCVEJrMWlEYU1zWQpsVHBRdENvY3BrZXBtMzFrNHJiV2hnemV6TUU3Z1hWcTFOWWtUVzdka2VWNkVwazlqSFd5bGVTdFQ1MjlCdkkwCjlPVmxlYjhibHA5RGRMQ2t4QXVuL3NjdHFBdG9PZkMwWHBYS2Y3ZlVMS1ZNOEdoeFN1QVdzak85NFVXcWtLeWIKTGRTdHJodWVmZ0JKMzR5TmJqOGt4THE0c1FyNHR0N0VrNUlOTHF5V0o1bEhqRzM5T1B4dkphdE9hZkZPQVJzawpmUWd2TEg2aWcxUkFFZG83Vm42Z0NzcG5JRUVFaG1pRXRRSURBUUFCbzRJQlp6Q0NBV013RGdZRFZSMFBBUUgvCkJBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQk1JSUJPZ1lEVlIwUkJJSUJNVENDQVMyQ0JYUmwKYzNReGdncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUthM1ZpWlhKdVpYUmxjNElTYTNWaVpYSnVaWFJsY3k1a1pXWmhkV3gwZ2hacmRXSmxjbTVsZEdWekxtUmwKWm1GMWJIUXVjM1pqZ2lScmRXSmxjbTVsZEdWekxtUmxabUYxYkhRdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5QwpDV3h2WTJGc2FHOXpkSUlGZEdWemRER0NIV3hpTFdGd2FYTmxjblpsY2k1cmRXSmxjbTVsZEdWekxteHZZMkZzCmdoTjBaWE4wTVM1amJIVnpkR1Z5TG14dlkyRnNod1FLNlFBQmh3UUtBQUlQaHdRS0FBSVBod1FLNlFBQmh3Ui8KQUFBQmh3UUtBQUlQTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBZVJuSjZheGRXY2g1bGVZQUFkRXZ5OSt1QQpjNUJ4M0dNekI4Ykdjc1NGU2VEYVlFVnZYeXE3WlpOOHlEem5pbFF1UW9PZHk3UThoTk5vcXFKRnovRzVVWVRpCnp0eGsvMHd2NUZ1UEJKQXdNNVE4cFU0ak8yS245N2VIT2twQytUZ2ZiR2ZpUFIwM0lzUjEwdzkyYjRGdkQ1b3cKZ1lhZFgxNmMwUVJCdVNIU1VGUTZDSGJkaG1UZmVoQk1XUkVMeVoxMGJPT3o1QnV3aEpNMnNTZGdoWXhNczU2dApXVWJmbWN0NUQ0T2NxTkNBVUNlN2RVK3owNWpqcFJIMkgrTzZvUlFWMkF3N2t0UFNHNnljYVhpbVBpYnNaeVhDCi9XV3RDZlMyVnYycUt6R215VktGeTkvQTNoM3RLN3pWOFZGbVVrdkNFalV6dVljWWVhSjlyeE9MRjIxSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/apiserver.crt", "source": "/etc/kubernetes/ssl/apiserver.crt"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/apiserver.key) => {"changed": false, "content": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjRrMGd4RjkrenpycytJalBGZHJXLys5NkpNYmlyMnkrVFhzR1BsYTVlbFNnN3NpCkZTeDdZaWQ2dEw0STROWHNmaDJFaWpBVVc1SlNibHhLczBrWnZHWjc4V3NiVEU4TnNadXhXRVJVdkJUQmsxaUQKYU1zWWxUcFF0Q29jcGtlcG0zMWs0cmJXaGd6ZXpNRTdnWFZxMU5Za1RXN2RrZVY2RXBrOWpIV3lsZVN0VDUyOQpCdkkwOU9WbGViOGJscDlEZExDa3hBdW4vc2N0cUF0b09mQzBYcFhLZjdmVUxLVk04R2h4U3VBV3NqTzk0VVdxCmtLeWJMZFN0cmh1ZWZnQkozNHlOYmo4a3hMcTRzUXI0dHQ3RWs1SU5McXlXSjVsSGpHMzlPUHh2SmF0T2FmRk8KQVJza2ZRZ3ZMSDZpZzFSQUVkbzdWbjZnQ3NwbklFRUVobWlFdFFJREFRQUJBb0lCQUNMS1NUK0ZiZHkwdEJ0NApkKzM5OHdKQzhidk0vTE8yd1V1Qy85K0phM2xYYUNXRldDdUFhT2pyUXQ2UnBnc3cwRVFZR0hzQlFMRmhZcGVwCksraGszc2ZaMWFtRVN2RVJhdXRYM0Y2c0NyZ2ZEUW8yaWFmL08vZmZIOG1aM0pwWGFmZFVUMzdldHhpaVBkWHoKUTF2QWVDY3d2bWRTTyt6RVFlZ2U3WThWMGRwbjNnWGgzUWlhQ0kwK1J0aWtvVGQzOVdLQjY3ZUxjN3lEWGNuQQpPVklHbGlBUjU2MThxakFTZEg0Yk41QUI0WlZPSUhJTm5xSWN0NVJLSGsxNTd3N0J1VGdjb0J1ZVRMSDV3Y095CmhKeFVVZ2dnNE9tWVhaS2RteVNvemE1QlBZK1lPbTZWdEtnUGwwRGtJMDcwYkVlWDhlYVBjdTI5Um1VWHF6bVoKZndubW5nRUNnWUVBK21hRlluK3BJNWlJTFowQXNMY01ZS3d5bUdmRG5wK1hmSUh6ZjV1dHl5dG9rOXY2Tms2Qwp0Sjk3QTErd2E5M2owZ2FqWVNsWHlpSXpRaG5Xbyt5R2JONkVxcG9lNkdBOWpmdTBzUjBlR0tIMk5ZcFBZMWg5CkVFTUNqY1BldDc1U09oYVdhTHczL1pQQ3U2VFV2UEFkNDdqWXZOZ3BSN1FtS1RTcVlZbDdlWXNDZ1lFQXc5R3oKSVM5a09jNTBMeHgvUE5tRzZSaUIzeFRtd3dISlJ1TmlLa3BPYjBBVVJjcmZoQ0dsOEF2RnZORXRPWGh5ak9IbQp2cjRrRjQrNUd6NXFOdkRGWkFTd3A5QUgrSm9IRUp6UW1IeFFNTlpkQmpabXJjRnpVV044UHNvZzV6YTFGQzNZCnd1aVV0eEtwSlZzY1BGN1NCd3ZteTZFVTZYM290VXAwWXVvNVFyOENnWUVBMzB2TGlRSUZDRHcrdkVaMVZpRjIKaFVNcVAyVFJPc1JnNStSUEM2Mzl0dDkzKzl0QWIydGwvY0wyaFJTeEZCQWsyS2VZek0xOGYwSXVhYlQzQnVtbgpHckQ0cDlhVzEyenpsNGt1SW4rdjFoR2dxVEExQ1lmZ3h6NnFxVmRSWnBQdmFlTzRyNStoWXAyQkc2cXJGKzRkCkNYVk91bUVkdHRhODdTUU5DTHY4ZzI4Q2dZQTg5QmwrU3ZJM3pEditMakN0RUVrZVpiS0hia29taVhmTnlSblYKY0N2YUZXZzZFVnhpRk5kQ1VXZkx6cEQxUXJqbGdhd0IwODRJUjRTbkpsYUpvNGpPQ1dlejFOMm1WTXUrTUJIKwpaVFBRLytrVTlmb2dQQWRaWGs1ZWZTeWd6RGF4Z1ZQbjE5M3kzcXdvSktRMVpvNmFBdXBrbUUrYUhzZEJKMXZ6CkxsV0VvUUtCZ0RxSll4bktnaDd2aVMwTnVNVWhCUTlGNFV1UzRaS2k2V2t2VkxuQUNsZktZUkEvWUhnOVMrMHgKa0JoVlh3SU4wUkpqcnJvR3RtdUNoOFFyM1lJeEtZY1ZlTzFLYjYxRzluTitXaHhZV2FlQWlBL2pTVEdVWFRhNAp5dzNuUCtFeDdvZFBNVGIzVkcwWDZTS0dmaW4xaTJwRlRDTVFRMlpNdmpGd3BWMXdaOWp6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/apiserver.key", "source": "/etc/kubernetes/ssl/apiserver.key"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/apiserver-kubelet-client.crt) => {"changed": false, "content": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvekNDQWVlZ0F3SUJBZ0lJWVEyTGRpakpCSjR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TURFd01UWXdNakEwTWpKYUZ3MHlNVEV3TVRZd01qQTBNak5hTUVFeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1TWXdKQVlEVlFRREV4MXJkV0psTFdGd2FYTmxjblpsCmNpMXJkV0psYkdWMExXTnNhV1Z1ZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUx6R0FENDhMUm9oaHdubkxzcVNBTmh5RHl5RFJTczE5TUxtYk12Qmcyd3M0TzJYWjIySlNNOVpwdS90aHB3dQo4eXFWTjBvT1Zjd3Y5cENvdnp0eXhhSTdBcHdXRHlQbm0vUXhSeHFaQ0NVRy91NkpVbGkrVEJFaGhGSENHbUVKCkJENExteWRHdVdCd3ZyT0xZWXZXdWVkSVZvbkhYM29JUWU0UGNQVWlxRWZLeXo2QzZPN1Zmai82WFo0cjdpUXcKa0JCaWtWaXhRemF6TUlEcWlVMkNCRXFlOHBuQVpaQk9paDdWTGVsaU15TzF4ZHAxR2cyZkpxcEFpRmNaa2prRwpFRUwycWtLK3JhZ1VYWndFK0x3c1Z2ZkI3a2swS21nMlVqWHova2kwZnQxNTE1NnF6ei9JbWZsbEpia0d3Y1RRCjFqTVk0M2FLZEtaQnlRUkJ0eWpRR0wwQ0F3RUFBYU1uTUNVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWQKSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUIvWUlBNkpPN0tUR0lYb0djeQpuWmd4VW1JOFVURXUyM2FKb0h4QVliSGx4OUpFUUE3RnFOQ3FSU0NFNWRGOHJVQk15bncrWmU4QnNUcnNKU2hTCnJBbWNHamRRMkZGNmVvUGVzUlJxT0wwckM3aElZWlFKakk0d3Z5djkwcXh0V3ZoeGVLZEs2bzVVaXRwNFUyM1QKWHFIUTlpb1ZjazZkeG5uN3J3bVRBNG55Wi9zK1BhY09vdVE5VEZMZ3FZSXV5cEt5bVBQY0wxQ2xtUVhTeThuRwpzbEdyRllLRE1pTkN4bFJscFJHcXhzTDFBeTc5REZwSlN4RzlIbHc3UG9aSC9VbGFxMm1sYndyWW9XQlBkVG5oCmIycjJQTVRhM3VkVkFMRjdkeStBbEdlMThnVUQwWSsxejhPdUUxRlJodGlqcGlzS0Y5UG1RUHJmUVJkOWpFTWQKY0dxeAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/apiserver-kubelet-client.crt", "source": "/etc/kubernetes/ssl/apiserver-kubelet-client.crt"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/apiserver-kubelet-client.key) => {"changed": false, "content": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdk1ZQVBqd3RHaUdIQ2VjdXlwSUEySElQTElORkt6WDB3dVpzeThHRGJDemc3WmRuCmJZbEl6MW1tNysyR25DN3pLcFUzU2c1VnpDLzJrS2kvTzNMRm9qc0NuQllQSStlYjlERkhHcGtJSlFiKzdvbFMKV0w1TUVTR0VVY0lhWVFrRVBndWJKMGE1WUhDK3M0dGhpOWE1NTBoV2ljZGZlZ2hCN2c5dzlTS29SOHJMUG9Mbwo3dFYrUC9wZG5pdnVKRENRRUdLUldMRkROck13Z09xSlRZSUVTcDd5bWNCbGtFNktIdFV0NldJekk3WEYyblVhCkRaOG1xa0NJVnhtU09RWVFRdmFxUXI2dHFCUmRuQVQ0dkN4Vzk4SHVTVFFxYURaU05mUCtTTFIrM1huWG5xclAKUDhpWitXVWx1UWJCeE5EV014ampkb3AwcGtISkJFRzNLTkFZdlFJREFRQUJBb0lCQUhseG9HSnBjRktwVXlqcAowODU2azVTci9Gc1VzSUVXR3pydjV2cEdxbmdEZjBrYTZHMHRydXZHcjRFWGZFd3FZRUg2OFREeGUvejZ0bE5tClhIQ3dhN2pzNGNiczRoeWxPazJsRGl0c1hETUdCeWdLckRGdmE1eHh4YUNia1VEdi9neTBoc0tEMjJyUjNiM0EKWTZjRkkyQkp4M0tvRXlKOUFYMVg3Y0dtNUVBYWVpSzdxREd2b3ZCd3U5bWhxOVBQZHh5d2s2QWt1NDl2UzdoSgoxY3NReENxRVVzN1UzWUJrM3QxdUpYY1hOdndWUjMrYzZhU2tVeDZmVlFibUxpbEgrbXN3cjI1Q1pNOEtmYlBKCnFqSjJCVmEvRWxsMXVBTisvL29CYkV4TUt5c3ZhVEZuNjY2QXZWOTY2OTFNT2xLMHVSTnBadWpsM3BVN2dvUysKU2VrTGRNRUNnWUVBNGpZejhWU05sOGowM1VpZzBvRE9kUEg3VjA2RWNDYmRCSDQxYUVlR3plSnZNcVE1cG1LTApnaGNPcGQwRWNRdjVLSXc1cFVnK2E2TmZ2OTdKcXEzMEtWRTVWazMvU1ZrcjM0NHVjVWZodmZrZ0lrTnc1ckVsCjdwN2RabUcxeXFvQ0NvdXZRY2NNSzI1RGNZc0JBeVZjMFdpWmFTRHAwSE5FZkV3WjBneHkwbGtDZ1lFQTFhRzQKWklMQ2VXMC9jdkFBVHpvL2QzaGRmRkM2T2cwUUNwNDcyWm5tU0JTUC9nU295SXZHanJuTGlwUXRNZ0FtK0pKZQpJWGZtMG5JNW5heWsxS09NOTdJRy8rZDV4eXhLZVpKRXFPdmVVNEVOVzgva3BvdDJVMjdjS3lJckJPK1UzdUpICnBuTFJ6aXhjWmVOdmg3Yy9sWFVUby9MclZ3NWRHak5HZC9yZ1JRVUNnWUFPQzNsOElWak5OTC9uUVV3aTViWnIKMGw1ZGxGVnF0UzhCeVdnOWVqdG5hd2ltWjBYaEM3dEhyM0RNWVlXV0V6MDhCRURMLzBsSTI1TGxVY3JKbXhWTwp2MmxFNzRETEtBc3VUU0NiRGZCNUlBK2JzUDVBaEgwcmJKZW9kS2FaMTZaYXkwTnRYUk5uV3VnN0UzdFRtNjFBCm56THZNUWp6VlVUS1J0dFBqRkJRdVFLQmdDT3E4cHhsY0k3UmZLeDJBYmM0cEd3UC9wdkk1cTdXaTMwYVdpZkUKbUR3a29yM29qVDJlaUxJL3R3b1dIMDJmMU9IZm5qTzhUeCtIenJMU3BscVNTL0QzR2xBVGw3TjNZNS9VbWY0UwpFM2FocjFkSzZJUWQrTTJKVHQwc3dUMzd1a0ZVU2w0eUFYR0kyb3h3WXFpb0ljZVVXb2tlLzhmekwvdzEzMmdjCnpPRDVBb0dBYmlHVFlMOFVWbmpsUmZPT0ZTbm5PTHo3SCtVQnVZQ29odjZCczM3U2dPMTJ6OXJTZndEUlJTOHUKc0c1Q1FkdGZjMm1FczFpa1BvQ3VLbW1hTzJhY0EzYUdsOFpPMXUzazcwbnE2N1pqTlpZVWJ6Rnl3dEtNMmlNQgp1dWE1akdKWk5iZC82MEZVdlQ5RU5mK044UTNJKzRJNXFWc1A1aW1HRmE2WVN3RS8zRzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/apiserver-kubelet-client.key", "source": "/etc/kubernetes/ssl/apiserver-kubelet-client.key"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/ca.crt) => {"changed": false, "content": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01UQXhOakF5TURReU1sb1hEVE13TVRBeE5EQXlNRFF5TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHRECnp4NEJYU1A2dHVCa0VOcGhqajBTUExYT0ljbzBEcnJKY29mMmozdW1lQ2tEU0JqeUNEbUt1d1c3ZFRqTWVWYTgKK2lYZmw3MGhrZVBPemZ2MkdLSm0vZnlRRGZsUkh5Q00zMUtPUmdaY0U2VFdEZE9jMkkxVno0QnJvME1qaWRndAo2ODlKL2lseUxTRDA1cW1KcE1ySTF4TUQ1Z2lLOVNrWHlER3cvaldYQTB5SkozWHZzd01hc0xJOHdXdVZhSS9VCjhlUG8rNUY4aXR3QXc1UWhnZnEwSEI4MlZScExqMWNBdGRuc1llY3A5WU81QXlvL2pjT0JhM0dtbUcyMHlCTC8KcnpBd1Roa2F4Q1RPenV3NXZrN0svdU1LeGhEdjk0cmU5Wkh6b2V3V2Y5ZytncnNaSW9GdDJJTEFQQUYrSHRCSwptWTdWbVp6QnAwRVdaY3NsRGgwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDMFZaVUJ1RzAwN0t4VkRMMHB4L0dDWTJ3YUEKZlRrc3Vrc0JkWmN4SDdWU1I5VFdlWkEweXVPRUM1Rlc3MnlnYmEzQkxaOVVGanFZd1NOUXc0SU5hN1UyQmdVNApjRHd4OWxSUURvMEk1b281TGQrOTltRW5JZzloWDlJV3BZRzJNT3hTamtVeS9pY1BtemJ3bE51dGczcnYzTE1IClJBNnBCVEZZNWVMMnJnQXJ3czl3dnR2bEx6WkJEU214eHovOEpvWkc5RVVYdDdha0FITUNieTBsWFRmL2E3M0QKZERmMm9BZ3N5cnpSK1BNYldsTkEyc2dlVlgxejVWQWd0OEIvcVVEYThsRTZ2YlJpWDM3N01ZalphNFp3UkpjcgpqU1cvZ3BWZTZRU1VnczcrOXFSTWNLcHBnTkhIWjdJTEovZVpYRm1KSGwvZFNuTTllNUpJazNpTERRbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=", "encoding": "base64", "item": "/etc/kubernetes/ssl/ca.crt", "source": "/etc/kubernetes/ssl/ca.crt"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/ca.key) => {"changed": false, "content": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTBQUEhnRmRJL3EyNEdRUTJtR09QUkk4dGM0aHlqUU91c2x5aC9hUGU2WjRLUU5JCkdQSUlPWXE3QmJ0MU9NeDVWcno2SmQrWHZTR1I0ODdOKy9ZWW9tYjkvSkFOK1ZFZklJemZVbzVHQmx3VHBOWU4KMDV6WWpWWFBnR3VqUXlPSjJDM3J6MG4rS1hJdElQVG1xWW1reXNqWEV3UG1DSXIxS1JmSU1iRCtOWmNEVElrbgpkZSt6QXhxd3NqekJhNVZvajlUeDQrajdrWHlLM0FERGxDR0IrclFjSHpaVkdrdVBWd0MxMmV4aDV5bjFnN2tECktqK053NEZyY2FhWWJiVElFdit2TURCT0dSckVKTTdPN0RtK1Rzcis0d3JHRU8vM2l0NzFrZk9oN0JaLzJENkMKdXhraWdXM1lnc0E4QVg0ZTBFcVpqdFdabk1HblFSWmx5eVVPSFFJREFRQUJBb0lCQUVxSStkWWlpdFQ0UkhQWgp3RTk3aHViTjdIWWNmcHlCemQ4UXNWSm1rOE9PaGNNbE9Ed2RrYUo5a21UOHNQS1RpRFE2OFlIRGxoekVVTklRCmpUSWRTTDdUS1lLdVA3R2RWVHRhZHNUZ05nVHYveTJidVZNaDJadWZyUUNiVnhjdy9QdWJnNEUxSFVHWDNWaUIKd1pGM1pLMEY5WHp2RDA4VkovRmNNdVY4WWlJbnM4YTluc2JSZFdGTiszOTZFRm5Rd3FyQnArNTFrVDRCK3lWeQpFRDRCd2p1OU9MSTFtY2NyMUlYdWdOeWZNdEQxS3RZcEZXT2VhVk9maE94WkErSjJlbG9SaGZnbUNoY0lQREE2CkJSNG00c0RUS20zWFVuNGVRRUxSNGRDaWdybWFqU2dGd0JHcllIUy8zQ2h4dHBCWkpDUHhhZWdleFRkOFpncGIKaEpyWTlvRUNnWUVBNUlNdkwwc3BUQU5NR2NFQTRWRG1LWWhoSGMvcXYyQ1N4c1pxa3V1VXVETTdwcEpnSVJIego1bk1ORis0bWRyeXVUV3pPWDlaSEROd3huUnd0bnhUNjBGdFJkMFdkV1JkQW14eDZOV3YveXB2T3VCR2xyL3kwCnRMQVR6S1JpUG5ZcnlkekJUVFQrc1VTc2NOWU9ta1hRcURQQ3A5OG5JRlV5Vk45enk1eklmTDBDZ1lFQTBjcHkKWExLM21jeVg5Mmo5VFhhdU9JYnhvTlB4REVYc1FkanhpRjIxTmNJdEljWGtqN1ZDcHBzcEVQcmJWQ0E2UE8rdwp4Tk9MdHhFcmxqTGVabTlpTVVNSUgrOFdvOUNTa3dVY0FpQ0NmUmxXVVhkVlptd29nemJ5UUwzZVREL01vaExsCmhaekNkVDEvamJENVhOdDg1Z1VhdElVTmFXaGN2Q1BqcmdNQjNPRUNnWUFKZy9EdURqb3RBU0lsSEdWVi9KRm8KLzFYVDhQbDhlS0FFQ1BVZEl4UXhTMmpiZWRMbzdaOXpaQzBTWndkUkFIQmRwdjg4L0dZL0FkaExDNFpXem4vWApOMFpBS2pUd0pjaTU3TWlsK3RaTzhJZitJRFgvQ3czWFRGRzJ2czJjZmowNmphZTYrRTcyd0w1UmdJaGhJakViCkgvU21HdU85TSs4Qm04QnRwUnl3SFFLQmdRQ2NWUlZWdUtRU3l5QnZjT0JaaWxnWHJZOS92cEJCQ2hZZGw1R2QKZ2Q4WWVXTnlhR3FESUpyVFZvcUtxYlVwZ242RGpFWVkxbCttQXZpTkM4a3BZbFUweW5QU2dETkp6Wko4Vm5GaApzR0lzNE9XdS9aTTVLTjRqc1oxaTIxbzlUY21xK1JQcXRqOCthSjZWc3N5UUFzdVhDVFMyVXZRRW1ZMkpjZUVuCmVmdzRZUUtCZ0Q2OXduL092S3BKTEt6RGlDdERVckFvNzgzWTE0cDlmN0VrSmhPSlZsTmE2OU9yaWlxb2lBZ3EKZnpXTmxGZmFueDUyWlgxYUFIcE91NXo4RjdvbHM4V0Q1N3BZWkNBL2xkZWE3MGtORUpkaldiUUdhU21aN1QxUQpZU3Z3WlluSWlqbWtxcENzUG1leTlrSnFURWQyKzFlS1ZtSHhqZTQ1WW05bzNpYVQ2T1dUCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/ca.key", "source": "/etc/kubernetes/ssl/ca.key"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/front-proxy-ca.crt) => {"changed": false, "content": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwRENDQWJpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFaTVJjd0ZRWURWUVFERXc1bWNtOXUKZEMxd2NtOTRlUzFqWVRBZUZ3MHlNREV3TVRZd01qQTBNak5hRncwek1ERXdNVFF3TWpBME1qTmFNQmt4RnpBVgpCZ05WQkFNVERtWnliMjUwTFhCeWIzaDVMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCCkNnS0NBUUVBMkNTY2kwckw0K0kwR2tEc1NmTHNRK3ZrYTFBU28rZnF3VENrRTlDYzBYTUI0aDVXUGpHVkxqYmcKR3RaK2E1VGZZZWxBY3lFa2tBeGplTFhYZENCem1RZlYrT05wMGNRWGhRbWJXYWlmbHNkWnlaZGFITURYNzNrQwp5NGdMdmVHa1YrNGxMaVJYS09YQlB5d3RoYS8rQk40SHpKOFlnSTM3dlpoOGZXSnFOVW8xcjlOYkJCMU1TM3BEClVGWXN0UXRtemdJQmF6VE9wVWVYYVplZjdQUVlZakZ0UUtmcFFCakFITGJ5VE5pYmJJaWVISU1FWU84WktSNzkKVk1YbXBpSmp4VTBxS29XalN4aHVqTDhKUE5MUW1TZDBOcTIwc2FUbytKaXk4RXN5VWRvNmZzVjhOWXFUQ1VzRApFL0ZlSHNuZjZqWit3Ri84NjRxMktST2k2a0tmRFFJREFRQUJveU13SVRBT0JnTlZIUThCQWY4RUJBTUNBcVF3CkR3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXMyNmhrdTYxV0tFMGZGWm8KazYyUUtuVXRVYXFHa2N2U3ZiYWhJK1dVcy9qejlseWRubU84cDIvUUR6RGEvODBaR09ZZC8zMGVrYVZEWk9Ibwo3aFRaTWJFS3ZRaWF2VWV0N1gvczlrNXlWdHBpVEtDOXovaFJrOFRuRlhBWU9tQ1BPd2RJZEcvTlIzdjdxcWNqCjlBblg5czhnQUxrUm9GVVRBdElnNjBGYnhuTlpJQklaVlVjd0xsbUNkSzRGU2Y1dzg5c09Tc1pSOTF5aEc3cUoKRlBTUWwrU2VBUndkTDd0ZmZXRSsrOTdLM3FqckRRTlo4NnpBOVJrdDJ4VXJwSkJ1Q3ZZWVJOczVnbkVZckwrZwp3bitOMlpCc25FM0RDYzdtakJGMkhPTlJSMzZZQkkzRHFWb3ZqWHJLSlNNdFErbzNCd0N3c1pab2JCNnZUVWlwClllWUxsUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K", "encoding": "base64", "item": "/etc/kubernetes/ssl/front-proxy-ca.crt", "source": "/etc/kubernetes/ssl/front-proxy-ca.crt"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/front-proxy-ca.key) => {"changed": false, "content": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMkNTY2kwckw0K0kwR2tEc1NmTHNRK3ZrYTFBU28rZnF3VENrRTlDYzBYTUI0aDVXClBqR1ZMamJnR3RaK2E1VGZZZWxBY3lFa2tBeGplTFhYZENCem1RZlYrT05wMGNRWGhRbWJXYWlmbHNkWnlaZGEKSE1EWDcza0N5NGdMdmVHa1YrNGxMaVJYS09YQlB5d3RoYS8rQk40SHpKOFlnSTM3dlpoOGZXSnFOVW8xcjlOYgpCQjFNUzNwRFVGWXN0UXRtemdJQmF6VE9wVWVYYVplZjdQUVlZakZ0UUtmcFFCakFITGJ5VE5pYmJJaWVISU1FCllPOFpLUjc5Vk1YbXBpSmp4VTBxS29XalN4aHVqTDhKUE5MUW1TZDBOcTIwc2FUbytKaXk4RXN5VWRvNmZzVjgKTllxVENVc0RFL0ZlSHNuZjZqWit3Ri84NjRxMktST2k2a0tmRFFJREFRQUJBb0lCQVFDNjFqTUg2VmtFSFFZaQo1NW9aZGthcms5NjRzTmZjSFY1OUx4bTJFeTlya2ptL2g2L1BSVGNLWXQ4bjgrQUdDUU5yOUtBRXBWS2d2a1RDCkZKWXd5TmlFSVJUaWQxcUN2RG9FZzBCcHFXeUNmc0pyazB5TzdGZjhwcU0yNHR3YmdGQjZ2ZDRmMjhRSUUwc1AKMjVWaUtiYXY2R25maEdzK3ZQMHVjQUMwdGZ6UElFZEhPc2dBT3VXaU11V3dJZUltUlZNQi9nTVMwSHNUQnQ0awozdHdITnJFRDB0MzdsWDFVa09RcjM1Vm9pd1JoTW01L1pYZHpmZWVXUWlSWUVVNFVzL2lSTDgvYnN5MTlUTHZpCkxETHJHbGJ5aDNPRTNDQ25CVlY1SXZLSTdNVGY3eHFHcGVPcjlIS0lJU0pNUzdlVm00Y004T1hYMlFrZ21CMUYKUURPSk1KZlZBb0dCQU95emdoUDBucG4zdEVqY2trbnJRQnV6MHhVMDhOTlg3YzJ3Z1NPME9mRS83LzZtRWl0WQpxMTRkUCsyY3huNXhhM2MzcDd1UzdDY1J4ZXdQTWlDMkVFZ1pGU2lNYjFkUFZ0K0lPbVpHb2crbk9USzVUWnMrCkRYdnUwUmUzY2pmb2Z2WkhENlFWWmdVY0QxZlR0TTFLczIycHZ5NnM2Q1VXSTJpeVc4cnBRSW9iQW9HQkFPbkUKQWR0Z0MzRllWdTFOVlhxYjRtN3gyaUFVcGFCZ0NXRENYcUFYbmxRNGxZQ2gyRHUxdCtvRnM3ekplNnpMT0F5KwpiK1M5RE94TUYvejFXYS9HN2pNaExmNERmdGhiTkFWL3YzL1NSZWt6TU5kdk1sb3hiaThxK1Q5MlFPUWZCVkNpCi9LOS9NbjQxRmNXRWI0b1lCalloVzdRTWVsc1FaR0VsZXRTaGpnMzNBb0dCQUo4SjFjS1d2K0h2dnlDZG8yVXIKUGIzZlMxcWFZWjEvSFBieE96UEVLcEpnUlY2eU1zOFJHc04zbjdhRmVoRUhJQS9RUTFFUzNMMDdnZUtrS3lnegpiQ2tsUVVRblo4QWdQTnlnYWF6Q2xLMHp6SWk2WE55TUN2OVViUVVrYXdnSm5SVFlsamZIY083SjliMHJML1luCjFQcy83SWJ1QW1TNHhUM1phVGVqRll3MUFvR0JBTGRnTE55OElQM1BBSkd5Z29WbDEyQ1VsRGxxT09ydnF5dWUKRGNDa0JtMm0zWkJFWlcyaGhSNHRUdXVmV2tjWU8yV3oxZTZuWm9YT3cxcUoxTXNRMERhSHBwNkdlM0NaU3R1dApkTGwrWjUwaHJRU3lrOXN3djNCODAzMDI5SHgrNFJwNllLSUNzOGRST1R6eVFOVWhOMjRyQ05iYW12am9pUFcwCkF3RGRvcVBOQW9HQUlkRlNEbTYvSnU0SFRVYmRxdHI3N29ScW13Z1daNW5XTndqQi9CMm8wc2M2RnJKQ2dwZkIKWEdUT0tzNlkwQmUzaitEeE8xTVlUYU1rbzFSNVFjMmNkNXZlOHJmcDRENFlhL0xFMSt2MlJ3ZEl6MDZ6dURyeApKMWRVenMxMkNXQ1BWVlpVaFplSEV6ZzRWSHJib2dMc0lQR2orUnJwc1pOZExCS2dnYW9PK3JrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=", "encoding": "base64", "item": "/etc/kubernetes/ssl/front-proxy-ca.key", "source": "/etc/kubernetes/ssl/front-proxy-ca.key"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/front-proxy-client.crt) => {"changed": false, "content": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzekNDQWNlZ0F3SUJBZ0lJUzVWRFN3Sk5JNlV3RFFZSktvWklodmNOQVFFTEJRQXdHVEVYTUJVR0ExVUUKQXhNT1puSnZiblF0Y0hKdmVIa3RZMkV3SGhjTk1qQXhNREUyTURJd05ESXpXaGNOTWpFeE1ERTJNREl3TkRJegpXakFkTVJzd0dRWURWUVFERXhKbWNtOXVkQzF3Y205NGVTMWpiR2xsYm5Rd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVXlGL0FuNXQ2UHVUcXdDNXhNZmc1cDlTd2tlZXVKRVFoTDB6cm5yaVoKMXNVdTZDT0dNZkxLbFNON1JwY2lYNG9RQjdFNUZkdGVlTnV2V3NJQXFxZlBhWEJSanMxK1hiMTZrbm9FTnQ3VgowMmxvdU1zbU9aWXFjVVFvKzlJcDVNK2RsV29TVUU0WS8yeGpIUGZ1eEd3TEp5emNJWERPSi9PVjVzcGtNZWVECnRTeXlydE96TVlSWUNEKzZkOVZodnB3UWJUK083SndBdzlxRDI2MjY3bmg5ditGRVBudnkrSVd3MUw4NzBpRGMKMVBjSW9Ga0NhcTBPdy9xdms1emYvek83UlRyUnNFaktNV25FN0FVMzB5TkN3elBma3ZhSVJEQ3dId3l5KzI1TgoyMjZJZU85cnRKUDA5VFZYd2RpVms5eTVoNkZTMXJ5WW1qVzhycmZVS3NHRkFnTUJBQUdqSnpBbE1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFOQmdrcWhraUc5dzBCQVFzRkFBT0MKQVFFQXBZSExBdVZIRXd1LzdRYTJHb1FIZWVmaFlIY1pwRDFpajNkSXY4Z25iMElkVmtLRTJCQ2tMdkNhNThSdQpUZDA0Wk8ySFVRTlUvS08yM0lEWjJqWE1TWEtJcTl0dFlzNnU5YVRiMHBzTm1TZzJvL2JZNTkrdUZCSHNDS1dFCkxCQ1VXRnhxRE9KRW8vRUs3aTRwM000d3FSMzZOV3JyclFiaXFNdEVDeVh6K1BvOXExWHVESXNMZ2xSOTBLVmcKcDh4MFVqM2lEb3FXcDB0Qk1odVo5K1BJZHl3MS9yNkxaNjBDZ1Y1MzlEYkh2aGRxVkVvVVkvV0duRXE0V2RkaQp2eEtrYVY5QnhGSzE2SHBjNC9rS1l3cDJUNTZEalI1a2ZMYUU4Y0lON3h3SCtEWStiMVRuMjRqT1ArQjlpYjgrCkpPVmd5WGVVQTltN0FFcHp6V2MzUmYzK25BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=", "encoding": "base64", "item": "/etc/kubernetes/ssl/front-proxy-client.crt", "source": "/etc/kubernetes/ssl/front-proxy-client.crt"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/front-proxy-client.key) => {"changed": false, "content": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMU1oZndKK2JlajdrNnNBdWNUSDRPYWZVc0pIbnJpUkVJUzlNNjU2NG1kYkZMdWdqCmhqSHl5cFVqZTBhWElsK0tFQWV4T1JYYlhuamJyMXJDQUtxbnoybHdVWTdOZmwyOWVwSjZCRGJlMWROcGFMakwKSmptV0tuRkVLUHZTS2VUUG5aVnFFbEJPR1A5c1l4ejM3c1JzQ3ljczNDRnd6aWZ6bGViS1pESG5nN1Vzc3E3VApzekdFV0FnL3VuZlZZYjZjRUcwL2p1eWNBTVBhZzl1dHV1NTRmYi9oUkQ1Nzh2aUZzTlMvTzlJZzNOVDNDS0JaCkFtcXREc1A2cjVPYzMvOHp1MFU2MGJCSXlqRnB4T3dGTjlNalFzTXozNUwyaUVRd3NCOE1zdnR1VGR0dWlIanYKYTdTVDlQVTFWOEhZbFpQY3VZZWhVdGE4bUpvMXZLNjMxQ3JCaFFJREFRQUJBb0lCQUZFRUxma1FqRWxDVXpUUwprWnhGMDJaWWNaSDlLOEpSU3FONytBU3FmVTBOeWl3dTlQK3VXdXdwVnNZa1BYMDM5VUJmUFdvbjJVdWlKcnNnCmlrZG9zdFkxSmkvWGVJU0p1cEJGM3pGbGx2akJNeHhOYUFRWTN3VXY5U3pKbk42WW9UZzE0Sm95ZTFublB1U0oKN2hpNkx3MGNFR2VNVUFBZWxBOWFQV3RpMk94N1NFcThpM0l6QjV5RjQ3clhyN0U4RDZseUV3eEwrWGJVa3M2VwpFWWRNaTlaei9BWGJxbWFObXR1Skh6ZUZnZDVuVFVsakpJSFMwVFh3K2VpUndoSzVNMUdObTdNR3RESnYxM2IzCmI1Q24vZlgwQnBHQ0RMWndqT3RDUTNFWldyRUYySVphODk4SkxoQ3JmWGtrdmJ0MWVmaW02cDBHbjVRemZFMy8KRHRCRlRlMENnWUVBNHgza3BoOEcweUEvQnJ5dkQ5QTAvUzZ2a0QxK2FYTktzYzd6K1RCdGx6SU1aUFQ0bHR1OApPMGlLNFV4bTJzUklwa1o5NWRJRXkvdGlxUmFNVlJaeC9nYmNOS0N2d0Q0SEsrbWwzSHFDeHBQN2hrSVVIaFFYCjR3R0lnTlFsYUxVdWpBZWhOQmFxelBoZ2JUcjBkK2Q2N0twelpMQkQzSkNKd1NrOWRrODU1NnNDZ1lFQTc5ZlEKdTFyQU84dHhYQWVSUGpWUndvY1NjOGVXSVFyQ1loMngybUkreHkrU2JONzlBcUFBaEEySS9BOW1hc3RWdjk2ZQp4ZWo0TDhHMFBHQS9KL3FFTVFJdEtKMTFpY3cybllhL3NnbmlMbVMxUklZYnRUQUhObUtWM0xCOGxXTCtSQjVNCkh2MnpTbHU5bWhmVnBkM2N6YnJoMmN3MEYvZUpNUlhkY1N1YUM0OENnWUVBdWlzeDF6NU5vTmlvOFVQUG1IM0sKUWRONEZCdGtPTnBKMnpEU2FteFpHUHZzandFRG1OMnNFVWhvbHovQ2ZBY3pxaURVYUlQY2JMeTI1ZlhXdUpTNgpna2xyVGpSOWZHOGIvOUg1cEo1RC9yVWxFNnVzdys4aW1YRVRUTThaanhnZGZLbHdhYnMrN04rWVkxRlZQY2hnCnlnajZxQW1ZeHY4di9FZHEyMFVjS1JzQ2dZQlpUS0J4OFlNYmdFN3Z0ZjJWRE9NcEs0TnFTa2lTZXVBUENnRmIKVHpNU2xKclBJR05SbytNdFI2RFdRS0dnWjU3QXRwR2xIRzJ6MGtwYUpIZS9XZDM0SlZoTkEvdHNWL1dKeDA3KwphZ0dseG1kYllSZFY2ZEQxcGRVb2V5bVhzV2o4VWMrRHhuQUg0b3FBb2hreERaOFZsbHhhN0ZZRkNtd3hNM1BrCm5CaFo3d0tCZ0MyZEZDWlh6eHlaYkZmcEJnRFQ1S1hDb3k5UFZ1K3ZNdi90eHIxVzg3dnl4YnhsdklkakVxa2oKWHc3MGR2bnlOQnhQMjF5QUhEZWZGU0h0QkFlSk9kRnRQVllpUHRCV2dlWHBnVzdLZDZOUTBqak1yZHFBdHAyWApsdVRFNDRQdHJMZXlVREE5WFJOcXIvVTFKTzRMRzZmVEUrVFZCUmFXZ3hObzFwVUhiTllyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/front-proxy-client.key", "source": "/etc/kubernetes/ssl/front-proxy-client.key"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/sa.key) => {"changed": false, "content": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1ViZVE2Und0dWJhd1duQ09TN3BnVlpsMU5CM2dsMFdmbEtiVlhDQzk5WWE3NDJpCldvQTVTdzF5bWJ4NEFvWldFUnA1dGRZV2NzZUtGWk4vb2VaV1pMWUpzc05iamp5ZXJVNFF4SDBOZnREMFowQXEKa3hvVWxBK2pnZnptVW1xUld1dVVRTTlPTkp6SndvSFRWQVgrcXlEeitrVlVPYU9JWnFPUmFvMjViNWYvS25mUQo2WXdrdExicVRjUmNCRFBuQTNnVzBhTnAzMm90WTlQeXRnUzlvWWJXQ0ErcWpEZVErTXNhelFTMUdmSVVDWWxCCk9Eam05aDk1QjQyYmdaYks0bHNnNGEzdUY4RTRneFZkTTkwQWt5K2xJT3pVZnpScEV0Y01SUnp5K3hwN3lyVUoKTGlDTGl0SjFpUnZGQmM2b1k3OGNkY3hiblNwQUdNNUpEK09ia1FJREFRQUJBb0lCQVFDdFVjWTRoK3NUUnowVQo0QnRkNFBtMjFBdVhONEhBV05hSEJxaUxyZ2E5Mi94VnZUbkFGYUR1T2VXVFhPcFFQWnFqK2lpSW1SazFldFVNCkp6c2Z4SjB1dGJOaHJSSTBUQnd2QUNYd2xQcSt3L2hQZ2pLZHcxL2ZLak1JQVlRRmk5ODA3eUh4QXoxSXZ3bWIKTzJhcnZYaXhRdlNGK1laUkhBdGRuZ21zRFlnQkN3K0M5UlRhaDJoa3JBV0dUeVJMbGlZaFFmbWFuMUJDR0I0OApheGtNb1JtTjFzRHZTTU9haFZQOGh4NytlOVR2eDdIaTdXOEFUSW1EbXRXTHZYSW5RSFNSQVR5bXR2RkVDWmpaClUrSjAyNG1EWFdnK3pCN2h6VlZlYmZwaHRhbHJ0ZGl5d09JMllDM3VIOVM3bHJTWjNEaTVjT1FhTk1OQmZFenIKUkduT1grTUpBb0dCQU5aRUw0b2JiMTRva2VtU3FwSll4emFoWk1EUm5pb3Q1Nm56WmlPM3VyUksyK291NTJCTwppUmlKckhCOUdhek9VZytxemNJNkNCVm81MTZNTUdDRUdLTFVyeTU3TmlvQVJLRExQMnQraVJXK0w2QllvSjN2CkhhbW1pL1hSSWtMZC9vS1VlYjdpbG5YOU15MWpMVVQrSlB4a2l2bFNObmJHK3ZGKzBwd1NmalNyQW9HQkFOUE8KVExoZkVsNHdFc1p2MjJqVG9kNWZUM0JpR0c1Y24xbk1FOS9yT1AvYmxiSFo1dGVWbWFMeUMwSDBWU3NDUW1ZTgord0hGVW9JampsRzBLSloxS1BXdWl0M1RBZ25HZHdVQkNVRHpJTnprZlpBbUFQOVV2WmtmenZDa1d1cUpZeExhCkQxSTVrUTBJcWpXeko1UE9CN1o1WUQxMjFHNkdRMUtBc2V5Nm5saXpBb0dCQUpMTHZGWStYWnFBNlJiQmFTTkMKdDVseUVYa1pJK2Q1ODlHMzlDNWNYZ25QajhOdHh3OXdQdlVVdlpPRDRlZEdvMm9nZHordVNvT0FqNk56SUdHLwpuckZRVFlUbTNVRUJWZ05qdkZ1RklaNUg0cEZVcHhZTkVLRitmVDA0dnVSWSsxbXpKNFhqNzNsK3MyVlJJVjYzClQ5ZXJlcHM5L0JwOFVNakxQcmUyNDhocEFvR0FCaU1sTC9aNVJzZG4wOTRyNG1hM2V3VVIvVFNxZHBBeWdkeWEKK3RNTERNYmxHSWt5Mmk1WWpGTXRKbFVaSHF6ckZaLzBGUUlOdVAya3d4TlFWY1BCVXhVaXF2alJSMDA3NTZZMwpDVzNDRndSNzZ2QmUrUWNRazE1TGxjZDladXhpTllxaUJRVHNBZyt0TnU4aEIzUmgzdFMzaURCb1NXZVVqZEJ5CjEyUTA4R2NDZ1lCMGpzdFJhTUZib1JEVGlpbjY0QzRBclJqUUZtVlVsQVhlV2NHLzJkb0d0RTZmMEIwZ2thZTgKY0J6VGJ3SDgwUjlyM0MyTzl2dFluOHBSR3Y0RERWWWU2WitwWCt3WEoxVjJHbC95ZExIWFJGL0ZCaXVDWkdGUgpWdmpDa2lyaVJWZHljeWlwbnR6aVdIZTl6QjZTQkd5Q0c0UFdUU2NOZDhWMnBGQjNOUDNrdHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=", "encoding": "base64", "item": "/etc/kubernetes/ssl/sa.key", "source": "/etc/kubernetes/ssl/sa.key"}
ok: [test1 -> 10.1.7.152] => (item=/etc/kubernetes/ssl/sa.pub) => {"changed": false, "content": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzVWJlUTZSd3R1YmF3V25DT1M3cApnVlpsMU5CM2dsMFdmbEtiVlhDQzk5WWE3NDJpV29BNVN3MXltYng0QW9aV0VScDV0ZFlXY3NlS0ZaTi9vZVpXClpMWUpzc05iamp5ZXJVNFF4SDBOZnREMFowQXFreG9VbEEramdmem1VbXFSV3V1VVFNOU9OSnpKd29IVFZBWCsKcXlEeitrVlVPYU9JWnFPUmFvMjViNWYvS25mUTZZd2t0TGJxVGNSY0JEUG5BM2dXMGFOcDMyb3RZOVB5dGdTOQpvWWJXQ0ErcWpEZVErTXNhelFTMUdmSVVDWWxCT0RqbTloOTVCNDJiZ1piSzRsc2c0YTN1RjhFNGd4VmRNOTBBCmt5K2xJT3pVZnpScEV0Y01SUnp5K3hwN3lyVUpMaUNMaXRKMWlSdkZCYzZvWTc4Y2RjeGJuU3BBR001SkQrT2IKa1FJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==", "encoding": "base64", "item": "/etc/kubernetes/ssl/sa.pub", "source": "/etc/kubernetes/ssl/sa.pub"}

TASK [kubernetes/master : kubeadm | write out kubeadm certs] ***********************************************************
Friday 16 October 2020  02:04:37 +0000 (0:00:01.632)       0:06:25.505 ********

TASK [kubernetes/master : kubeadm | Init other uninitialized masters] **************************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.182)       0:06:25.687 ********

TASK [kubernetes/master : kubeadm | upgrade kubernetes cluster] ********************************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.042)       0:06:25.729 ********

TASK [kubernetes/master : kubeadm | Check serviceaccount key again] ****************************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.037)       0:06:25.767 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602813881.5737395, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "da60da77460f1f7abf7799e01c349c3030f04fcb", "ctime": 1602813864.016857, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 102681619, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1602813864.016857, "nlink": 1, "path": "/etc/kubernetes/ssl/sa.key", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1679, "uid": 0, "version": "18446744071778928506", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [kubernetes/master : kubeadm | Set secret_changed if service account key was updated] *****************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.194)       0:06:25.961 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002010", "end": "2020-10-16 02:04:46.079261", "rc": 0, "start": "2020-10-16 02:04:46.077251", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [kubernetes/master : kubeadm | Retrieve files to purge] ***********************************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.228)       0:06:26.190 ********

TASK [kubernetes/master : kubeadm | Purge old certs] *******************************************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.040)       0:06:26.230 ********

TASK [kubernetes/master : kubeadm | Purge old kubeconfig] **************************************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.040)       0:06:26.270 ********

TASK [kubernetes/master : kubeadm | Remove taint for master with node role] ********************************************
Friday 16 October 2020  02:04:38 +0000 (0:00:00.061)       0:06:26.332 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "taint", "node", "test1", "node-role.kubernetes.io/master:NoSchedule-"], "delta": "0:00:00.139298", "end": "2020-10-16 02:04:46.588806", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2020-10-16 02:04:46.449508", "stderr": "error: taint \"node-role.kubernetes.io/master:NoSchedule\" not found", "stderr_lines": ["error: taint \"node-role.kubernetes.io/master:NoSchedule\" not found"], "stdout": "", "stdout_lines": []}

TASK [kubernetes/master : Include kubeadm etcd extra tasks] ************************************************************
Friday 16 October 2020  02:04:39 +0000 (0:00:00.333)       0:06:26.666 ********

TASK [kubernetes/master : Include kubeadm secondary server apiserver fixes] ********************************************
Friday 16 October 2020  02:04:39 +0000 (0:00:00.035)       0:06:26.702 ********
included: /home/vagrant/kubespray/roles/kubernetes/master/tasks/kubeadm-fix-apiserver.yml for test1

TASK [kubernetes/master : Test if correct apiserver is set in all kubeconfigs] *****************************************
Friday 16 October 2020  02:04:39 +0000 (0:00:00.081)       0:06:26.783 ********
ok: [test1] => {"changed": false, "cmd": "grep -Fq \"https://127.0.0.1:6443\" /etc/kubernetes/admin.conf && grep -Fq \"https://127.0.0.1:6443\" /etc/kubernetes/controller-manager.conf && grep -Fq \"https://127.0.0.1:6443\" /etc/kubernetes/kubelet.conf && grep -Fq \"https://127.0.0.1:6443\" /etc/kubernetes/scheduler.conf", "delta": "0:00:00.004456", "end": "2020-10-16 02:04:46.979458", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2020-10-16 02:04:46.975002", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [kubernetes/master : Create temporary directory] ******************************************************************
Friday 16 October 2020  02:04:39 +0000 (0:00:00.273)       0:06:27.056 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.0spyQu", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [kubernetes/master : Generate new kubeconfigs with correct apiserver] *********************************************
Friday 16 October 2020  02:04:39 +0000 (0:00:00.342)       0:06:27.399 ********
changed: [test1] => {"changed": true, "cmd": ["/usr/local/bin/kubeadm", "init", "phase", "kubeconfig", "all", "--config", "/etc/kubernetes/kubeadm-config.yaml", "--kubeconfig-dir", "/tmp/ansible.0spyQu"], "delta": "0:00:01.490291", "end": "2020-10-16 02:04:49.010630", "rc": 0, "start": "2020-10-16 02:04:47.520339", "stderr": "W1016 02:04:47.582657   18224 defaults.go:199] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "stderr_lines": ["W1016 02:04:47.582657   18224 defaults.go:199] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]"], "stdout": "[kubeconfig] Using kubeconfig folder \"/tmp/ansible.0spyQu\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file", "stdout_lines": ["[kubeconfig] Using kubeconfig folder \"/tmp/ansible.0spyQu\"", "[kubeconfig] Writing \"admin.conf\" kubeconfig file", "[kubeconfig] Writing \"kubelet.conf\" kubeconfig file", "[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file", "[kubeconfig] Writing \"scheduler.conf\" kubeconfig file"]}

TASK [kubernetes/master : Copy new kubeconfigs to kube config dir] *****************************************************
Friday 16 October 2020  02:04:41 +0000 (0:00:01.691)       0:06:29.090 ********
changed: [test1] => (item=admin.conf) => {"changed": true, "checksum": "f83c98a12c196a30dc7644f2a5810f037c91304e", "dest": "/etc/kubernetes/admin.conf", "gid": 0, "group": "root", "item": "admin.conf", "md5sum": "cd290f5463dc827d6432967e2ed33766", "mode": "0640", "owner": "root", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 5461, "src": "/tmp/ansible.0spyQu/admin.conf", "state": "file", "uid": 0}
changed: [test1] => (item=controller-manager.conf) => {"changed": true, "checksum": "a53d9da1a767ee69fc9cc8a4bff01460f3e6496a", "dest": "/etc/kubernetes/controller-manager.conf", "gid": 0, "group": "root", "item": "controller-manager.conf", "md5sum": "9b0f225f931f73d73e54efbb3412945f", "mode": "0640", "owner": "root", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 5497, "src": "/tmp/ansible.0spyQu/controller-manager.conf", "state": "file", "uid": 0}
changed: [test1] => (item=kubelet.conf) => {"changed": true, "checksum": "44cf9a46104116e7ebf571ec06ac1bc70d7895e0", "dest": "/etc/kubernetes/kubelet.conf", "gid": 0, "group": "root", "item": "kubelet.conf", "md5sum": "2a583ac6a62e3cb1cd6e688233065f54", "mode": "0640", "owner": "root", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 5465, "src": "/tmp/ansible.0spyQu/kubelet.conf", "state": "file", "uid": 0}
changed: [test1] => (item=scheduler.conf) => {"changed": true, "checksum": "607ba09150c74191f7b10d0d444b6de80e94199c", "dest": "/etc/kubernetes/scheduler.conf", "gid": 0, "group": "root", "item": "scheduler.conf", "md5sum": "7d55c5ef8d70c2a46bdc5ea6ba1e83ab", "mode": "0640", "owner": "root", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 5445, "src": "/tmp/ansible.0spyQu/scheduler.conf", "state": "file", "uid": 0}

TASK [kubernetes/master : Cleanup temporary directory] *****************************************************************
Friday 16 October 2020  02:04:42 +0000 (0:00:00.920)       0:06:30.010 ********
changed: [test1] => {"changed": true, "path": "/tmp/ansible.0spyQu", "state": "absent"}

TASK [kubernetes/client : Set external kube-apiserver endpoint] ********************************************************
Friday 16 October 2020  02:04:42 +0000 (0:00:00.190)       0:06:30.200 ********
ok: [test1] => {"ansible_facts": {"external_apiserver_address": "10.0.2.15", "external_apiserver_port": "6443"}, "changed": false}

TASK [kubernetes/client : Create kube config dir for current/ansible become user] **************************************
Friday 16 October 2020  02:04:42 +0000 (0:00:00.104)       0:06:30.305 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.kube", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 37, "state": "directory", "uid": 0}

TASK [kubernetes/client : Copy admin kubeconfig to current/ansible become user home] ***********************************
Friday 16 October 2020  02:04:42 +0000 (0:00:00.191)       0:06:30.496 ********
changed: [test1] => {"changed": true, "checksum": "f83c98a12c196a30dc7644f2a5810f037c91304e", "dest": "/root/.kube/config", "gid": 0, "group": "root", "md5sum": "cd290f5463dc827d6432967e2ed33766", "mode": "0600", "owner": "root", "secontext": "system_u:object_r:admin_home_t:s0", "size": 5461, "src": "/etc/kubernetes/admin.conf", "state": "file", "uid": 0}

TASK [kubernetes/client : Create kube artifacts dir] *******************************************************************
Friday 16 October 2020  02:04:43 +0000 (0:00:00.232)       0:06:30.728 ********

TASK [kubernetes/client : Wait for k8s apiserver] **********************************************************************
Friday 16 October 2020  02:04:43 +0000 (0:00:00.038)       0:06:30.766 ********
ok: [test1] => {"changed": false, "elapsed": 0, "path": null, "port": 6443, "search_regex": null, "state": "started"}

TASK [kubernetes/client : Generate admin kubeconfig with external api endpoint] ****************************************
Friday 16 October 2020  02:04:43 +0000 (0:00:00.398)       0:06:31.165 ********
 [WARNING]: Consider using the file module with state=directory rather than running 'mkdir'.  If you need to use
command because file is insufficient you can add 'warn: false' to this command task or set 'command_warnings=False' in
ansible.cfg to get rid of this message.

changed: [test1] => {"changed": true, "cmd": "mkdir -p /etc/kubernetes/external_kubeconfig && /usr/local/bin/kubeadm init phase kubeconfig admin --kubeconfig-dir /etc/kubernetes/external_kubeconfig --cert-dir /etc/kubernetes/ssl --apiserver-advertise-address 10.0.2.15 --apiserver-bind-port 6443 >/dev/null && cat /etc/kubernetes/external_kubeconfig/admin.conf && rm -rf /etc/kubernetes/external_kubeconfig", "delta": "0:00:01.125344", "end": "2020-10-16 02:04:52.414468", "rc": 0, "start": "2020-10-16 02:04:51.289124", "stderr": "I1016 02:04:51.830857   18375 version.go:251] remote version is much newer: v1.19.3; falling back to: stable-1.16", "stderr_lines": ["I1016 02:04:51.830857   18375 version.go:251] remote version is much newer: v1.19.3; falling back to: stable-1.16"], "stdout": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01UQXhOakF5TURReU1sb1hEVE13TVRBeE5EQXlNRFF5TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHRECnp4NEJYU1A2dHVCa0VOcGhqajBTUExYT0ljbzBEcnJKY29mMmozdW1lQ2tEU0JqeUNEbUt1d1c3ZFRqTWVWYTgKK2lYZmw3MGhrZVBPemZ2MkdLSm0vZnlRRGZsUkh5Q00zMUtPUmdaY0U2VFdEZE9jMkkxVno0QnJvME1qaWRndAo2ODlKL2lseUxTRDA1cW1KcE1ySTF4TUQ1Z2lLOVNrWHlER3cvaldYQTB5SkozWHZzd01hc0xJOHdXdVZhSS9VCjhlUG8rNUY4aXR3QXc1UWhnZnEwSEI4MlZScExqMWNBdGRuc1llY3A5WU81QXlvL2pjT0JhM0dtbUcyMHlCTC8KcnpBd1Roa2F4Q1RPenV3NXZrN0svdU1LeGhEdjk0cmU5Wkh6b2V3V2Y5ZytncnNaSW9GdDJJTEFQQUYrSHRCSwptWTdWbVp6QnAwRVdaY3NsRGgwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDMFZaVUJ1RzAwN0t4VkRMMHB4L0dDWTJ3YUEKZlRrc3Vrc0JkWmN4SDdWU1I5VFdlWkEweXVPRUM1Rlc3MnlnYmEzQkxaOVVGanFZd1NOUXc0SU5hN1UyQmdVNApjRHd4OWxSUURvMEk1b281TGQrOTltRW5JZzloWDlJV3BZRzJNT3hTamtVeS9pY1BtemJ3bE51dGczcnYzTE1IClJBNnBCVEZZNWVMMnJnQXJ3czl3dnR2bEx6WkJEU214eHovOEpvWkc5RVVYdDdha0FITUNieTBsWFRmL2E3M0QKZERmMm9BZ3N5cnpSK1BNYldsTkEyc2dlVlgxejVWQWd0OEIvcVVEYThsRTZ2YlJpWDM3N01ZalphNFp3UkpjcgpqU1cvZ3BWZTZRU1VnczcrOXFSTWNLcHBnTkhIWjdJTEovZVpYRm1KSGwvZFNuTTllNUpJazNpTERRbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n    server: https://10.0.2.15:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4akNDQWRxZ0F3SUJBZ0lJVVlCVGVUS2hOZDh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TURFd01UWXdNakEwTWpKYUZ3MHlNVEV3TVRZd01qQTBOVEphTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhJMDd1dDh4aGp6YXgxT3YKUHlLQlQwNTFnU1NSdElJdC9jeHVDQ0dFdE5EemE4U3QrUVlSVGgrVTkrczBaRDFlNFl5WlU3Zkowb2JzWXQzdgpHN1ZSaVB3M0QwTkdONCs3cjNiZm5rVHhyUHBLbHVPdU9YU1MvNFhIUlBUazE2bE4zV3RMTDVVVXh6cjdkeWl2CnVaTzdrZEYxeURtR2VZUk4zb2hZNlA3S000emhaVmk5SHNjSS84dGxYN0wvUW5HQ05OaWV2Qk9IbGRpN09rTlkKMkdUYTluMTRDcVl4dE1nYlZjdWkwN2c0d0g5cnBVWTBrZmRWRWx2VzBBV1ROY2U3bVZKVktRd1hmUFpqeW1tRQp6QTFNQjdidmFvMWZFREZ1QzFxOEZwamVZUStoUnJiaVVxRTdPbFRIR0pYdjJiQ1E3T3RDZkRpTnZoL1hwcWg2CnQwbGs0d0lEQVFBQm95Y3dKVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDSGZQVVQyYVlydGRVWmMzUGtvM1YxcEdZenMzY2oxZXhIQwpNZ29qcmZwaFMvb01kL280YlJ4bndTRmlXQlNqU3psRkxTUTRSdVdvaFpkaWJ0cng3NUZ0eXBGVVh2dm90NlNKClV6NVovVFY4UVVjWUsrbUtQM3VIVk1jRFRiWHF5UDAraVlaUlRaZnFFdlVLVG9Zb0I1YnBDdngwMGQwRmlnelAKanhTVXZMTlJGZHFuUTQxdDhIb1cvQk42M25MWUdsQ1ZDanliZ0VmZUp3dXpQYnJGcVVrUGhjbGhud3VaRlVBcApWN2FONC92OXlodFdJVStuZ2t5K2VjWlR4bTNlSFhkYW5JdWwxajNYbHZJVDRPWXJZOEFQSkk1R2l4RUVWcEFKCi9TR3M3K0k4dG44dnVYb0ttWWt1cXBxbnB1YjhHRnhoWjRPQnZra01FWW12U01sMkUybz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEkwN3V0OHhoanpheDFPdlB5S0JUMDUxZ1NTUnRJSXQvY3h1Q0NHRXRORHphOFN0CitRWVJUaCtVOStzMFpEMWU0WXlaVTdmSjBvYnNZdDN2RzdWUmlQdzNEME5HTjQrN3IzYmZua1R4clBwS2x1T3UKT1hTUy80WEhSUFRrMTZsTjNXdExMNVVVeHpyN2R5aXZ1Wk83a2RGMXlEbUdlWVJOM29oWTZQN0tNNHpoWlZpOQpIc2NJLzh0bFg3TC9RbkdDTk5pZXZCT0hsZGk3T2tOWTJHVGE5bjE0Q3FZeHRNZ2JWY3VpMDdnNHdIOXJwVVkwCmtmZFZFbHZXMEFXVE5jZTdtVkpWS1F3WGZQWmp5bW1FekExTUI3YnZhbzFmRURGdUMxcThGcGplWVEraFJyYmkKVXFFN09sVEhHSlh2MmJDUTdPdENmRGlOdmgvWHBxaDZ0MGxrNHdJREFRQUJBb0lCQUhaV21sbSt1N0NZdnhnMwp1RkdJMHRZTzVReG1HaHZXTFI2YmtMdndnbGZqWGt2S1ZQeVR2S09PdkVBd0twRVhxaUtlWmtwVFkzNFBvZzg4CmxCUFlyVWlPb2cvY2IxQlFoNjN6SWx2R0lzUUV4aGZtNlNUS25SNmZTd1NuZFlpcTlLaVZTdVZSR3Z1QTlab2UKc3Y1R2hpNGJNSkRtb2FKVUdCWWRmWHA2dlA4ZmlTaER4N1NIa0pzcnVOdnBMbXhMZ3ZqNm5KS0dMa25uYlNtbgpNeTBjbVMrakpBc2t4MW5vbi9DWFdRcTFsQmRDQ1ZjNENMVzV2YWROQnV0bGZ2Vm1kelpKU0lhWS9CaTRQUjl2CjNVdFoyUlBsS0RiVURId1VyN2N2Vm1McTFMZk1mTlFHZ05FeDc3cGNhM01LbllybW5CazErQVczYjlMd0ZhdlAKUTVKelZRRUNnWUVBL0p3VURSRHJiYis4VGVBUEZHa1U2L2xUQndzb2ZRYm9OOU56STBlSjZoTDdBdnNqY0xYKwpyMW0zWGVNMlduaTZyUkUxU3NnKytnK01zL3V1MFFaejcxTk9WaVduRjl6SnhobWpvNmt4UFNFZDhvRHNXQ3VyCjdqUzZRSkREYW1jZXlEWkFMUG11Q1MxWGxYOTV3UldySW4ya1owTVhYcXMzdWN4Qlo1YVBGU01DZ1lFQXh6Q00Kdmg0dnFBMTJ6cTQveXpSVjZMZDA1VVFqRFhiaVdZamNDYTM1ZFVyZmRRSEFST0NHLytOZ3VhZ1pJcDVhK1lHaworeFlYeUtNT1hhVm5GRzdMdXNCU2p6b3gwVUNEcS9xZi9Ed2FaMzBHV1BOQlg2VjloVU5iZ1gxeGlxUVpFYUswCm42QzloWUpoWGtwU0NxR1ZGOXgwZFZiTHZiYnltTjFYa3BkWXpVRUNnWUFOTGF0U0h5N1pFK2FqL1d0citpdHcKUUJxWHhIcEJRNG43MTVrckh3RlA1OXVXaFRtTkdNR0hybHVGbDJQdmhscmV5b1lJTjdncFhZUk9vM08wVGV6ZwpjRzBteTJJVE9aNkJLamRDUTRKaEdRZ3g3WTNtNzZoUmpnaWxjNmZ1TmlFQit1cVFMaHBwT2lkV2trYnN6cytWCnhnNDhvT0JvUFBCMFRmYWZpOWc5RndLQmdRQ3k4RUJmUWtyWmswN1ptTnVpTnArK2NhQkhuWkJIdGpiYzYvK1AKaW9TQkJBUDkzdGJVaVVkOWRNd2R2STduOUk0UmVvKzFLRUd4Y2htanNzVUpMQWRFK3lTdm1qM0tsMFF5S1BHego3R0pqK1lMTVFhckd1Nm9wSHp1QzlpZ2J2aEx2THRWSVdXUW9IZHBPbEVGalg0akthTGNOK2kwSmZ1SXN4UnE0Cmk5R3dnUUtCZ0dZZDUvNCt4Y2MvaDNnTVdVQ0djL1IvZFkva3dnMFQ3dnBCdDFrTlhqMUg4WUdBYTZJK3lMVlYKM1RKcVdGZ1N1Wm1haklCS2hCWDJqS1ZtQlo5U1BwUEY3NG15MDh5dmwzWjJnUDh3RFpYZEpOS0l3dTRPNUZDSwpleHNHWWRhSlVwV2Z6KzlEUldJWHJMd3Q0aDE1dWZ2cW56SGo1cTAzbkY1SWt0cHlFVDhwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==", "stdout_lines": ["apiVersion: v1", "clusters:", "- cluster:", "    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01UQXhOakF5TURReU1sb1hEVE13TVRBeE5EQXlNRFF5TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHRECnp4NEJYU1A2dHVCa0VOcGhqajBTUExYT0ljbzBEcnJKY29mMmozdW1lQ2tEU0JqeUNEbUt1d1c3ZFRqTWVWYTgKK2lYZmw3MGhrZVBPemZ2MkdLSm0vZnlRRGZsUkh5Q00zMUtPUmdaY0U2VFdEZE9jMkkxVno0QnJvME1qaWRndAo2ODlKL2lseUxTRDA1cW1KcE1ySTF4TUQ1Z2lLOVNrWHlER3cvaldYQTB5SkozWHZzd01hc0xJOHdXdVZhSS9VCjhlUG8rNUY4aXR3QXc1UWhnZnEwSEI4MlZScExqMWNBdGRuc1llY3A5WU81QXlvL2pjT0JhM0dtbUcyMHlCTC8KcnpBd1Roa2F4Q1RPenV3NXZrN0svdU1LeGhEdjk0cmU5Wkh6b2V3V2Y5ZytncnNaSW9GdDJJTEFQQUYrSHRCSwptWTdWbVp6QnAwRVdaY3NsRGgwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDMFZaVUJ1RzAwN0t4VkRMMHB4L0dDWTJ3YUEKZlRrc3Vrc0JkWmN4SDdWU1I5VFdlWkEweXVPRUM1Rlc3MnlnYmEzQkxaOVVGanFZd1NOUXc0SU5hN1UyQmdVNApjRHd4OWxSUURvMEk1b281TGQrOTltRW5JZzloWDlJV3BZRzJNT3hTamtVeS9pY1BtemJ3bE51dGczcnYzTE1IClJBNnBCVEZZNWVMMnJnQXJ3czl3dnR2bEx6WkJEU214eHovOEpvWkc5RVVYdDdha0FITUNieTBsWFRmL2E3M0QKZERmMm9BZ3N5cnpSK1BNYldsTkEyc2dlVlgxejVWQWd0OEIvcVVEYThsRTZ2YlJpWDM3N01ZalphNFp3UkpjcgpqU1cvZ3BWZTZRU1VnczcrOXFSTWNLcHBnTkhIWjdJTEovZVpYRm1KSGwvZFNuTTllNUpJazNpTERRbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=", "    server: https://10.0.2.15:6443", "  name: kubernetes", "contexts:", "- context:", "    cluster: kubernetes", "    user: kubernetes-admin", "  name: kubernetes-admin@kubernetes", "current-context: kubernetes-admin@kubernetes", "kind: Config", "preferences: {}", "users:", "- name: kubernetes-admin", "  user:", "    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4akNDQWRxZ0F3SUJBZ0lJVVlCVGVUS2hOZDh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TURFd01UWXdNakEwTWpKYUZ3MHlNVEV3TVRZd01qQTBOVEphTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhJMDd1dDh4aGp6YXgxT3YKUHlLQlQwNTFnU1NSdElJdC9jeHVDQ0dFdE5EemE4U3QrUVlSVGgrVTkrczBaRDFlNFl5WlU3Zkowb2JzWXQzdgpHN1ZSaVB3M0QwTkdONCs3cjNiZm5rVHhyUHBLbHVPdU9YU1MvNFhIUlBUazE2bE4zV3RMTDVVVXh6cjdkeWl2CnVaTzdrZEYxeURtR2VZUk4zb2hZNlA3S000emhaVmk5SHNjSS84dGxYN0wvUW5HQ05OaWV2Qk9IbGRpN09rTlkKMkdUYTluMTRDcVl4dE1nYlZjdWkwN2c0d0g5cnBVWTBrZmRWRWx2VzBBV1ROY2U3bVZKVktRd1hmUFpqeW1tRQp6QTFNQjdidmFvMWZFREZ1QzFxOEZwamVZUStoUnJiaVVxRTdPbFRIR0pYdjJiQ1E3T3RDZkRpTnZoL1hwcWg2CnQwbGs0d0lEQVFBQm95Y3dKVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDSGZQVVQyYVlydGRVWmMzUGtvM1YxcEdZenMzY2oxZXhIQwpNZ29qcmZwaFMvb01kL280YlJ4bndTRmlXQlNqU3psRkxTUTRSdVdvaFpkaWJ0cng3NUZ0eXBGVVh2dm90NlNKClV6NVovVFY4UVVjWUsrbUtQM3VIVk1jRFRiWHF5UDAraVlaUlRaZnFFdlVLVG9Zb0I1YnBDdngwMGQwRmlnelAKanhTVXZMTlJGZHFuUTQxdDhIb1cvQk42M25MWUdsQ1ZDanliZ0VmZUp3dXpQYnJGcVVrUGhjbGhud3VaRlVBcApWN2FONC92OXlodFdJVStuZ2t5K2VjWlR4bTNlSFhkYW5JdWwxajNYbHZJVDRPWXJZOEFQSkk1R2l4RUVWcEFKCi9TR3M3K0k4dG44dnVYb0ttWWt1cXBxbnB1YjhHRnhoWjRPQnZra01FWW12U01sMkUybz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=", "    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEkwN3V0OHhoanpheDFPdlB5S0JUMDUxZ1NTUnRJSXQvY3h1Q0NHRXRORHphOFN0CitRWVJUaCtVOStzMFpEMWU0WXlaVTdmSjBvYnNZdDN2RzdWUmlQdzNEME5HTjQrN3IzYmZua1R4clBwS2x1T3UKT1hTUy80WEhSUFRrMTZsTjNXdExMNVVVeHpyN2R5aXZ1Wk83a2RGMXlEbUdlWVJOM29oWTZQN0tNNHpoWlZpOQpIc2NJLzh0bFg3TC9RbkdDTk5pZXZCT0hsZGk3T2tOWTJHVGE5bjE0Q3FZeHRNZ2JWY3VpMDdnNHdIOXJwVVkwCmtmZFZFbHZXMEFXVE5jZTdtVkpWS1F3WGZQWmp5bW1FekExTUI3YnZhbzFmRURGdUMxcThGcGplWVEraFJyYmkKVXFFN09sVEhHSlh2MmJDUTdPdENmRGlOdmgvWHBxaDZ0MGxrNHdJREFRQUJBb0lCQUhaV21sbSt1N0NZdnhnMwp1RkdJMHRZTzVReG1HaHZXTFI2YmtMdndnbGZqWGt2S1ZQeVR2S09PdkVBd0twRVhxaUtlWmtwVFkzNFBvZzg4CmxCUFlyVWlPb2cvY2IxQlFoNjN6SWx2R0lzUUV4aGZtNlNUS25SNmZTd1NuZFlpcTlLaVZTdVZSR3Z1QTlab2UKc3Y1R2hpNGJNSkRtb2FKVUdCWWRmWHA2dlA4ZmlTaER4N1NIa0pzcnVOdnBMbXhMZ3ZqNm5KS0dMa25uYlNtbgpNeTBjbVMrakpBc2t4MW5vbi9DWFdRcTFsQmRDQ1ZjNENMVzV2YWROQnV0bGZ2Vm1kelpKU0lhWS9CaTRQUjl2CjNVdFoyUlBsS0RiVURId1VyN2N2Vm1McTFMZk1mTlFHZ05FeDc3cGNhM01LbllybW5CazErQVczYjlMd0ZhdlAKUTVKelZRRUNnWUVBL0p3VURSRHJiYis4VGVBUEZHa1U2L2xUQndzb2ZRYm9OOU56STBlSjZoTDdBdnNqY0xYKwpyMW0zWGVNMlduaTZyUkUxU3NnKytnK01zL3V1MFFaejcxTk9WaVduRjl6SnhobWpvNmt4UFNFZDhvRHNXQ3VyCjdqUzZRSkREYW1jZXlEWkFMUG11Q1MxWGxYOTV3UldySW4ya1owTVhYcXMzdWN4Qlo1YVBGU01DZ1lFQXh6Q00Kdmg0dnFBMTJ6cTQveXpSVjZMZDA1VVFqRFhiaVdZamNDYTM1ZFVyZmRRSEFST0NHLytOZ3VhZ1pJcDVhK1lHaworeFlYeUtNT1hhVm5GRzdMdXNCU2p6b3gwVUNEcS9xZi9Ed2FaMzBHV1BOQlg2VjloVU5iZ1gxeGlxUVpFYUswCm42QzloWUpoWGtwU0NxR1ZGOXgwZFZiTHZiYnltTjFYa3BkWXpVRUNnWUFOTGF0U0h5N1pFK2FqL1d0citpdHcKUUJxWHhIcEJRNG43MTVrckh3RlA1OXVXaFRtTkdNR0hybHVGbDJQdmhscmV5b1lJTjdncFhZUk9vM08wVGV6ZwpjRzBteTJJVE9aNkJLamRDUTRKaEdRZ3g3WTNtNzZoUmpnaWxjNmZ1TmlFQit1cVFMaHBwT2lkV2trYnN6cytWCnhnNDhvT0JvUFBCMFRmYWZpOWc5RndLQmdRQ3k4RUJmUWtyWmswN1ptTnVpTnArK2NhQkhuWkJIdGpiYzYvK1AKaW9TQkJBUDkzdGJVaVVkOWRNd2R2STduOUk0UmVvKzFLRUd4Y2htanNzVUpMQWRFK3lTdm1qM0tsMFF5S1BHego3R0pqK1lMTVFhckd1Nm9wSHp1QzlpZ2J2aEx2THRWSVdXUW9IZHBPbEVGalg0akthTGNOK2kwSmZ1SXN4UnE0Cmk5R3dnUUtCZ0dZZDUvNCt4Y2MvaDNnTVdVQ0djL1IvZFkva3dnMFQ3dnBCdDFrTlhqMUg4WUdBYTZJK3lMVlYKM1RKcVdGZ1N1Wm1haklCS2hCWDJqS1ZtQlo5U1BwUEY3NG15MDh5dmwzWjJnUDh3RFpYZEpOS0l3dTRPNUZDSwpleHNHWWRhSlVwV2Z6KzlEUldJWHJMd3Q0aDE1dWZ2cW56SGo1cTAzbkY1SWt0cHlFVDhwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="]}

TASK [kubernetes/client : Write admin kubeconfig on ansible host] ******************************************************
Friday 16 October 2020  02:04:44 +0000 (0:00:01.339)       0:06:32.505 ********

TASK [kubernetes/client : Copy kubectl binary to ansible host] *********************************************************
Friday 16 October 2020  02:04:44 +0000 (0:00:00.041)       0:06:32.546 ********

TASK [kubernetes/client : create helper script kubectl.sh on ansible host] *********************************************
Friday 16 October 2020  02:04:44 +0000 (0:00:00.047)       0:06:32.594 ********

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Wait for kube-apiserver] ***************************************
Friday 16 October 2020  02:04:44 +0000 (0:00:00.039)       0:06:32.633 ********
ok: [test1] => {"attempts": 1, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:04:52 GMT", "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff"}

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Check AppArmor status] *****************************************
Friday 16 October 2020  02:04:45 +0000 (0:00:00.403)       0:06:33.037 ********

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Set apparmor_enabled] ******************************************
Friday 16 October 2020  02:04:45 +0000 (0:00:00.038)       0:06:33.075 ********

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Render templates for PodSecurityPolicy] ************************
Friday 16 October 2020  02:04:45 +0000 (0:00:00.039)       0:06:33.115 ********

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add policies, roles, bindings for PodSecurityPolicy] ***********
Friday 16 October 2020  02:04:45 +0000 (0:00:00.056)       0:06:33.171 ********

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding to admit nodes] *************************
Friday 16 October 2020  02:04:45 +0000 (0:00:00.073)       0:06:33.245 ********
changed: [test1] => {"changed": true, "checksum": "7a5d333673421310e034bd1931c65d490d541632", "dest": "/etc/kubernetes/node-crb.yml", "gid": 0, "group": "root", "md5sum": "63565185c3821bd7eb783657a86d84c9", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 408, "src": "/root/.ansible/tmp/ansible-tmp-1602813885.6393967-100092358135563/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/cluster_roles : Apply workaround to allow all nodes with cert O=system:nodes to register] ********
Friday 16 October 2020  02:04:46 +0000 (0:00:00.423)       0:06:33.668 ********
ok: [test1] => {"attempts": 1, "changed": false, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/kubespray:system:node created"}

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add webhook ClusterRole that grants access to proxy, stats, log, spec, and metrics on a kubelet] ***
Friday 16 October 2020  02:04:46 +0000 (0:00:00.579)       0:06:34.248 ********
changed: [test1] => {"changed": true, "checksum": "3ae0c3673b72c2b21c807ff3f30e5d3ba7686e13", "dest": "/etc/kubernetes/node-webhook-cr.yml", "gid": 0, "group": "root", "md5sum": "43fcdedeedcf4cc2671178b1ef7ba5bf", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 403, "src": "/root/.ansible/tmp/ansible-tmp-1602813886.6437268-69787037403735/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/cluster_roles : Apply webhook ClusterRole] *******************************************************
Friday 16 October 2020  02:04:47 +0000 (0:00:00.418)       0:06:34.667 ********
ok: [test1] => {"changed": false, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:node-webhook created"}

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding for system:nodes to webhook ClusterRole] ***
Friday 16 October 2020  02:04:47 +0000 (0:00:00.364)       0:06:35.032 ********
changed: [test1] => {"changed": true, "checksum": "629bb96860047ab61d6d966a0d77412a8093baad", "dest": "/etc/kubernetes/node-webhook-crb.yml", "gid": 0, "group": "root", "md5sum": "33a0a30140c67a8fdd4678d19b7029c5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 414, "src": "/root/.ansible/tmp/ansible-tmp-1602813887.4292383-230529052288192/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/cluster_roles : Grant system:nodes the webhook ClusterRole] **************************************
Friday 16 October 2020  02:04:47 +0000 (0:00:00.441)       0:06:35.474 ********
ok: [test1] => {"changed": false, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:node-webhook created"}

TASK [kubernetes-apps/cluster_roles : include_tasks] *******************************************************************
Friday 16 October 2020  02:04:48 +0000 (0:00:00.380)       0:06:35.855 ********

TASK [kubernetes-apps/cluster_roles : PriorityClass | Copy k8s-cluster-critical-pc.yml file] ***************************
Friday 16 October 2020  02:04:48 +0000 (0:00:00.040)       0:06:35.895 ********
changed: [test1] => {"changed": true, "checksum": "2abb3233dd0241e931c969f251bdcd54183b1f88", "dest": "/etc/kubernetes/k8s-cluster-critical-pc.yml", "gid": 0, "group": "root", "md5sum": "71b709e503a59f773fe8f097e394325d", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 235, "src": "/root/.ansible/tmp/ansible-tmp-1602813888.2869813-267277903583964/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/cluster_roles : PriorityClass | Create k8s-cluster-critical] *************************************
Friday 16 October 2020  02:04:48 +0000 (0:00:00.432)       0:06:36.328 ********
ok: [test1] => {"changed": false, "msg": "success: priorityclass.scheduling.k8s.io/k8s-cluster-critical created"}

RUNNING HANDLER [kubernetes/master : Master | restart kubelet] *********************************************************
Friday 16 October 2020  02:04:48 +0000 (0:00:00.312)       0:06:36.640 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002722", "end": "2020-10-16 02:04:56.762145", "rc": 0, "start": "2020-10-16 02:04:56.759423", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [kubernetes/master : Master | wait for master static pods] *********************************************
Friday 16 October 2020  02:04:49 +0000 (0:00:00.212)       0:06:36.853 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001961", "end": "2020-10-16 02:04:56.979476", "rc": 0, "start": "2020-10-16 02:04:56.977515", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [kubernetes/master : Master | Restart kube-scheduler] **************************************************
Friday 16 October 2020  02:04:49 +0000 (0:00:00.274)       0:06:37.128 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001995", "end": "2020-10-16 02:04:57.249436", "rc": 0, "start": "2020-10-16 02:04:57.247441", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [kubernetes/master : Master | Restart kube-controller-manager] *****************************************
Friday 16 October 2020  02:04:49 +0000 (0:00:00.256)       0:06:37.384 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002017", "end": "2020-10-16 02:04:57.508390", "rc": 0, "start": "2020-10-16 02:04:57.506373", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [kubernetes/master : Master | reload systemd] **********************************************************
Friday 16 October 2020  02:04:49 +0000 (0:00:00.262)       0:06:37.646 ********
ok: [test1] => {"changed": false, "name": null, "status": {}}

RUNNING HANDLER [kubernetes/master : Master | reload kubelet] **********************************************************
Friday 16 October 2020  02:04:50 +0000 (0:00:00.343)       0:06:37.990 ********
changed: [test1] => {"changed": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 02:04:32 UTC", "ActiveEnterTimestampMonotonic": "911212274", "ActiveExitTimestamp": "Fri 2020-10-16 02:04:22 UTC", "ActiveExitTimestampMonotonic": "900928112", "ActiveState": "active", "After": "basic.target systemd-journald.socket system.slice docker.service", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 02:04:32 UTC", "AssertTimestampMonotonic": "911185660", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 02:04:32 UTC", "ConditionTimestampMonotonic": "911185660", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/kubelet.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "EnvironmentFile": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "17767", "ExecMainStartTimestamp": "Fri 2020-10-16 02:04:32 UTC", "ExecMainStartTimestampMonotonic": "911211769", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/etc/systemd/system/kubelet.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Fri 2020-10-16 02:04:32 UTC", "InactiveEnterTimestampMonotonic": "911185611", "InactiveExitTimestamp": "Fri 2020-10-16 02:04:32 UTC", "InactiveExitTimestampMonotonic": "911212274", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "4096", "LimitNPROC": "15098", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "17767", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "system.slice basic.target", "Restart": "always", "RestartUSec": "10s", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min 30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "User": "root", "WantedBy": "multi-user.target", "Wants": "docker.socket", "WatchdogTimestamp": "Fri 2020-10-16 02:04:32 UTC", "WatchdogTimestampMonotonic": "911212253", "WatchdogUSec": "0"}}

RUNNING HANDLER [kubernetes/master : Master | Remove scheduler container docker] ***************************************
Friday 16 October 2020  02:04:50 +0000 (0:00:00.307)       0:06:38.297 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": "docker ps -af name=k8s_kube-scheduler* -q | xargs --no-run-if-empty docker rm -f", "delta": "0:00:00.293269", "end": "2020-10-16 02:04:58.845221", "rc": 0, "start": "2020-10-16 02:04:58.551952", "stderr": "", "stderr_lines": [], "stdout": "af55a2b34153", "stdout_lines": ["af55a2b34153"]}

RUNNING HANDLER [kubernetes/master : Master | Remove scheduler container containerd/crio] ******************************
Friday 16 October 2020  02:04:51 +0000 (0:00:00.618)       0:06:38.915 ********

RUNNING HANDLER [kubernetes/master : Master | Remove controller manager container docker] ******************************
Friday 16 October 2020  02:04:51 +0000 (0:00:00.040)       0:06:38.956 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": "docker ps -af name=k8s_kube-controller-manager* -q | xargs --no-run-if-empty docker rm -f", "delta": "0:00:00.255536", "end": "2020-10-16 02:04:59.393132", "rc": 0, "start": "2020-10-16 02:04:59.137596", "stderr": "", "stderr_lines": [], "stdout": "c5cf986381a8", "stdout_lines": ["c5cf986381a8"]}

RUNNING HANDLER [kubernetes/master : Master | Remove controller manager container containerd/crio] *********************
Friday 16 October 2020  02:04:51 +0000 (0:00:00.506)       0:06:39.463 ********

RUNNING HANDLER [kubernetes/master : Master | wait for kube-scheduler] *************************************************
Friday 16 October 2020  02:04:51 +0000 (0:00:00.040)       0:06:39.503 ********
FAILED - RETRYING: Master | wait for kube-scheduler (60 retries left).
ok: [test1] => {"attempts": 2, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:05:01 GMT", "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://localhost:10259/healthz", "x_content_type_options": "nosniff"}

RUNNING HANDLER [kubernetes/master : Master | wait for kube-controller-manager] ****************************************
Friday 16 October 2020  02:04:53 +0000 (0:00:01.735)       0:06:41.239 ********
ok: [test1] => {"attempts": 1, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:05:01 GMT", "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://localhost:10257/healthz", "x_content_type_options": "nosniff"}

RUNNING HANDLER [kubernetes/master : Master | wait for the apiserver to be running] ************************************
Friday 16 October 2020  02:04:53 +0000 (0:00:00.387)       0:06:41.626 ********
ok: [test1] => {"attempts": 1, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:05:01 GMT", "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff"}

RUNNING HANDLER [kubernetes/master : Master | set secret_changed] ******************************************************
Friday 16 October 2020  02:04:54 +0000 (0:00:00.384)       0:06:42.011 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002016", "end": "2020-10-16 02:05:02.131320", "rc": 0, "start": "2020-10-16 02:05:02.129304", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [kubernetes/master : Master | set secret_changed to true] **********************************************
Friday 16 October 2020  02:04:54 +0000 (0:00:00.254)       0:06:42.265 ********
ok: [test1] => {"ansible_facts": {"secret_changed": true}, "changed": false}

RUNNING HANDLER [kubernetes/master : Master | Copy new kubeconfig for root user] ***************************************
Friday 16 October 2020  02:04:54 +0000 (0:00:00.065)       0:06:42.331 ********
ok: [test1] => {"changed": false, "checksum": "f83c98a12c196a30dc7644f2a5810f037c91304e", "dest": "/root/.kube/config", "gid": 0, "group": "root", "md5sum": "cd290f5463dc827d6432967e2ed33766", "mode": "0600", "owner": "root", "secontext": "system_u:object_r:admin_home_t:s0", "size": 5461, "src": "/etc/kubernetes/admin.conf", "state": "file", "uid": 0}

PLAY [k8s-cluster] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:04:54 +0000 (0:00:00.292)       0:06:42.623 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.040)       0:06:42.664 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.043)       0:06:42.707 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.041)       0:06:42.748 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.044)       0:06:42.792 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.045)       0:06:42.838 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.044)       0:06:42.882 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.041)       0:06:42.924 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.038)       0:06:42.962 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.047)       0:06:43.010 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.041)       0:06:43.051 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:04:55 +0000 (0:00:00.038)       0:06:43.090 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:04:56 +0000 (0:00:00.785)       0:06:43.876 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:04:57 +0000 (0:00:00.782)       0:06:44.658 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes/kubeadm : Set kubeadm_discovery_address] **************************************************************
Friday 16 October 2020  02:04:57 +0000 (0:00:00.117)       0:06:44.776 ********
ok: [test1] => {"ansible_facts": {"kubeadm_discovery_address": "10.0.2.15:6443"}, "changed": false}

TASK [kubernetes/kubeadm : Check if kubelet.conf exists] ***************************************************************
Friday 16 October 2020  02:04:57 +0000 (0:00:00.204)       0:06:44.980 ********
ok: [test1] => {"changed": false, "stat": {"atime": 1602813898.3368282, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 16, "charset": "us-ascii", "checksum": "44cf9a46104116e7ebf571ec06ac1bc70d7895e0", "ctime": 1602813889.622772, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 34665830, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0640", "mtime": 1602813888.189762, "nlink": 1, "path": "/etc/kubernetes/kubelet.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": false, "rusr": true, "size": 5465, "uid": 0, "version": "18446744073089271158", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [kubernetes/kubeadm : Check if kubeadm CA cert is accessible] *****************************************************
Friday 16 October 2020  02:04:57 +0000 (0:00:00.278)       0:06:45.258 ********
ok: [test1 -> 10.1.7.152] => {"changed": false, "stat": {"atime": 1602813863.1488626, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "3f081e8065b01218fca98905425f915f3905a3cf", "ctime": 1602813862.8118649, "dev": 2049, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 102681611, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0644", "mtime": 1602813862.8118649, "nlink": 1, "path": "/etc/kubernetes/ssl/ca.crt", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1025, "uid": 0, "version": "1212528853", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [kubernetes/kubeadm : Calculate kubeadm CA cert hash] *************************************************************
Friday 16 October 2020  02:04:57 +0000 (0:00:00.223)       0:06:45.481 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": "openssl x509 -pubkey -in /etc/kubernetes/ssl/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'", "delta": "0:00:00.019914", "end": "2020-10-16 02:05:05.673282", "rc": 0, "start": "2020-10-16 02:05:05.653368", "stderr": "", "stderr_lines": [], "stdout": "53621c2b6fd4e9d4644de9b21d1503c3eaebc7096ddd9f42e9e8e56b9cace4e3", "stdout_lines": ["53621c2b6fd4e9d4644de9b21d1503c3eaebc7096ddd9f42e9e8e56b9cace4e3"]}

TASK [kubernetes/kubeadm : Create kubeadm token for joining nodes with 24h expiration (default)] ***********************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.302)       0:06:45.784 ********

TASK [kubernetes/kubeadm : Set kubeadm_token to generated token] *******************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.043)       0:06:45.828 ********

TASK [kubernetes/kubeadm : gets the kubeadm version] *******************************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.038)       0:06:45.866 ********
changed: [test1] => {"changed": true, "cmd": ["/usr/local/bin/kubeadm", "version", "-o", "short"], "delta": "0:00:00.063185", "end": "2020-10-16 02:05:06.087274", "rc": 0, "start": "2020-10-16 02:05:06.024089", "stderr": "", "stderr_lines": [], "stdout": "v1.16.15", "stdout_lines": ["v1.16.15"]}

TASK [kubernetes/kubeadm : sets kubeadm api version to v1beta1] ********************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.308)       0:06:46.175 ********
ok: [test1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta1"}, "changed": false}

TASK [kubernetes/kubeadm : Create kubeadm client config] ***************************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.126)       0:06:46.302 ********

TASK [kubernetes/kubeadm : Join to cluster] ****************************************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.039)       0:06:46.341 ********

TASK [kubernetes/kubeadm : Display kubeadm join stderr if any] *********************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.041)       0:06:46.383 ********

TASK [kubernetes/kubeadm : Update server field in kubelet kubeconfig] **************************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.041)       0:06:46.424 ********

TASK [kubernetes/kubeadm : Update server field in kube-proxy kubeconfig] ***********************************************
Friday 16 October 2020  02:04:58 +0000 (0:00:00.062)       0:06:46.487 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": "/usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf get configmap kube-proxy -n kube-system -o yaml | sed 's#server:.*#server: https://127.0.0.1:6443#g' | /usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf replace -f -", "delta": "0:00:00.201270", "end": "2020-10-16 02:05:06.947911", "rc": 0, "start": "2020-10-16 02:05:06.746641", "stderr": "", "stderr_lines": [], "stdout": "configmap/kube-proxy replaced", "stdout_lines": ["configmap/kube-proxy replaced"]}

TASK [kubernetes/kubeadm : Set ca.crt file permission] *****************************************************************
Friday 16 October 2020  02:04:59 +0000 (0:00:00.549)       0:06:47.037 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/kubernetes/ssl/ca.crt", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 1025, "state": "file", "uid": 0}

TASK [kubernetes/kubeadm : Restart all kube-proxy pods to ensure that they load the new configmap] *********************
Friday 16 October 2020  02:04:59 +0000 (0:00:00.269)       0:06:47.307 ********
changed: [test1 -> 10.1.7.152] => {"changed": true, "cmd": "/usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf delete pod -n kube-system -l k8s-app=kube-proxy --force --grace-period=0", "delta": "0:00:00.096086", "end": "2020-10-16 02:05:07.655731", "rc": 0, "start": "2020-10-16 02:05:07.559645", "stderr": "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.", "stderr_lines": ["warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely."], "stdout": "pod \"kube-proxy-wnmdw\" force deleted", "stdout_lines": ["pod \"kube-proxy-wnmdw\" force deleted"]}

TASK [kubernetes/kubeadm : Symlink kubelet kubeconfig for calico/canal] ************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.441)       0:06:47.748 ********

TASK [kubernetes/kubeadm : Delete kube-proxy daemonset if kube_proxy_remove set, e.g. kube_network_plugin providing proxy services] ***
Friday 16 October 2020  02:05:00 +0000 (0:00:00.064)       0:06:47.813 ********

TASK [kubernetes/kubeadm : Extract etcd certs from control plane if using etcd kubeadm mode] ***************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.038)       0:06:47.852 ********

TASK [network_plugin/cilium : Cilium | Ensure BFPFS mounted] ***********************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.036)       0:06:47.888 ********

TASK [network_plugin/cilium : Cilium | Create Cilium certs directory] **************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.038)       0:06:47.927 ********

TASK [network_plugin/cilium : Cilium | Link etcd certificates for cilium] **********************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.041)       0:06:47.968 ********

TASK [network_plugin/cilium : Cilium | Create Cilium node manifests] ***************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.068)       0:06:48.037 ********

TASK [network_plugin/cilium : Cilium | Set CNI directory permissions] **************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.089)       0:06:48.127 ********

TASK [network_plugin/cilium : Cilium | Copy CNI plugins] ***************************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.039)       0:06:48.166 ********

TASK [network_plugin/cilium : Cilium | Enable portmap addon] ***********************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.037)       0:06:48.204 ********

TASK [network_plugin/calico : Check vars defined correctly] ************************************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.039)       0:06:48.244 ********
ok: [test1] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Get current version of calico cluster version] *******************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.138)       0:06:48.383 ********
ok: [test1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh version | grep 'Cluster Version:' | awk '{ print $3}'", "delta": "0:00:00.003910", "end": "2020-10-16 02:05:08.548590", "rc": 0, "start": "2020-10-16 02:05:08.544680", "stderr": "/bin/sh: /usr/local/bin/calicoctl.sh: No such file or directory", "stderr_lines": ["/bin/sh: /usr/local/bin/calicoctl.sh: No such file or directory"], "stdout": "", "stdout_lines": []}

TASK [network_plugin/calico : Check that calico version is enough for upgrade] *****************************************
Friday 16 October 2020  02:05:00 +0000 (0:00:00.253)       0:06:48.637 ********

TASK [network_plugin/calico : Set upgrade flag when version needs to be updated] ***************************************
Friday 16 October 2020  02:05:01 +0000 (0:00:00.042)       0:06:48.680 ********

TASK [network_plugin/calico : Calico | Get kubelet hostname] ***********************************************************
Friday 16 October 2020  02:05:01 +0000 (0:00:00.063)       0:06:48.744 ********

TASK [network_plugin/calico : include_tasks] ***************************************************************************
Friday 16 October 2020  02:05:01 +0000 (0:00:00.048)       0:06:48.792 ********

TASK [network_plugin/calico : include_tasks] ***************************************************************************
Friday 16 October 2020  02:05:01 +0000 (0:00:00.039)       0:06:48.831 ********
included: /home/vagrant/kubespray/roles/network_plugin/calico/tasks/install.yml for test1

TASK [network_plugin/calico : Calico | Copy calicoctl binary from download dir] ****************************************
Friday 16 October 2020  02:05:01 +0000 (0:00:00.111)       0:06:48.943 ********
changed: [test1] => {"changed": true, "checksum": "84f9e061d85fddf6437700a90af18084654cbb21", "dest": "/usr/local/bin/calicoctl", "gid": 0, "group": "root", "md5sum": "7840346b42d3df44cecb256266104e88", "mode": "0755", "owner": "root", "secontext": "system_u:object_r:bin_t:s0", "size": 35861536, "src": "/tmp/releases/calicoctl", "state": "file", "uid": 0}

TASK [network_plugin/calico : Calico | Check if host has NetworkManager] ***********************************************
Friday 16 October 2020  02:05:01 +0000 (0:00:00.431)       0:06:49.374 ********
ok: [test1] => {"changed": false, "cmd": ["systemctl", "show", "NetworkManager"], "delta": "0:00:00.009573", "end": "2020-10-16 02:05:09.543974", "failed_when_result": false, "rc": 0, "start": "2020-10-16 02:05:09.534401", "stderr": "", "stderr_lines": [], "stdout": "Type=dbus\nRestart=on-failure\nNotifyAccess=none\nRestartUSec=100ms\nTimeoutStartUSec=1min 30s\nTimeoutStopUSec=1min 30s\nWatchdogUSec=0\nWatchdogTimestamp=Fri 2020-10-16 01:49:38 UTC\nWatchdogTimestampMonotonic=16754380\nStartLimitInterval=10000000\nStartLimitBurst=5\nStartLimitAction=none\nFailureAction=none\nPermissionsStartOnly=no\nRootDirectoryStartOnly=no\nRemainAfterExit=no\nGuessMainPID=yes\nMainPID=2345\nControlPID=0\nBusName=org.freedesktop.NetworkManager\nFileDescriptorStoreMax=0\nStatusErrno=0\nResult=success\nExecMainStartTimestamp=Fri 2020-10-16 01:49:38 UTC\nExecMainStartTimestampMonotonic=16727488\nExecMainExitTimestampMonotonic=0\nExecMainPID=2345\nExecMainCode=0\nExecMainStatus=0\nExecStart={ path=/usr/sbin/NetworkManager ; argv[]=/usr/sbin/NetworkManager --no-daemon ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }\nExecReload={ path=/usr/bin/dbus-send ; argv[]=/usr/bin/dbus-send --print-reply --system --type=method_call --dest=org.freedesktop.NetworkManager /org/freedesktop/NetworkManager org.freedesktop.NetworkManager.Reload uint32:0 ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }\nSlice=system.slice\nControlGroup=/system.slice/NetworkManager.service\nMemoryCurrent=4096\nTasksCurrent=4\nDelegate=no\nCPUAccounting=no\nCPUShares=18446744073709551615\nStartupCPUShares=18446744073709551615\nCPUQuotaPerSecUSec=infinity\nBlockIOAccounting=no\nBlockIOWeight=18446744073709551615\nStartupBlockIOWeight=18446744073709551615\nMemoryAccounting=no\nMemoryLimit=18446744073709551615\nDevicePolicy=auto\nTasksAccounting=no\nTasksMax=18446744073709551615\nUMask=0022\nLimitCPU=18446744073709551615\nLimitFSIZE=18446744073709551615\nLimitDATA=18446744073709551615\nLimitSTACK=18446744073709551615\nLimitCORE=18446744073709551615\nLimitRSS=18446744073709551615\nLimitNOFILE=4096\nLimitAS=18446744073709551615\nLimitNPROC=15098\nLimitMEMLOCK=65536\nLimitLOCKS=18446744073709551615\nLimitSIGPENDING=15098\nLimitMSGQUEUE=819200\nLimitNICE=0\nLimitRTPRIO=0\nLimitRTTIME=18446744073709551615\nOOMScoreAdjust=0\nNice=0\nIOScheduling=0\nCPUSchedulingPolicy=0\nCPUSchedulingPriority=0\nTimerSlackNSec=50000\nCPUSchedulingResetOnFork=no\nNonBlocking=no\nStandardInput=null\nStandardOutput=journal\nStandardError=inherit\nTTYReset=no\nTTYVHangup=no\nTTYVTDisallocate=no\nSyslogPriority=30\nSyslogLevelPrefix=yes\nSecureBits=0\nCapabilityBoundingSet=539309282\nAmbientCapabilities=0\nMountFlags=0\nPrivateTmp=no\nPrivateNetwork=no\nPrivateDevices=no\nProtectHome=read-only\nProtectSystem=yes\nSameProcessGroup=no\nIgnoreSIGPIPE=yes\nNoNewPrivileges=no\nSystemCallErrorNumber=0\nRuntimeDirectoryMode=0755\nKillMode=process\nKillSignal=15\nSendSIGKILL=yes\nSendSIGHUP=no\nId=NetworkManager.service\nNames=NetworkManager.service\nRequires=system.slice basic.target\nWants=network.target\nRequiredBy=NetworkManager-wait-online.service\nWantedBy=multi-user.target\nConflicts=shutdown.target\nBefore=network.target multi-user.target network.service NetworkManager-wait-online.service shutdown.target\nAfter=system.slice systemd-journald.socket network-pre.target dbus.service basic.target\nDocumentation=man:NetworkManager(8)\nDescription=Network Manager\nLoadState=loaded\nActiveState=active\nSubState=running\nFragmentPath=/usr/lib/systemd/system/NetworkManager.service\nUnitFileState=enabled\nUnitFilePreset=enabled\nInactiveExitTimestamp=Fri 2020-10-16 01:49:38 UTC\nInactiveExitTimestampMonotonic=16728043\nActiveEnterTimestamp=Fri 2020-10-16 01:49:38 UTC\nActiveEnterTimestampMonotonic=16754989\nActiveExitTimestamp=Fri 2020-10-16 01:49:38 UTC\nActiveExitTimestampMonotonic=16705524\nInactiveEnterTimestamp=Fri 2020-10-16 01:49:38 UTC\nInactiveEnterTimestampMonotonic=16726707\nCanStart=yes\nCanStop=yes\nCanReload=yes\nCanIsolate=no\nStopWhenUnneeded=no\nRefuseManualStart=no\nRefuseManualStop=no\nAllowIsolate=no\nDefaultDependencies=yes\nOnFailureJobMode=replace\nIgnoreOnIsolate=no\nIgnoreOnSnapshot=no\nNeedDaemonReload=no\nJobTimeoutUSec=0\nJobTimeoutAction=none\nConditionResult=yes\nAssertResult=yes\nConditionTimestamp=Fri 2020-10-16 01:49:38 UTC\nConditionTimestampMonotonic=16727034\nAssertTimestamp=Fri 2020-10-16 01:49:38 UTC\nAssertTimestampMonotonic=16727034\nTransient=no", "stdout_lines": ["Type=dbus", "Restart=on-failure", "NotifyAccess=none", "RestartUSec=100ms", "TimeoutStartUSec=1min 30s", "TimeoutStopUSec=1min 30s", "WatchdogUSec=0", "WatchdogTimestamp=Fri 2020-10-16 01:49:38 UTC", "WatchdogTimestampMonotonic=16754380", "StartLimitInterval=10000000", "StartLimitBurst=5", "StartLimitAction=none", "FailureAction=none", "PermissionsStartOnly=no", "RootDirectoryStartOnly=no", "RemainAfterExit=no", "GuessMainPID=yes", "MainPID=2345", "ControlPID=0", "BusName=org.freedesktop.NetworkManager", "FileDescriptorStoreMax=0", "StatusErrno=0", "Result=success", "ExecMainStartTimestamp=Fri 2020-10-16 01:49:38 UTC", "ExecMainStartTimestampMonotonic=16727488", "ExecMainExitTimestampMonotonic=0", "ExecMainPID=2345", "ExecMainCode=0", "ExecMainStatus=0", "ExecStart={ path=/usr/sbin/NetworkManager ; argv[]=/usr/sbin/NetworkManager --no-daemon ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReload={ path=/usr/bin/dbus-send ; argv[]=/usr/bin/dbus-send --print-reply --system --type=method_call --dest=org.freedesktop.NetworkManager /org/freedesktop/NetworkManager org.freedesktop.NetworkManager.Reload uint32:0 ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "Slice=system.slice", "ControlGroup=/system.slice/NetworkManager.service", "MemoryCurrent=4096", "TasksCurrent=4", "Delegate=no", "CPUAccounting=no", "CPUShares=18446744073709551615", "StartupCPUShares=18446744073709551615", "CPUQuotaPerSecUSec=infinity", "BlockIOAccounting=no", "BlockIOWeight=18446744073709551615", "StartupBlockIOWeight=18446744073709551615", "MemoryAccounting=no", "MemoryLimit=18446744073709551615", "DevicePolicy=auto", "TasksAccounting=no", "TasksMax=18446744073709551615", "UMask=0022", "LimitCPU=18446744073709551615", "LimitFSIZE=18446744073709551615", "LimitDATA=18446744073709551615", "LimitSTACK=18446744073709551615", "LimitCORE=18446744073709551615", "LimitRSS=18446744073709551615", "LimitNOFILE=4096", "LimitAS=18446744073709551615", "LimitNPROC=15098", "LimitMEMLOCK=65536", "LimitLOCKS=18446744073709551615", "LimitSIGPENDING=15098", "LimitMSGQUEUE=819200", "LimitNICE=0", "LimitRTPRIO=0", "LimitRTTIME=18446744073709551615", "OOMScoreAdjust=0", "Nice=0", "IOScheduling=0", "CPUSchedulingPolicy=0", "CPUSchedulingPriority=0", "TimerSlackNSec=50000", "CPUSchedulingResetOnFork=no", "NonBlocking=no", "StandardInput=null", "StandardOutput=journal", "StandardError=inherit", "TTYReset=no", "TTYVHangup=no", "TTYVTDisallocate=no", "SyslogPriority=30", "SyslogLevelPrefix=yes", "SecureBits=0", "CapabilityBoundingSet=539309282", "AmbientCapabilities=0", "MountFlags=0", "PrivateTmp=no", "PrivateNetwork=no", "PrivateDevices=no", "ProtectHome=read-only", "ProtectSystem=yes", "SameProcessGroup=no", "IgnoreSIGPIPE=yes", "NoNewPrivileges=no", "SystemCallErrorNumber=0", "RuntimeDirectoryMode=0755", "KillMode=process", "KillSignal=15", "SendSIGKILL=yes", "SendSIGHUP=no", "Id=NetworkManager.service", "Names=NetworkManager.service", "Requires=system.slice basic.target", "Wants=network.target", "RequiredBy=NetworkManager-wait-online.service", "WantedBy=multi-user.target", "Conflicts=shutdown.target", "Before=network.target multi-user.target network.service NetworkManager-wait-online.service shutdown.target", "After=system.slice systemd-journald.socket network-pre.target dbus.service basic.target", "Documentation=man:NetworkManager(8)", "Description=Network Manager", "LoadState=loaded", "ActiveState=active", "SubState=running", "FragmentPath=/usr/lib/systemd/system/NetworkManager.service", "UnitFileState=enabled", "UnitFilePreset=enabled", "InactiveExitTimestamp=Fri 2020-10-16 01:49:38 UTC", "InactiveExitTimestampMonotonic=16728043", "ActiveEnterTimestamp=Fri 2020-10-16 01:49:38 UTC", "ActiveEnterTimestampMonotonic=16754989", "ActiveExitTimestamp=Fri 2020-10-16 01:49:38 UTC", "ActiveExitTimestampMonotonic=16705524", "InactiveEnterTimestamp=Fri 2020-10-16 01:49:38 UTC", "InactiveEnterTimestampMonotonic=16726707", "CanStart=yes", "CanStop=yes", "CanReload=yes", "CanIsolate=no", "StopWhenUnneeded=no", "RefuseManualStart=no", "RefuseManualStop=no", "AllowIsolate=no", "DefaultDependencies=yes", "OnFailureJobMode=replace", "IgnoreOnIsolate=no", "IgnoreOnSnapshot=no", "NeedDaemonReload=no", "JobTimeoutUSec=0", "JobTimeoutAction=none", "ConditionResult=yes", "AssertResult=yes", "ConditionTimestamp=Fri 2020-10-16 01:49:38 UTC", "ConditionTimestampMonotonic=16727034", "AssertTimestamp=Fri 2020-10-16 01:49:38 UTC", "AssertTimestampMonotonic=16727034", "Transient=no"]}

TASK [network_plugin/calico : Calico | Ensure NetworkManager conf.d dir] ***********************************************
Friday 16 October 2020  02:05:02 +0000 (0:00:00.318)       0:06:49.693 ********
ok: [test1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/NetworkManager/conf.d", "secontext": "system_u:object_r:NetworkManager_etc_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [network_plugin/calico : Calico | Prevent NetworkManager from managing Calico interfaces] *************************
Friday 16 October 2020  02:05:02 +0000 (0:00:00.195)       0:06:49.888 ********
changed: [test1] => {"changed": true, "checksum": "65f6506ad05fe2e569147c5cc56acf9bdbf259af", "dest": "/etc/NetworkManager/conf.d/calico.conf", "gid": 0, "group": "root", "md5sum": "3a38215407fdec0468079714c8ced63c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:NetworkManager_etc_t:s0", "size": 70, "src": "/root/.ansible/tmp/ansible-tmp-1602813902.282072-113534465728163/source", "state": "file", "uid": 0}

TASK [network_plugin/calico : Calico | Write Calico cni config] ********************************************************
Friday 16 October 2020  02:05:02 +0000 (0:00:00.430)       0:06:50.319 ********
changed: [test1] => {"changed": true, "checksum": "d7d20feff4743ba384e9c7f6f6c9ebab79ba40e6", "dest": "/etc/cni/net.d/calico.conflist.template", "gid": 0, "group": "root", "md5sum": "097f1f5229d8b22d234d2f2f5c37ebbb", "mode": "0644", "owner": "kube", "secontext": "system_u:object_r:etc_t:s0", "size": 724, "src": "/root/.ansible/tmp/ansible-tmp-1602813902.711287-94128377928973/source", "state": "file", "uid": 997}

TASK [network_plugin/calico : Calico | Create calico certs directory] **************************************************
Friday 16 October 2020  02:05:03 +0000 (0:00:00.533)       0:06:50.852 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0750", "owner": "root", "path": "/etc/calico/certs", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [network_plugin/calico : Calico | Link etcd certificates for calico-node] *****************************************
Friday 16 October 2020  02:05:03 +0000 (0:00:00.199)       0:06:51.052 ********
changed: [test1] => (item={'s': 'ca.pem', 'd': 'ca_cert.crt'}) => {"changed": true, "dest": "/etc/calico/certs/ca_cert.crt", "gid": 0, "group": "root", "item": {"d": "ca_cert.crt", "s": "ca.pem"}, "mode": "0640", "owner": "kube", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 1090, "src": "/etc/ssl/etcd/ssl/ca.pem", "state": "hard", "uid": 997}
changed: [test1] => (item={'s': 'node-test1.pem', 'd': 'cert.crt'}) => {"changed": true, "dest": "/etc/calico/certs/cert.crt", "gid": 0, "group": "root", "item": {"d": "cert.crt", "s": "node-test1.pem"}, "mode": "0640", "owner": "kube", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 1359, "src": "/etc/ssl/etcd/ssl/node-test1.pem", "state": "hard", "uid": 997}
changed: [test1] => (item={'s': 'node-test1-key.pem', 'd': 'key.pem'}) => {"changed": true, "dest": "/etc/calico/certs/key.pem", "gid": 0, "group": "root", "item": {"d": "key.pem", "s": "node-test1-key.pem"}, "mode": "0640", "owner": "kube", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 1675, "src": "/etc/ssl/etcd/ssl/node-test1-key.pem", "state": "hard", "uid": 997}

TASK [network_plugin/calico : Calico | Generate typha certs] ***********************************************************
Friday 16 October 2020  02:05:03 +0000 (0:00:00.506)       0:06:51.559 ********

TASK [network_plugin/calico : Calico | Install calicoctl wrapper script] ***********************************************
Friday 16 October 2020  02:05:03 +0000 (0:00:00.044)       0:06:51.604 ********
changed: [test1] => {"changed": true, "checksum": "aa36db12cf3a53b19ee564c564eb76910dd475e3", "dest": "/usr/local/bin/calicoctl.sh", "gid": 0, "group": "root", "md5sum": "8ae01a20424e4891dea209c4414f0e07", "mode": "0755", "owner": "root", "secontext": "system_u:object_r:bin_t:s0", "size": 218, "src": "/root/.ansible/tmp/ansible-tmp-1602813903.9961364-183163309060575/source", "state": "file", "uid": 0}

TASK [network_plugin/calico : Calico | wait for etcd] ******************************************************************
Friday 16 October 2020  02:05:04 +0000 (0:00:00.513)       0:06:52.117 ********
ok: [test1] => {"attempts": 1, "changed": false, "connection": "close", "content_length": "17", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:05:12 GMT", "json": {"health": "true"}, "msg": "OK (17 bytes)", "redirected": false, "status": 200, "url": "https://10.0.2.15:2379/health"}

TASK [network_plugin/calico : Calico | Check if calico network pool has already been configured] ***********************
Friday 16 October 2020  02:05:04 +0000 (0:00:00.404)       0:06:52.521 ********
ok: [test1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ippool | grep -w \"10.233.64.0/18\" | wc -l", "delta": "0:00:00.031560", "end": "2020-10-16 02:05:12.663338", "rc": 0, "start": "2020-10-16 02:05:12.631778", "stderr": "", "stderr_lines": [], "stdout": "0", "stdout_lines": ["0"]}

TASK [network_plugin/calico : Calico | Ensure that calico_pool_cidr is within kube_pods_subnet when defined] ***********
Friday 16 October 2020  02:05:05 +0000 (0:00:00.233)       0:06:52.754 ********

TASK [network_plugin/calico : Calico | Create calico manifests for kdd] ************************************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.045)       0:06:52.800 ********

TASK [network_plugin/calico : Calico | Create Calico Kubernetes datastore resources] ***********************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.049)       0:06:52.849 ********

TASK [network_plugin/calico : Calico | Configure calico network pool (version < v3.3.0)] *******************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.056)       0:06:52.905 ********

TASK [network_plugin/calico : Calico | Configure calico network pool (version >= v3.3.0)] ******************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.047)       0:06:52.952 ********
changed: [test1] => {"changed": true, "cmd": "echo \"\n{ \"kind\": \"IPPool\",\n\"apiVersion\": \"projectcalico.org/v3\",\n\"metadata\": {\n\"name\": \"default-pool\",\n},\n\"spec\": {\n\"blockSize\": \"24\",\n\"cidr\": \"10.233.64.0/18\",\n\"ipipMode\": \"Always\",\n\"natOutgoing\": True }} \" | /usr/local/bin/calicoctl.sh apply -f -", "delta": "0:00:00.036378", "end": "2020-10-16 02:05:13.096183", "rc": 0, "start": "2020-10-16 02:05:13.059805", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'IPPool' resource(s)", "stdout_lines": ["Successfully applied 1 'IPPool' resource(s)"]}

TASK [network_plugin/calico : Determine nodeToNodeMesh needed state] ***************************************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.236)       0:06:53.189 ********

TASK [network_plugin/calico : Calico | Set global as_num] **************************************************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.045)       0:06:53.234 ********
ok: [test1] => {"changed": false, "cmd": "echo ' { \"kind\": \"BGPConfiguration\", \"apiVersion\": \"projectcalico.org/v3\", \"metadata\": {\n\"name\": \"default\",\n}, \"spec\": {\n\"logSeverityScreen\": \"Info\",\n\"nodeToNodeMeshEnabled\": true ,\n\"asNumber\": 64512 }} ' | /usr/local/bin/calicoctl.sh apply -f -", "delta": "0:00:00.035750", "end": "2020-10-16 02:05:13.369523", "rc": 0, "start": "2020-10-16 02:05:13.333773", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'BGPConfiguration' resource(s)", "stdout_lines": ["Successfully applied 1 'BGPConfiguration' resource(s)"]}

TASK [network_plugin/calico : Calico | Configure peering with router(s) at global scope] *******************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.226)       0:06:53.460 ********

TASK [network_plugin/calico : Calico | Configure peering with route reflectors at global scope] ************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.055)       0:06:53.515 ********

TASK [network_plugin/calico : Calico | Configure route reflectors to peer with each other] *****************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.035)       0:06:53.551 ********

TASK [network_plugin/calico : Calico | Create calico manifests] ********************************************************
Friday 16 October 2020  02:05:05 +0000 (0:00:00.042)       0:06:53.593 ********
changed: [test1] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'}) => {"changed": true, "checksum": "80a47e114f9be361b690c687946b6d85f342bd52", "dest": "/etc/kubernetes/calico-config.yml", "gid": 0, "group": "root", "item": {"file": "calico-config.yml", "name": "calico-config", "type": "cm"}, "md5sum": "080389db339764e9bc5eb86f4c14dee5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 313, "src": "/root/.ansible/tmp/ansible-tmp-1602813905.995509-112955281291778/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'}) => {"changed": true, "checksum": "23b252f5326ea371462933d0983b1793fccd20af", "dest": "/etc/kubernetes/calico-node.yml", "gid": 0, "group": "root", "item": {"file": "calico-node.yml", "name": "calico-node", "type": "ds"}, "md5sum": "df2a284cef57ac011ad0aad35adeeaf0", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 7766, "src": "/root/.ansible/tmp/ansible-tmp-1602813906.4784586-156580045210594/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'}) => {"changed": true, "checksum": "c94d2aa63492bb9c1462f1d8440e047cfd0b5f51", "dest": "/etc/kubernetes/calico-node-sa.yml", "gid": 0, "group": "root", "item": {"file": "calico-node-sa.yml", "name": "calico", "type": "sa"}, "md5sum": "04e0a37d7e036cdafb2b32f23645ec6f", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 147, "src": "/root/.ansible/tmp/ansible-tmp-1602813906.9344506-99503489343528/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'}) => {"changed": true, "checksum": "7cc31ac157450407c4ffcc3107e5d395e5c6331f", "dest": "/etc/kubernetes/calico-cr.yml", "gid": 0, "group": "root", "item": {"file": "calico-cr.yml", "name": "calico", "type": "clusterrole"}, "md5sum": "1bce069e28113ed76ef5e20400761d98", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 549, "src": "/root/.ansible/tmp/ansible-tmp-1602813907.3473635-72482709056370/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'}) => {"changed": true, "checksum": "4c242c0edb1c62b5a759af67900bdda8df83420a", "dest": "/etc/kubernetes/calico-crb.yml", "gid": 0, "group": "root", "item": {"file": "calico-crb.yml", "name": "calico", "type": "clusterrolebinding"}, "md5sum": "4890b13200e0ef5c268ecd3598af9523", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 270, "src": "/root/.ansible/tmp/ansible-tmp-1602813907.770386-33116235060967/source", "state": "file", "uid": 0}

TASK [network_plugin/calico : Calico | Create calico manifests for typha] **********************************************
Friday 16 October 2020  02:05:08 +0000 (0:00:02.237)       0:06:55.830 ********

TASK [network_plugin/calico : Start Calico resources] ******************************************************************
Friday 16 October 2020  02:05:08 +0000 (0:00:00.051)       0:06:55.882 ********
ok: [test1] => (item=calico-config.yml) => {"changed": false, "item": {"changed": true, "checksum": "80a47e114f9be361b690c687946b6d85f342bd52", "dest": "/etc/kubernetes/calico-config.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-config.yml.j2", "attributes": null, "backup": false, "checksum": "80a47e114f9be361b690c687946b6d85f342bd52", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-config.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813905.995509-112955281291778/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-config.yml", "name": "calico-config", "type": "cm"}, "md5sum": "080389db339764e9bc5eb86f4c14dee5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 313, "src": "/root/.ansible/tmp/ansible-tmp-1602813905.995509-112955281291778/source", "state": "file", "uid": 0}, "msg": "success: configmap/calico-config created"}
ok: [test1] => (item=calico-node.yml) => {"changed": false, "item": {"changed": true, "checksum": "23b252f5326ea371462933d0983b1793fccd20af", "dest": "/etc/kubernetes/calico-node.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-node.yml.j2", "attributes": null, "backup": false, "checksum": "23b252f5326ea371462933d0983b1793fccd20af", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-node.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813906.4784586-156580045210594/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-node.yml", "name": "calico-node", "type": "ds"}, "md5sum": "df2a284cef57ac011ad0aad35adeeaf0", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 7766, "src": "/root/.ansible/tmp/ansible-tmp-1602813906.4784586-156580045210594/source", "state": "file", "uid": 0}, "msg": "success: daemonset.apps/calico-node created"}
ok: [test1] => (item=calico-node-sa.yml) => {"changed": false, "item": {"changed": true, "checksum": "c94d2aa63492bb9c1462f1d8440e047cfd0b5f51", "dest": "/etc/kubernetes/calico-node-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-node-sa.yml.j2", "attributes": null, "backup": false, "checksum": "c94d2aa63492bb9c1462f1d8440e047cfd0b5f51", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-node-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813906.9344506-99503489343528/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-node-sa.yml", "name": "calico", "type": "sa"}, "md5sum": "04e0a37d7e036cdafb2b32f23645ec6f", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 147, "src": "/root/.ansible/tmp/ansible-tmp-1602813906.9344506-99503489343528/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/calico-node created"}
ok: [test1] => (item=calico-cr.yml) => {"changed": false, "item": {"changed": true, "checksum": "7cc31ac157450407c4ffcc3107e5d395e5c6331f", "dest": "/etc/kubernetes/calico-cr.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-cr.yml.j2", "attributes": null, "backup": false, "checksum": "7cc31ac157450407c4ffcc3107e5d395e5c6331f", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-cr.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813907.3473635-72482709056370/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-cr.yml", "name": "calico", "type": "clusterrole"}, "md5sum": "1bce069e28113ed76ef5e20400761d98", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 549, "src": "/root/.ansible/tmp/ansible-tmp-1602813907.3473635-72482709056370/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/calico-node created"}
ok: [test1] => (item=calico-crb.yml) => {"changed": false, "item": {"changed": true, "checksum": "4c242c0edb1c62b5a759af67900bdda8df83420a", "dest": "/etc/kubernetes/calico-crb.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-crb.yml.j2", "attributes": null, "backup": false, "checksum": "4c242c0edb1c62b5a759af67900bdda8df83420a", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-crb.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813907.770386-33116235060967/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-crb.yml", "name": "calico", "type": "clusterrolebinding"}, "md5sum": "4890b13200e0ef5c268ecd3598af9523", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 270, "src": "/root/.ansible/tmp/ansible-tmp-1602813907.770386-33116235060967/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/calico-node created"}

TASK [network_plugin/calico : Wait for calico kubeconfig to be created] ************************************************
Friday 16 October 2020  02:05:09 +0000 (0:00:01.540)       0:06:57.423 ********

TASK [network_plugin/calico : Calico | Configure node asNumber for per node peering] ***********************************
Friday 16 October 2020  02:05:09 +0000 (0:00:00.040)       0:06:57.463 ********

TASK [network_plugin/calico : Calico | Configure peering with router(s) at node scope] *********************************
Friday 16 October 2020  02:05:09 +0000 (0:00:00.042)       0:06:57.505 ********

TASK [network_plugin/flannel : Flannel | Create Flannel manifests] *****************************************************
Friday 16 October 2020  02:05:09 +0000 (0:00:00.044)       0:06:57.550 ********

TASK [network_plugin/weave : Weave | Set cni directory permissions] ****************************************************
Friday 16 October 2020  02:05:09 +0000 (0:00:00.052)       0:06:57.602 ********

TASK [network_plugin/weave : Weave | Copy cni plugins] *****************************************************************
Friday 16 October 2020  02:05:09 +0000 (0:00:00.044)       0:06:57.646 ********

TASK [network_plugin/weave : Weave | Create manifest] ******************************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.037)       0:06:57.684 ********

TASK [network_plugin/weave : Weave | Fix nodePort for Weave] ***********************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.039)       0:06:57.723 ********

TASK [network_plugin/canal : Canal | Write Canal cni config] ***********************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.040)       0:06:57.764 ********

TASK [network_plugin/canal : Canal | Create canal certs directory] *****************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.038)       0:06:57.803 ********

TASK [network_plugin/canal : Canal | Link etcd certificates for canal-node] ********************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.038)       0:06:57.841 ********

TASK [network_plugin/canal : Canal | Set Flannel etcd configuration] ***************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.083)       0:06:57.925 ********

TASK [network_plugin/canal : Canal | Create canal node manifests] ******************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.039)       0:06:57.965 ********

TASK [network_plugin/canal : Canal | Install calicoctl wrapper script] *************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.102)       0:06:58.067 ********

TASK [network_plugin/canal : Canal | Create network policy directory] **************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.040)       0:06:58.108 ********

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ********************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.042)       0:06:58.150 ********

TASK [network_plugin/cni : CNI | Copy cni plugins] *********************************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.046)       0:06:58.196 ********

TASK [network_plugin/macvlan : Macvlan | Set cni directory permissions] ************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.039)       0:06:58.236 ********

TASK [network_plugin/macvlan : Macvlan | Copy cni plugins] *************************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.040)       0:06:58.276 ********

TASK [network_plugin/macvlan : Macvlan | Retrieve Pod Cidr] ************************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.062)       0:06:58.338 ********

TASK [network_plugin/macvlan : Macvlan | set node_pod_cidr] ************************************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.042)       0:06:58.381 ********

TASK [network_plugin/macvlan : Macvlan | Retrieve default gateway network interface] ***********************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.038)       0:06:58.420 ********

TASK [network_plugin/macvlan : Macvlan | set node_default_gateway_interface] *******************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.044)       0:06:58.464 ********

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on debian] **********************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.038)       0:06:58.503 ********

TASK [network_plugin/macvlan : Macvlan | Install macvlan script on centos] *********************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.038)       0:06:58.542 ********

TASK [network_plugin/macvlan : Macvlan | Install post-up script on centos] *********************************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.070)       0:06:58.612 ********

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on centos] **********************************
Friday 16 October 2020  02:05:10 +0000 (0:00:00.038)       0:06:58.651 ********

TASK [network_plugin/macvlan : Macvlan | Install service nat via gateway on coreos] ************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.061)       0:06:58.712 ********

TASK [network_plugin/macvlan : Macvlan | Enable service nat via gateway on coreos] *************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.040)       0:06:58.753 ********

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on coreos] **********************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.050)       0:06:58.803 ********

TASK [network_plugin/macvlan : Macvlan | Install cni definition for Macvlan] *******************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.060)       0:06:58.864 ********

TASK [network_plugin/macvlan : Macvlan | Install loopback definition for Macvlan] **************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.039)       0:06:58.904 ********

TASK [network_plugin/macvlan : Enable net.ipv4.conf.all.arp_notify in sysctl] ******************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.039)       0:06:58.943 ********

TASK [network_plugin/contiv : Contiv | Load openvswitch kernel module] *************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.040)       0:06:58.984 ********

TASK [network_plugin/contiv : Contiv | Create contiv etcd directories] *************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.042)       0:06:59.026 ********

TASK [network_plugin/contiv : Contiv | Workaround https://github.com/contiv/netplugin/issues/1152] *********************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.055)       0:06:59.082 ********

TASK [network_plugin/contiv : Contiv | Set necessary facts] ************************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.039)       0:06:59.122 ********

TASK [network_plugin/contiv : Contiv | Add another manifest if contiv_enable_api_proxy is true] ************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.040)       0:06:59.163 ********

TASK [network_plugin/contiv : Contiv | Create /var/contiv] *************************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.038)       0:06:59.201 ********

TASK [network_plugin/contiv : Contiv | Create contiv config directory] *************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.039)       0:06:59.241 ********

TASK [network_plugin/contiv : Contiv | Install all Kubernetes resources] ***********************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.042)       0:06:59.284 ********

TASK [network_plugin/contiv : Contiv | Copy certs generation script] ***************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.072)       0:06:59.356 ********

TASK [network_plugin/contiv : Contiv | Check for cert key existence] ***************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.060)       0:06:59.416 ********

TASK [network_plugin/contiv : Contiv | Generate contiv-api-proxy certificates] *****************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.063)       0:06:59.480 ********

TASK [network_plugin/contiv : Contiv | Fetch the generated certificate] ************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.063)       0:06:59.543 ********

TASK [network_plugin/contiv : Contiv | Copy the generated certificate on nodes] ****************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.054)       0:06:59.598 ********

TASK [network_plugin/contiv : Contiv | Set cni directory permissions] **************************************************
Friday 16 October 2020  02:05:11 +0000 (0:00:00.053)       0:06:59.651 ********

TASK [network_plugin/contiv : Contiv | Copy cni plugins] ***************************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.041)       0:06:59.693 ********

TASK [network_plugin/contiv : Contiv | Copy netctl binary from docker container] ***************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.044)       0:06:59.737 ********

TASK [network_plugin/kube-ovn : Kube-OVN | Label ovn-db node] **********************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.051)       0:06:59.788 ********

TASK [network_plugin/kube-ovn : Kube-OVN | Create Kube-OVN manifests] **************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.037)       0:06:59.826 ********

TASK [network_plugin/kube-router : kube-router | Add annotations on kube-master] ***************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.062)       0:06:59.889 ********

TASK [network_plugin/kube-router : kube-router | Add annotations on kube-node] *****************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.036)       0:06:59.925 ********

TASK [network_plugin/kube-router : kube-router | Add common annotations on all servers] ********************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.038)       0:06:59.963 ********

TASK [network_plugin/kube-router : kube-router | Set cni directory permissions] ****************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.035)       0:06:59.999 ********

TASK [network_plugin/kube-router : kube-router | Copy cni plugins] *****************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.038)       0:07:00.037 ********

TASK [network_plugin/kube-router : kube-router | Create manifest] ******************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.045)       0:07:00.082 ********

TASK [network_plugin/cloud : Cloud | Set cni directory permissions] ****************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.040)       0:07:00.123 ********

TASK [network_plugin/cloud : Canal | Copy cni plugins] *****************************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.042)       0:07:00.165 ********

TASK [network_plugin/multus : Multus | Copy manifest files] ************************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.039)       0:07:00.205 ********

TASK [network_plugin/multus : Multus | Copy manifest templates] ********************************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.067)       0:07:00.272 ********

TASK [kubernetes/node-label : Kubernetes Apps | Wait for kube-apiserver] ***********************************************
Friday 16 October 2020  02:05:12 +0000 (0:00:00.040)       0:07:00.313 ********
ok: [test1] => {"attempts": 1, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:05:20 GMT", "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff"}

TASK [kubernetes/node-label : Set role node label to empty list] *******************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.397)       0:07:00.710 ********
ok: [test1] => {"ansible_facts": {"role_node_labels": []}, "changed": false}

TASK [kubernetes/node-label : Node label for nvidia GPU nodes] *********************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.070)       0:07:00.780 ********

TASK [kubernetes/node-label : Set inventory node label to empty list] **************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.042)       0:07:00.822 ********
ok: [test1] => {"ansible_facts": {"inventory_node_labels": []}, "changed": false}

TASK [kubernetes/node-label : Populate inventory node label] ***********************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.061)       0:07:00.884 ********

TASK [kubernetes/node-label : debug] ***********************************************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.039)       0:07:00.923 ********
ok: [test1] => {
    "role_node_labels": []
}

TASK [kubernetes/node-label : debug] ***********************************************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.060)       0:07:00.984 ********
ok: [test1] => {
    "inventory_node_labels": []
}

TASK [kubernetes/node-label : Set label to node] ***********************************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.072)       0:07:01.056 ********

RUNNING HANDLER [network_plugin/calico : reset_calico_cni] *************************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.019)       0:07:01.076 ********
changed: [test1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002278", "end": "2020-10-16 02:05:21.193092", "rc": 0, "start": "2020-10-16 02:05:21.190814", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [network_plugin/calico : delete 10-calico.conflist] ****************************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.238)       0:07:01.314 ********
ok: [test1] => {"changed": false, "path": "/etc/cni/net.d/10-calico.conflist", "state": "absent"}

RUNNING HANDLER [network_plugin/calico : docker | delete calico-node containers] ***************************************
Friday 16 October 2020  02:05:13 +0000 (0:00:00.203)       0:07:01.517 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": "docker ps -af name=k8s_POD_calico-node* -q | xargs --no-run-if-empty docker rm -f", "delta": "0:00:00.044150", "end": "2020-10-16 02:05:21.681712", "rc": 0, "start": "2020-10-16 02:05:21.637562", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

RUNNING HANDLER [network_plugin/calico : containerd | delete calico-node containers] ***********************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.245)       0:07:01.763 ********

RUNNING HANDLER [network_plugin/calico : Calico | Reload NetworkManager] ***********************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.043)       0:07:01.806 ********
changed: [test1] => {"changed": true, "name": "NetworkManager", "state": "started", "status": {"ActiveEnterTimestamp": "Fri 2020-10-16 01:49:38 UTC", "ActiveEnterTimestampMonotonic": "16754989", "ActiveExitTimestamp": "Fri 2020-10-16 01:49:38 UTC", "ActiveExitTimestampMonotonic": "16705524", "ActiveState": "active", "After": "system.slice systemd-journald.socket network-pre.target dbus.service basic.target", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Fri 2020-10-16 01:49:38 UTC", "AssertTimestampMonotonic": "16727034", "Before": "network.target multi-user.target network.service NetworkManager-wait-online.service shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "BusName": "org.freedesktop.NetworkManager", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "539309282", "ConditionResult": "yes", "ConditionTimestamp": "Fri 2020-10-16 01:49:38 UTC", "ConditionTimestampMonotonic": "16727034", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/NetworkManager.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "Network Manager", "DevicePolicy": "auto", "Documentation": "man:NetworkManager(8)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "2345", "ExecMainStartTimestamp": "Fri 2020-10-16 01:49:38 UTC", "ExecMainStartTimestampMonotonic": "16727488", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/bin/dbus-send ; argv[]=/usr/bin/dbus-send --print-reply --system --type=method_call --dest=org.freedesktop.NetworkManager /org/freedesktop/NetworkManager org.freedesktop.NetworkManager.Reload uint32:0 ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/NetworkManager ; argv[]=/usr/sbin/NetworkManager --no-daemon ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/usr/lib/systemd/system/NetworkManager.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "NetworkManager.service", "IgnoreOnIsolate": "no", "IgnoreOnSnapshot": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Fri 2020-10-16 01:49:38 UTC", "InactiveEnterTimestampMonotonic": "16726707", "InactiveExitTimestamp": "Fri 2020-10-16 01:49:38 UTC", "InactiveExitTimestampMonotonic": "16728043", "JobTimeoutAction": "none", "JobTimeoutUSec": "0", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMSGQUEUE": "819200", "LimitNICE": "0", "LimitNOFILE": "4096", "LimitNPROC": "15098", "LimitRSS": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTTIME": "18446744073709551615", "LimitSIGPENDING": "15098", "LimitSTACK": "18446744073709551615", "LoadState": "loaded", "MainPID": "2345", "MemoryAccounting": "no", "MemoryCurrent": "4096", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "Names": "NetworkManager.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "read-only", "ProtectSystem": "yes", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "RequiredBy": "NetworkManager-wait-online.service", "Requires": "system.slice basic.target", "Restart": "on-failure", "RestartUSec": "100ms", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "4", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min 30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "dbus", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "WantedBy": "multi-user.target", "Wants": "network.target", "WatchdogTimestamp": "Fri 2020-10-16 01:49:38 UTC", "WatchdogTimestampMonotonic": "16754380", "WatchdogUSec": "0"}}

PLAY [calico-rr] *******************************************************************************************************
skipping: no hosts matched

PLAY [kube-master[0]] **************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.374)       0:07:02.181 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.038)       0:07:02.220 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.039)       0:07:02.260 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.038)       0:07:02.299 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.043)       0:07:02.342 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.044)       0:07:02.386 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.042)       0:07:02.428 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.037)       0:07:02.466 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.039)       0:07:02.506 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.041)       0:07:02.547 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.043)       0:07:02.590 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:05:14 +0000 (0:00:00.037)       0:07:02.628 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:05:15 +0000 (0:00:00.885)       0:07:03.514 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:05:16 +0000 (0:00:00.814)       0:07:04.328 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Get default token name] ******************************************
Friday 16 October 2020  02:05:16 +0000 (0:00:00.059)       0:07:04.388 ********
ok: [test1] => {"attempts": 1, "changed": false, "cmd": "/usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf get secrets -o custom-columns=name:{.metadata.name} --no-headers | grep -m1 default-token", "delta": "0:00:00.076219", "end": "2020-10-16 02:05:24.550359", "rc": 0, "start": "2020-10-16 02:05:24.474140", "stderr": "", "stderr_lines": [], "stdout": "default-token-ff4d4", "stdout_lines": ["default-token-ff4d4"]}

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Get default token data] ******************************************
Friday 16 October 2020  02:05:16 +0000 (0:00:00.261)       0:07:04.649 ********
ok: [test1] => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "secrets", "default-token-ff4d4", "-ojson"], "delta": "0:00:00.072897", "end": "2020-10-16 02:05:24.817682", "rc": 0, "start": "2020-10-16 02:05:24.744785", "stderr": "", "stderr_lines": [], "stdout": "{\n    \"apiVersion\": \"v1\",\n    \"data\": {\n        \"ca.crt\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01UQXhOakF5TURReU1sb1hEVE13TVRBeE5EQXlNRFF5TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHRECnp4NEJYU1A2dHVCa0VOcGhqajBTUExYT0ljbzBEcnJKY29mMmozdW1lQ2tEU0JqeUNEbUt1d1c3ZFRqTWVWYTgKK2lYZmw3MGhrZVBPemZ2MkdLSm0vZnlRRGZsUkh5Q00zMUtPUmdaY0U2VFdEZE9jMkkxVno0QnJvME1qaWRndAo2ODlKL2lseUxTRDA1cW1KcE1ySTF4TUQ1Z2lLOVNrWHlER3cvaldYQTB5SkozWHZzd01hc0xJOHdXdVZhSS9VCjhlUG8rNUY4aXR3QXc1UWhnZnEwSEI4MlZScExqMWNBdGRuc1llY3A5WU81QXlvL2pjT0JhM0dtbUcyMHlCTC8KcnpBd1Roa2F4Q1RPenV3NXZrN0svdU1LeGhEdjk0cmU5Wkh6b2V3V2Y5ZytncnNaSW9GdDJJTEFQQUYrSHRCSwptWTdWbVp6QnAwRVdaY3NsRGgwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDMFZaVUJ1RzAwN0t4VkRMMHB4L0dDWTJ3YUEKZlRrc3Vrc0JkWmN4SDdWU1I5VFdlWkEweXVPRUM1Rlc3MnlnYmEzQkxaOVVGanFZd1NOUXc0SU5hN1UyQmdVNApjRHd4OWxSUURvMEk1b281TGQrOTltRW5JZzloWDlJV3BZRzJNT3hTamtVeS9pY1BtemJ3bE51dGczcnYzTE1IClJBNnBCVEZZNWVMMnJnQXJ3czl3dnR2bEx6WkJEU214eHovOEpvWkc5RVVYdDdha0FITUNieTBsWFRmL2E3M0QKZERmMm9BZ3N5cnpSK1BNYldsTkEyc2dlVlgxejVWQWd0OEIvcVVEYThsRTZ2YlJpWDM3N01ZalphNFp3UkpjcgpqU1cvZ3BWZTZRU1VnczcrOXFSTWNLcHBnTkhIWjdJTEovZVpYRm1KSGwvZFNuTTllNUpJazNpTERRbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n        \"namespace\": \"ZGVmYXVsdA==\",\n        \"token\": \"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrc3dRVmR3Vld0UlYxa3lTbEpHZEhOaWRVMUJlbVo0UW1JMFpqUTFSVU55YjJOTE9DMXZla3BGWVZFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dFptWTBaRFFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJbVkwWmpBNVlUbGhMV1ZoTm1ZdE5ETmtNQzA0WVRGa0xUaGtZV1EzTnpSbVl6WTROaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEuSkRGeXNzaG14VFdWTnZBeGtJYkd6N0p0OF9MN09CZ2JITEU2UDhxQUZkQ1ROVXUwRHM5ME9Fc1hGeTRmd3EwLWhzQTR2UUN5X1ZZRnB0aHJwVkhSem1DNC13VVg1Ny1wVmo5UVlQaWpweV9pU29aMzBMeUtVcU1pWkZpRVppWmJuSzFzd3R3X19WTlRYMlZSTnpMQnBZZld0SVVpRXdTcWV5Y0FJendrdUxsZEU3dTBsU1hnU0R3VzZrWmpGNzRVeGxtc21TaXptWGdqOFpPNGV5eUxJUjJSYTJGQTJ1LS00RkljUURRcm9FdTNsZVlRZzBaQUFQQUE5OUdRU0w3R3VYT1oxV2dUZDFNUHVjcTRMUi1HQUlBb2JPOXFIQU9jLWdtWF9TMzZ2aXdLbkN6bnZCOXJTVW9pRUxXbUNVXzNsMlZNUjlHdUZyTlV2Ni1sQkN3Snpn\"\n    },\n    \"kind\": \"Secret\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/service-account.name\": \"default\",\n            \"kubernetes.io/service-account.uid\": \"f4f09a9a-ea6f-43d0-8a1d-8dad774fc686\"\n        },\n        \"creationTimestamp\": \"2020-10-16T02:04:58Z\",\n        \"name\": \"default-token-ff4d4\",\n        \"namespace\": \"default\",\n        \"resourceVersion\": \"336\",\n        \"selfLink\": \"/api/v1/namespaces/default/secrets/default-token-ff4d4\",\n        \"uid\": \"f1121756-a4ec-4134-8385-9ab470e342a7\"\n    },\n    \"type\": \"kubernetes.io/service-account-token\"\n}", "stdout_lines": ["{", "    \"apiVersion\": \"v1\",", "    \"data\": {", "        \"ca.crt\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01UQXhOakF5TURReU1sb1hEVE13TVRBeE5EQXlNRFF5TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHRECnp4NEJYU1A2dHVCa0VOcGhqajBTUExYT0ljbzBEcnJKY29mMmozdW1lQ2tEU0JqeUNEbUt1d1c3ZFRqTWVWYTgKK2lYZmw3MGhrZVBPemZ2MkdLSm0vZnlRRGZsUkh5Q00zMUtPUmdaY0U2VFdEZE9jMkkxVno0QnJvME1qaWRndAo2ODlKL2lseUxTRDA1cW1KcE1ySTF4TUQ1Z2lLOVNrWHlER3cvaldYQTB5SkozWHZzd01hc0xJOHdXdVZhSS9VCjhlUG8rNUY4aXR3QXc1UWhnZnEwSEI4MlZScExqMWNBdGRuc1llY3A5WU81QXlvL2pjT0JhM0dtbUcyMHlCTC8KcnpBd1Roa2F4Q1RPenV3NXZrN0svdU1LeGhEdjk0cmU5Wkh6b2V3V2Y5ZytncnNaSW9GdDJJTEFQQUYrSHRCSwptWTdWbVp6QnAwRVdaY3NsRGgwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDMFZaVUJ1RzAwN0t4VkRMMHB4L0dDWTJ3YUEKZlRrc3Vrc0JkWmN4SDdWU1I5VFdlWkEweXVPRUM1Rlc3MnlnYmEzQkxaOVVGanFZd1NOUXc0SU5hN1UyQmdVNApjRHd4OWxSUURvMEk1b281TGQrOTltRW5JZzloWDlJV3BZRzJNT3hTamtVeS9pY1BtemJ3bE51dGczcnYzTE1IClJBNnBCVEZZNWVMMnJnQXJ3czl3dnR2bEx6WkJEU214eHovOEpvWkc5RVVYdDdha0FITUNieTBsWFRmL2E3M0QKZERmMm9BZ3N5cnpSK1BNYldsTkEyc2dlVlgxejVWQWd0OEIvcVVEYThsRTZ2YlJpWDM3N01ZalphNFp3UkpjcgpqU1cvZ3BWZTZRU1VnczcrOXFSTWNLcHBnTkhIWjdJTEovZVpYRm1KSGwvZFNuTTllNUpJazNpTERRbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",", "        \"namespace\": \"ZGVmYXVsdA==\",", "        \"token\": \"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrc3dRVmR3Vld0UlYxa3lTbEpHZEhOaWRVMUJlbVo0UW1JMFpqUTFSVU55YjJOTE9DMXZla3BGWVZFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dFptWTBaRFFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJbVkwWmpBNVlUbGhMV1ZoTm1ZdE5ETmtNQzA0WVRGa0xUaGtZV1EzTnpSbVl6WTROaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEuSkRGeXNzaG14VFdWTnZBeGtJYkd6N0p0OF9MN09CZ2JITEU2UDhxQUZkQ1ROVXUwRHM5ME9Fc1hGeTRmd3EwLWhzQTR2UUN5X1ZZRnB0aHJwVkhSem1DNC13VVg1Ny1wVmo5UVlQaWpweV9pU29aMzBMeUtVcU1pWkZpRVppWmJuSzFzd3R3X19WTlRYMlZSTnpMQnBZZld0SVVpRXdTcWV5Y0FJendrdUxsZEU3dTBsU1hnU0R3VzZrWmpGNzRVeGxtc21TaXptWGdqOFpPNGV5eUxJUjJSYTJGQTJ1LS00RkljUURRcm9FdTNsZVlRZzBaQUFQQUE5OUdRU0w3R3VYT1oxV2dUZDFNUHVjcTRMUi1HQUlBb2JPOXFIQU9jLWdtWF9TMzZ2aXdLbkN6bnZCOXJTVW9pRUxXbUNVXzNsMlZNUjlHdUZyTlV2Ni1sQkN3Snpn\"", "    },", "    \"kind\": \"Secret\",", "    \"metadata\": {", "        \"annotations\": {", "            \"kubernetes.io/service-account.name\": \"default\",", "            \"kubernetes.io/service-account.uid\": \"f4f09a9a-ea6f-43d0-8a1d-8dad774fc686\"", "        },", "        \"creationTimestamp\": \"2020-10-16T02:04:58Z\",", "        \"name\": \"default-token-ff4d4\",", "        \"namespace\": \"default\",", "        \"resourceVersion\": \"336\",", "        \"selfLink\": \"/api/v1/namespaces/default/secrets/default-token-ff4d4\",", "        \"uid\": \"f1121756-a4ec-4134-8385-9ab470e342a7\"", "    },", "    \"type\": \"kubernetes.io/service-account-token\"", "}"]}

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Test if default certificate is expired] **************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.266)       0:07:04.916 ********
ok: [test1] => {"cache_control": "no-cache, private", "changed": false, "connection": "close", "content": "{\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"nodes is forbidden: User \\\"system:serviceaccount:default:default\\\" cannot list resource \\\"nodes\\\" in API group \\\"\\\" at the cluster scope\",\"reason\":\"Forbidden\",\"details\":{\"kind\":\"nodes\"},\"code\":403}\n", "content_length": "277", "content_type": "application/json", "date": "Fri, 16 Oct 2020 02:05:25 GMT", "failed_when_result": false, "json": {"apiVersion": "v1", "code": 403, "details": {"kind": "nodes"}, "kind": "Status", "message": "nodes is forbidden: User \"system:serviceaccount:default:default\" cannot list resource \"nodes\" in API group \"\" at the cluster scope", "metadata": {}, "reason": "Forbidden", "status": "Failure"}, "msg": "Status code was 403 and not [200]: HTTP Error 403: Forbidden", "redirected": false, "status": 403, "url": "https://10.233.0.1/api/v1/nodes", "x_content_type_options": "nosniff"}

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Determine if certificate is expired] *****************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.307)       0:07:05.223 ********
ok: [test1] => {"ansible_facts": {"needs_rotation": false}, "changed": false}

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Get all serviceaccount tokens to expire] *************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.066)       0:07:05.290 ********

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Delete expired tokens] *******************************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.041)       0:07:05.332 ********

TASK [kubernetes-apps/rotate_tokens : Rotate Tokens | Delete pods in system namespace] *********************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.039)       0:07:05.371 ********

TASK [win_nodes/kubernetes_patch : Ensure that user manifests directory exists] ****************************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.042)       0:07:05.414 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/root/kube-manifests/kubernetes", "secontext": "unconfined_u:object_r:admin_home_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [win_nodes/kubernetes_patch : Copy kube-proxy daemonset nodeselector patch] ***************************************
Friday 16 October 2020  02:05:17 +0000 (0:00:00.197)       0:07:05.611 ********
changed: [test1] => {"changed": true, "checksum": "7a623f3b1dbed6c45b190d209c0ff765511fe176", "dest": "/root/kube-manifests/nodeselector-os-linux-patch.json", "gid": 0, "group": "root", "md5sum": "cadd7f8620482e830875188201fc2f3b", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:admin_home_t:s0", "size": 81, "src": "/root/.ansible/tmp/ansible-tmp-1602813918.0045507-237266437641589/source", "state": "file", "uid": 0}

TASK [win_nodes/kubernetes_patch : Check current nodeselector for kube-proxy daemonset] ********************************
Friday 16 October 2020  02:05:18 +0000 (0:00:00.412)       0:07:06.023 ********
changed: [test1] => {"attempts": 1, "changed": true, "cmd": "/usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf get ds kube-proxy --namespace=kube-system -o jsonpath='{.spec.template.spec.nodeSelector.beta.kubernetes.io/os}'", "delta": "0:00:00.070030", "end": "2020-10-16 02:05:26.186075", "rc": 0, "start": "2020-10-16 02:05:26.116045", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [win_nodes/kubernetes_patch : Apply nodeselector patch for kube-proxy daemonset] **********************************
Friday 16 October 2020  02:05:18 +0000 (0:00:00.262)       0:07:06.286 ********
changed: [test1] => {"changed": true, "cmd": "/usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf patch ds kube-proxy --namespace=kube-system --type=strategic -p \"$(cat nodeselector-os-linux-patch.json)\"", "delta": "0:00:00.075040", "end": "2020-10-16 02:05:26.456456", "rc": 0, "start": "2020-10-16 02:05:26.381416", "stderr": "", "stderr_lines": [], "stdout": "daemonset.apps/kube-proxy patched (no change)", "stdout_lines": ["daemonset.apps/kube-proxy patched (no change)"]}

TASK [win_nodes/kubernetes_patch : debug] ******************************************************************************
Friday 16 October 2020  02:05:18 +0000 (0:00:00.267)       0:07:06.553 ********
ok: [test1] => {
    "msg": [
        "daemonset.apps/kube-proxy patched (no change)"
    ]
}

TASK [win_nodes/kubernetes_patch : debug] ******************************************************************************
Friday 16 October 2020  02:05:18 +0000 (0:00:00.068)       0:07:06.622 ********
ok: [test1] => {
    "msg": []
}

PLAY [kube-master] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.104)       0:07:06.726 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.041)       0:07:06.767 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.037)       0:07:06.805 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.038)       0:07:06.844 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.042)       0:07:06.886 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.043)       0:07:06.930 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.045)       0:07:06.975 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.042)       0:07:07.018 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.045)       0:07:07.063 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.049)       0:07:07.113 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.040)       0:07:07.154 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:05:19 +0000 (0:00:00.044)       0:07:07.198 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:05:20 +0000 (0:00:00.794)       0:07:07.993 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.783)       0:07:08.776 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes-apps/network_plugin/cilium : Cilium | Start Resources] ************************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.059)       0:07:08.836 ********

TASK [kubernetes-apps/network_plugin/cilium : Cilium | Wait for pods to run] *******************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.094)       0:07:08.930 ********

TASK [kubernetes-apps/network_plugin/calico : calico upgrade complete] *************************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.038)       0:07:08.968 ********

TASK [kubernetes-apps/network_plugin/canal : Canal | Start Resources] **************************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.049)       0:07:09.018 ********

TASK [kubernetes-apps/network_plugin/flannel : Flannel | Start Resources] **********************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.099)       0:07:09.117 ********

TASK [kubernetes-apps/network_plugin/flannel : Flannel | Wait for flannel subnet.env file presence] ********************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.053)       0:07:09.171 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Create Kubernetes resources] ************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.045)       0:07:09.217 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Wait for netmaster] *********************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.053)       0:07:09.270 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Get global configuration] ***************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.038)       0:07:09.308 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Set contiv_global_config] ***************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.039)       0:07:09.348 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Set global forwarding mode] *************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.038)       0:07:09.386 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Set global fabric mode] *****************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.045)       0:07:09.432 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Set peer hostname] **********************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.046)       0:07:09.478 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Get BGP configuration] ******************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.057)       0:07:09.535 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Configure peering with router(s)] *******************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.043)       0:07:09.579 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Get existing networks] ******************************************
Friday 16 October 2020  02:05:21 +0000 (0:00:00.039)       0:07:09.619 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Create networks] ************************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.039)       0:07:09.658 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Check if default group exists] **********************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.039)       0:07:09.698 ********

TASK [kubernetes-apps/network_plugin/contiv : Contiv | Create default group] *******************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.038)       0:07:09.737 ********

TASK [kubernetes-apps/network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.040)       0:07:09.778 ********

TASK [kubernetes-apps/network_plugin/cni : CNI | Copy cni plugins] *****************************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.040)       0:07:09.819 ********

TASK [kubernetes-apps/network_plugin/kube-ovn : Kube-OVN | Start Resources] ********************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.044)       0:07:09.864 ********

TASK [kubernetes-apps/network_plugin/weave : Weave | Start Resources] **************************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.066)       0:07:09.930 ********

TASK [kubernetes-apps/network_plugin/weave : Weave | Wait for Weave to become available] *******************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.037)       0:07:09.967 ********

TASK [kubernetes-apps/network_plugin/kube-router : kube-router | Start Resources] **************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.039)       0:07:10.007 ********

TASK [kubernetes-apps/network_plugin/kube-router : kube-router | Wait for kube-router pods to be ready] ****************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.038)       0:07:10.045 ********

TASK [kubernetes-apps/network_plugin/multus : Multus | Start resources] ************************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.038)       0:07:10.084 ********

TASK [policy_controller/calico : Set cert dir] *************************************************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.075)       0:07:10.159 ********

TASK [policy_controller/calico : Create calico-kube-controllers manifests] *********************************************
Friday 16 October 2020  02:05:22 +0000 (0:00:00.049)       0:07:10.209 ********
changed: [test1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-controllers.yml', 'type': 'deployment'}) => {"changed": true, "checksum": "20421ded5ea871af0ccbc75d0577d45743bb8780", "dest": "/etc/kubernetes/calico-kube-controllers.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-controllers.yml", "name": "calico-kube-controllers", "type": "deployment"}, "md5sum": "fda3d9754d4caee4c52f65c4e9076b0c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1904, "src": "/root/.ansible/tmp/ansible-tmp-1602813922.6314723-72402245614921/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-sa.yml', 'type': 'sa'}) => {"changed": true, "checksum": "9b599bf59cbdd85628410da40ac05a01f7985d1b", "dest": "/etc/kubernetes/calico-kube-sa.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-sa.yml", "name": "calico-kube-controllers", "type": "sa"}, "md5sum": "a14e9c090943c566dddb4a0f25e3e03b", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 159, "src": "/root/.ansible/tmp/ansible-tmp-1602813923.138402-247597178109822/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-cr.yml', 'type': 'clusterrole'}) => {"changed": true, "checksum": "328b854512a0ae28be6492554a7fa187e5e5cc14", "dest": "/etc/kubernetes/calico-kube-cr.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-cr.yml", "name": "calico-kube-controllers", "type": "clusterrole"}, "md5sum": "f8b36b96ee79b9f9ca16c2758dfa1ab1", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 446, "src": "/root/.ansible/tmp/ansible-tmp-1602813923.5860813-274343987804070/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-crb.yml', 'type': 'clusterrolebinding'}) => {"changed": true, "checksum": "a0ab18747c1c4701bf329d27e1442e006709c1fb", "dest": "/etc/kubernetes/calico-kube-crb.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-crb.yml", "name": "calico-kube-controllers", "type": "clusterrolebinding"}, "md5sum": "56279f57f711565a8a3e4411232f51d1", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 306, "src": "/root/.ansible/tmp/ansible-tmp-1602813924.1385005-181299239905953/source", "state": "file", "uid": 0}

TASK [policy_controller/calico : Start of Calico kube controllers] *****************************************************
Friday 16 October 2020  02:05:24 +0000 (0:00:02.183)       0:07:12.392 ********
ok: [test1] => (item=calico-kube-controllers.yml) => {"changed": false, "item": {"changed": true, "checksum": "20421ded5ea871af0ccbc75d0577d45743bb8780", "dest": "/etc/kubernetes/calico-kube-controllers.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-controllers.yml.j2", "attributes": null, "backup": false, "checksum": "20421ded5ea871af0ccbc75d0577d45743bb8780", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-kube-controllers.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813922.6314723-72402245614921/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-kube-controllers.yml", "name": "calico-kube-controllers", "type": "deployment"}, "md5sum": "fda3d9754d4caee4c52f65c4e9076b0c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1904, "src": "/root/.ansible/tmp/ansible-tmp-1602813922.6314723-72402245614921/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/calico-kube-controllers created"}
ok: [test1] => (item=calico-kube-sa.yml) => {"changed": false, "item": {"changed": true, "checksum": "9b599bf59cbdd85628410da40ac05a01f7985d1b", "dest": "/etc/kubernetes/calico-kube-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-sa.yml.j2", "attributes": null, "backup": false, "checksum": "9b599bf59cbdd85628410da40ac05a01f7985d1b", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-kube-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813923.138402-247597178109822/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-kube-sa.yml", "name": "calico-kube-controllers", "type": "sa"}, "md5sum": "a14e9c090943c566dddb4a0f25e3e03b", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 159, "src": "/root/.ansible/tmp/ansible-tmp-1602813923.138402-247597178109822/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/calico-kube-controllers created"}
ok: [test1] => (item=calico-kube-cr.yml) => {"changed": false, "item": {"changed": true, "checksum": "328b854512a0ae28be6492554a7fa187e5e5cc14", "dest": "/etc/kubernetes/calico-kube-cr.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-cr.yml.j2", "attributes": null, "backup": false, "checksum": "328b854512a0ae28be6492554a7fa187e5e5cc14", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-kube-cr.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813923.5860813-274343987804070/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-kube-cr.yml", "name": "calico-kube-controllers", "type": "clusterrole"}, "md5sum": "f8b36b96ee79b9f9ca16c2758dfa1ab1", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 446, "src": "/root/.ansible/tmp/ansible-tmp-1602813923.5860813-274343987804070/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created"}
ok: [test1] => (item=calico-kube-crb.yml) => {"changed": false, "item": {"changed": true, "checksum": "a0ab18747c1c4701bf329d27e1442e006709c1fb", "dest": "/etc/kubernetes/calico-kube-crb.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-crb.yml.j2", "attributes": null, "backup": false, "checksum": "a0ab18747c1c4701bf329d27e1442e006709c1fb", "content": null, "delimiter": null, "dest": "/etc/kubernetes/calico-kube-crb.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813924.1385005-181299239905953/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "calico-kube-crb.yml", "name": "calico-kube-controllers", "type": "clusterrolebinding"}, "md5sum": "56279f57f711565a8a3e4411232f51d1", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 306, "src": "/root/.ansible/tmp/ansible-tmp-1602813924.1385005-181299239905953/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created"}

TASK [policy_controller/calico : Set cert dir] *************************************************************************
Friday 16 October 2020  02:05:26 +0000 (0:00:01.387)       0:07:13.780 ********

TASK [policy_controller/calico : Create calico-kube-controllers manifests] *********************************************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.038)       0:07:13.819 ********

TASK [policy_controller/calico : Start of Calico kube controllers] *****************************************************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.069)       0:07:13.888 ********

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create addon dir] ******************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.073)       0:07:13.961 ********

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Templates list] ********************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.035)       0:07:13.997 ********

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Append extra templates to NGINX Ingress Templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:26 +0000 (0:00:00.038)       0:07:14.035 ********

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create manifests] ******************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.037)       0:07:14.073 ********

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Apply manifests] *******************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.041)       0:07:14.114 ********

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Remove legacy addon dir and manifests] **********
Friday 16 October 2020  02:05:26 +0000 (0:00:00.041)       0:07:14.155 ********

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Remove legacy namespace] ************************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.036)       0:07:14.192 ********

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Create addon dir] *******************************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.037)       0:07:14.230 ********

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Create manifests] *******************************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.036)       0:07:14.266 ********

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Apply manifests] ********************************
Friday 16 October 2020  02:05:26 +0000 (0:00:00.090)       0:07:14.357 ********

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Ensure base dir is created on all hosts] ***
Friday 16 October 2020  02:05:26 +0000 (0:00:00.126)       0:07:14.483 ********

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Create addon dir] *****
Friday 16 October 2020  02:05:26 +0000 (0:00:00.041)       0:07:14.524 ********

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Templates list] *******
Friday 16 October 2020  02:05:26 +0000 (0:00:00.035)       0:07:14.560 ********

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Insert extra templates to Local Volume Provisioner templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:26 +0000 (0:00:00.037)       0:07:14.597 ********

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Create manifests] *****
Friday 16 October 2020  02:05:26 +0000 (0:00:00.036)       0:07:14.633 ********

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Apply manifests] ******
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:14.672 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Remove legacy addon dir and manifests] ***
Friday 16 October 2020  02:05:27 +0000 (0:00:00.037)       0:07:14.709 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Remove legacy namespace] **********
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:14.746 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Remove legacy storageclass] *******
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:14.783 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Create addon dir] *****************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:14.820 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Templates list] *******************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:14.858 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Append extra templates to CephFS Provisioner Templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:14.894 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Create manifests] *****************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:14.930 ********

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Apply manifests] ******************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.045)       0:07:14.976 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Remove legacy addon dir and manifests] ***
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:15.014 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Remove legacy namespace] ****************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:15.052 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Remove legacy storageclass] *************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:15.090 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Create addon dir] ***********************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.037)       0:07:15.128 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Templates list] *************************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:15.164 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Append extra templates to RBD Provisioner Templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:27 +0000 (0:00:00.037)       0:07:15.201 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Create manifests] ***********************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:15.238 ********

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Apply manifests] ************************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.039)       0:07:15.278 ********

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Create addon dir] *********
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:15.316 ********

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Create claim root dir] ****
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:15.352 ********

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Render Template] **********
Friday 16 October 2020  02:05:27 +0000 (0:00:00.037)       0:07:15.389 ********

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Insert extra templates to Local Path Provisioner templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:27 +0000 (0:00:00.035)       0:07:15.425 ********

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Create manifests] *********
Friday 16 October 2020  02:05:27 +0000 (0:00:00.036)       0:07:15.461 ********

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Apply manifests] **********
Friday 16 October 2020  02:05:27 +0000 (0:00:00.037)       0:07:15.499 ********

PLAY [kube-master] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.073)       0:07:15.572 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.038)       0:07:15.611 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:05:27 +0000 (0:00:00.039)       0:07:15.650 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.039)       0:07:15.690 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.043)       0:07:15.733 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.043)       0:07:15.777 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.047)       0:07:15.824 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.039)       0:07:15.864 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.039)       0:07:15.903 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.038)       0:07:15.942 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.039)       0:07:15.982 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:05:28 +0000 (0:00:00.038)       0:07:16.020 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:05:29 +0000 (0:00:00.763)       0:07:16.783 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:05:29 +0000 (0:00:00.758)       0:07:17.542 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Wait for kube-apiserver] *********************************************
Friday 16 October 2020  02:05:29 +0000 (0:00:00.073)       0:07:17.616 ********
ok: [test1] => {"attempts": 1, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Fri, 16 Oct 2020 02:05:37 GMT", "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff"}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm CoreDNS] **********************************************
Friday 16 October 2020  02:05:30 +0000 (0:00:00.405)       0:07:18.021 ********
ok: [test1] => {"changed": false, "msg": "success: "}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm Kube-DNS service] *************************************
Friday 16 October 2020  02:05:30 +0000 (0:00:00.286)       0:07:18.307 ********
ok: [test1] => {"changed": false, "msg": "success: "}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS Template] *******************************************
Friday 16 October 2020  02:05:30 +0000 (0:00:00.289)       0:07:18.596 ********
changed: [test1] => (item={'name': 'coredns', 'module': 'template', 'file': 'coredns-config.yml', 'type': 'configmap'}) => {"changed": true, "checksum": "edcb58bcd9fb8ef401d141b2da7811101ed41c3c", "dest": "/etc/kubernetes/coredns-config.yml", "gid": 0, "group": "root", "item": {"file": "coredns-config.yml", "module": "template", "name": "coredns", "type": "configmap"}, "md5sum": "6751e2bc83217b62104483f5097b3b59", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 558, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.0257564-15767339226695/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'coredns', 'module': 'copy', 'file': 'coredns-sa.yml', 'type': 'sa'}) => {"changed": true, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "dest": "/etc/kubernetes/coredns-sa.yml", "gid": 0, "group": "root", "item": {"file": "coredns-sa.yml", "module": "copy", "name": "coredns", "type": "sa"}, "md5sum": "bfec6ec350bf47d850c62497fed4a879", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.4371457-961428678486/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'coredns', 'module': 'template', 'file': 'coredns-deployment.yml', 'type': 'deployment'}) => {"changed": true, "checksum": "d3f38955a4c8a5977c6319e2a7a1b89d4257e229", "dest": "/etc/kubernetes/coredns-deployment.yml", "gid": 0, "group": "root", "item": {"file": "coredns-deployment.yml", "module": "template", "name": "coredns", "type": "deployment"}, "md5sum": "213dc4247bcc222d93f95c51cad765e5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 3154, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.8320537-187063511336129/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'coredns', 'module': 'template', 'file': 'coredns-svc.yml', 'type': 'svc'}) => {"changed": true, "checksum": "8aa1dc035a9c73b1b50ef4f3227632df34917793", "dest": "/etc/kubernetes/coredns-svc.yml", "gid": 0, "group": "root", "item": {"file": "coredns-svc.yml", "module": "template", "name": "coredns", "type": "svc"}, "md5sum": "323b6c03f4a9989d5364850080160cee", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 554, "src": "/root/.ansible/tmp/ansible-tmp-1602813932.230743-151104478083214/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'coredns', 'module': 'copy', 'file': 'coredns-clusterrole.yml', 'type': 'clusterrole'}) => {"changed": true, "checksum": "423ea49425b12e5470028a9813d9996523a656b0", "dest": "/etc/kubernetes/coredns-clusterrole.yml", "gid": 0, "group": "root", "item": {"file": "coredns-clusterrole.yml", "module": "copy", "name": "coredns", "type": "clusterrole"}, "md5sum": "7d445083884884bc8c459ea69329fab5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 431, "src": "/root/.ansible/tmp/ansible-tmp-1602813932.6384263-201149806569006/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'coredns', 'module': 'copy', 'file': 'coredns-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) => {"changed": true, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "gid": 0, "group": "root", "item": {"file": "coredns-clusterrolebinding.yml", "module": "copy", "name": "coredns", "type": "clusterrolebinding"}, "md5sum": "751c8b9b4b4de0d14eae5d3f4fc1f208", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 451, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.0303366-38352490060086/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'dns-autoscaler', 'module': 'copy', 'file': 'dns-autoscaler-sa.yml', 'type': 'sa'}) => {"changed": true, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-sa.yml", "module": "copy", "name": "dns-autoscaler", "type": "sa"}, "md5sum": "a111f82d5400ea2f9af53e9d6e627b6c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 763, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.4330382-114046608941694/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'dns-autoscaler', 'module': 'copy', 'file': 'dns-autoscaler-clusterrole.yml', 'type': 'clusterrole'}) => {"changed": true, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-clusterrole.yml", "module": "copy", "name": "dns-autoscaler", "type": "clusterrole"}, "md5sum": "859012d2b25325835b044a62cc0226bc", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1150, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.8547015-238038922736976/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'dns-autoscaler', 'module': 'copy', 'file': 'dns-autoscaler-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) => {"changed": true, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-clusterrolebinding.yml", "module": "copy", "name": "dns-autoscaler", "type": "clusterrolebinding"}, "md5sum": "7f8769d1e1b5cd33313edea39550fb6a", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 959, "src": "/root/.ansible/tmp/ansible-tmp-1602813934.2960544-229240485123728/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'dns-autoscaler', 'module': 'template', 'file': 'dns-autoscaler.yml', 'type': 'deployment'}) => {"changed": true, "checksum": "3eb662a6b587ddb3193a9888a39668241881558f", "dest": "/etc/kubernetes/dns-autoscaler.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler.yml", "module": "template", "name": "dns-autoscaler", "type": "deployment"}, "md5sum": "8f2b6eb7c8af1b5738d778435cfc2dc4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 2590, "src": "/root/.ansible/tmp/ansible-tmp-1602813934.714667-147483526949211/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down Secondary CoreDNS Template] *********************************
Friday 16 October 2020  02:05:35 +0000 (0:00:04.172)       0:07:22.769 ********

TASK [kubernetes-apps/ansible : Kubernetes Apps | set up necessary nodelocaldns parameters] ****************************
Friday 16 October 2020  02:05:35 +0000 (0:00:00.100)       0:07:22.869 ********
ok: [test1] => {"ansible_facts": {"clusterIP": "10.233.0.3", "secondaryclusterIP": "10.233.0.4"}, "changed": false}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns Template] **************************************
Friday 16 October 2020  02:05:35 +0000 (0:00:00.086)       0:07:22.955 ********
changed: [test1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-config.yml', 'type': 'configmap'}) => {"changed": true, "checksum": "7f596d25085a985b19f569ce893494e4c25a6fdd", "dest": "/etc/kubernetes/nodelocaldns-config.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-config.yml", "name": "nodelocaldns", "type": "configmap"}, "md5sum": "e9fe4f4535a8d30ec7ffc40f8f3cf750", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1035, "src": "/root/.ansible/tmp/ansible-tmp-1602813935.381092-125883740509096/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-sa.yml', 'type': 'sa'}) => {"changed": true, "checksum": "f07d79d01f736ef0b03b521aed3fd6ecc00bf715", "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-sa.yml", "name": "nodelocaldns", "type": "sa"}, "md5sum": "37aeba6c0e893c8b795c184857d5a722", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 191, "src": "/root/.ansible/tmp/ansible-tmp-1602813935.8173778-39066577247795/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-daemonset.yml', 'type': 'daemonset'}) => {"changed": true, "checksum": "c6b8a96a37603e02d7f7322cc5747a1d254917bb", "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-daemonset.yml", "name": "nodelocaldns", "type": "daemonset"}, "md5sum": "1a7d25d306784ac9d884ac84f2d11829", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 2659, "src": "/root/.ansible/tmp/ansible-tmp-1602813936.2318628-164420970466100/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Resources] *****************************************************
Friday 16 October 2020  02:05:36 +0000 (0:00:01.309)       0:07:24.265 ********
ok: [test1] => (item=coredns-config.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "edcb58bcd9fb8ef401d141b2da7811101ed41c3c", "dest": "/etc/kubernetes/coredns-config.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-config.yml.j2", "attributes": null, "backup": false, "checksum": "edcb58bcd9fb8ef401d141b2da7811101ed41c3c", "content": null, "delimiter": null, "dest": "/etc/kubernetes/coredns-config.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.0257564-15767339226695/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "coredns-config.yml", "module": "template", "name": "coredns", "type": "configmap"}, "md5sum": "6751e2bc83217b62104483f5097b3b59", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 558, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.0257564-15767339226695/source", "state": "file", "uid": 0}, "msg": "success: configmap/coredns created"}
ok: [test1] => (item=coredns-sa.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "dest": "/etc/kubernetes/coredns-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-sa.yml", "attributes": null, "backup": false, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "content": null, "delimiter": null, "dest": "/etc/kubernetes/coredns-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.4371457-961428678486/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "coredns-sa.yml", "module": "copy", "name": "coredns", "type": "sa"}, "md5sum": "bfec6ec350bf47d850c62497fed4a879", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.4371457-961428678486/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/coredns created"}
ok: [test1] => (item=coredns-deployment.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "d3f38955a4c8a5977c6319e2a7a1b89d4257e229", "dest": "/etc/kubernetes/coredns-deployment.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-deployment.yml.j2", "attributes": null, "backup": false, "checksum": "d3f38955a4c8a5977c6319e2a7a1b89d4257e229", "content": null, "delimiter": null, "dest": "/etc/kubernetes/coredns-deployment.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.8320537-187063511336129/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "coredns-deployment.yml", "module": "template", "name": "coredns", "type": "deployment"}, "md5sum": "213dc4247bcc222d93f95c51cad765e5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 3154, "src": "/root/.ansible/tmp/ansible-tmp-1602813931.8320537-187063511336129/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/coredns created"}
ok: [test1] => (item=coredns-svc.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "8aa1dc035a9c73b1b50ef4f3227632df34917793", "dest": "/etc/kubernetes/coredns-svc.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-svc.yml.j2", "attributes": null, "backup": false, "checksum": "8aa1dc035a9c73b1b50ef4f3227632df34917793", "content": null, "delimiter": null, "dest": "/etc/kubernetes/coredns-svc.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813932.230743-151104478083214/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "coredns-svc.yml", "module": "template", "name": "coredns", "type": "svc"}, "md5sum": "323b6c03f4a9989d5364850080160cee", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 554, "src": "/root/.ansible/tmp/ansible-tmp-1602813932.230743-151104478083214/source", "state": "file", "uid": 0}, "msg": "success: service/coredns created"}
ok: [test1] => (item=coredns-clusterrole.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "423ea49425b12e5470028a9813d9996523a656b0", "dest": "/etc/kubernetes/coredns-clusterrole.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-clusterrole.yml", "attributes": null, "backup": false, "checksum": "423ea49425b12e5470028a9813d9996523a656b0", "content": null, "delimiter": null, "dest": "/etc/kubernetes/coredns-clusterrole.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813932.6384263-201149806569006/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "coredns-clusterrole.yml", "module": "copy", "name": "coredns", "type": "clusterrole"}, "md5sum": "7d445083884884bc8c459ea69329fab5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 431, "src": "/root/.ansible/tmp/ansible-tmp-1602813932.6384263-201149806569006/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:coredns created"}
ok: [test1] => (item=coredns-clusterrolebinding.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-clusterrolebinding.yml", "attributes": null, "backup": false, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "content": null, "delimiter": null, "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.0303366-38352490060086/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "coredns-clusterrolebinding.yml", "module": "copy", "name": "coredns", "type": "clusterrolebinding"}, "md5sum": "751c8b9b4b4de0d14eae5d3f4fc1f208", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 451, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.0303366-38352490060086/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:coredns created"}
ok: [test1] => (item=dns-autoscaler-sa.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler-sa.yml", "attributes": null, "backup": false, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "content": null, "delimiter": null, "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.4330382-114046608941694/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "dns-autoscaler-sa.yml", "module": "copy", "name": "dns-autoscaler", "type": "sa"}, "md5sum": "a111f82d5400ea2f9af53e9d6e627b6c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 763, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.4330382-114046608941694/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/dns-autoscaler created"}
ok: [test1] => (item=dns-autoscaler-clusterrole.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler-clusterrole.yml", "attributes": null, "backup": false, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "content": null, "delimiter": null, "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.8547015-238038922736976/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "dns-autoscaler-clusterrole.yml", "module": "copy", "name": "dns-autoscaler", "type": "clusterrole"}, "md5sum": "859012d2b25325835b044a62cc0226bc", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1150, "src": "/root/.ansible/tmp/ansible-tmp-1602813933.8547015-238038922736976/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:dns-autoscaler created"}
ok: [test1] => (item=dns-autoscaler-clusterrolebinding.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler-clusterrolebinding.yml", "attributes": null, "backup": false, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "content": null, "delimiter": null, "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813934.2960544-229240485123728/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "dns-autoscaler-clusterrolebinding.yml", "module": "copy", "name": "dns-autoscaler", "type": "clusterrolebinding"}, "md5sum": "7f8769d1e1b5cd33313edea39550fb6a", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 959, "src": "/root/.ansible/tmp/ansible-tmp-1602813934.2960544-229240485123728/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:dns-autoscaler created"}
ok: [test1] => (item=dns-autoscaler.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "3eb662a6b587ddb3193a9888a39668241881558f", "dest": "/etc/kubernetes/dns-autoscaler.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler.yml.j2", "attributes": null, "backup": false, "checksum": "3eb662a6b587ddb3193a9888a39668241881558f", "content": null, "delimiter": null, "dest": "/etc/kubernetes/dns-autoscaler.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813934.714667-147483526949211/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "dns-autoscaler.yml", "module": "template", "name": "dns-autoscaler", "type": "deployment"}, "md5sum": "8f2b6eb7c8af1b5738d778435cfc2dc4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 2590, "src": "/root/.ansible/tmp/ansible-tmp-1602813934.714667-147483526949211/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/dns-autoscaler created"}
ok: [test1] => (item=nodelocaldns-config.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "7f596d25085a985b19f569ce893494e4c25a6fdd", "dest": "/etc/kubernetes/nodelocaldns-config.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "nodelocaldns-config.yml.j2", "attributes": null, "backup": false, "checksum": "7f596d25085a985b19f569ce893494e4c25a6fdd", "content": null, "delimiter": null, "dest": "/etc/kubernetes/nodelocaldns-config.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813935.381092-125883740509096/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "nodelocaldns-config.yml", "name": "nodelocaldns", "type": "configmap"}, "md5sum": "e9fe4f4535a8d30ec7ffc40f8f3cf750", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1035, "src": "/root/.ansible/tmp/ansible-tmp-1602813935.381092-125883740509096/source", "state": "file", "uid": 0}, "msg": "success: configmap/nodelocaldns created"}
ok: [test1] => (item=nodelocaldns-sa.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "f07d79d01f736ef0b03b521aed3fd6ecc00bf715", "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "nodelocaldns-sa.yml.j2", "attributes": null, "backup": false, "checksum": "f07d79d01f736ef0b03b521aed3fd6ecc00bf715", "content": null, "delimiter": null, "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813935.8173778-39066577247795/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "nodelocaldns-sa.yml", "name": "nodelocaldns", "type": "sa"}, "md5sum": "37aeba6c0e893c8b795c184857d5a722", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 191, "src": "/root/.ansible/tmp/ansible-tmp-1602813935.8173778-39066577247795/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/nodelocaldns created"}
ok: [test1] => (item=nodelocaldns-daemonset.yml) => {"attempts": 1, "changed": false, "item": {"changed": true, "checksum": "c6b8a96a37603e02d7f7322cc5747a1d254917bb", "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "nodelocaldns-daemonset.yml.j2", "attributes": null, "backup": false, "checksum": "c6b8a96a37603e02d7f7322cc5747a1d254917bb", "content": null, "delimiter": null, "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813936.2318628-164420970466100/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "nodelocaldns-daemonset.yml", "name": "nodelocaldns", "type": "daemonset"}, "md5sum": "1a7d25d306784ac9d884ac84f2d11829", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 2659, "src": "/root/.ansible/tmp/ansible-tmp-1602813936.2318628-164420970466100/source", "state": "file", "uid": 0}, "msg": "success: daemonset.apps/nodelocaldns created"}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Netchecker Templates list] *******************************************
Friday 16 October 2020  02:05:40 +0000 (0:00:04.379)       0:07:28.644 ********

TASK [kubernetes-apps/ansible : Kubernetes Apps | Append extra templates to Netchecker Templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:41 +0000 (0:00:00.042)       0:07:28.686 ********

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down Netchecker Template] ****************************************
Friday 16 October 2020  02:05:41 +0000 (0:00:00.039)       0:07:28.726 ********

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Netchecker Resources] ******************************************
Friday 16 October 2020  02:05:41 +0000 (0:00:00.043)       0:07:28.769 ********

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay down dashboard template] *****************************************
Friday 16 October 2020  02:05:41 +0000 (0:00:00.042)       0:07:28.812 ********
changed: [test1] => (item={'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}) => {"changed": true, "checksum": "5dcf0101b6acb6134d39830c8b229a07adaa037b", "dest": "/etc/kubernetes/dashboard.yml", "gid": 0, "group": "root", "item": {"file": "dashboard.yml", "name": "kubernetes-dashboard", "type": "deploy"}, "md5sum": "0de8af61bd6d5e8e808e41781751bd61", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 6164, "src": "/root/.ansible/tmp/ansible-tmp-1602813941.2290974-240307607665853/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start dashboard] *****************************************************
Friday 16 October 2020  02:05:41 +0000 (0:00:00.581)       0:07:29.394 ********
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813941.2290974-240307607665853/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/dashboard.yml', 'checksum': '5dcf0101b6acb6134d39830c8b229a07adaa037b', 'md5sum': '0de8af61bd6d5e8e808e41781751bd61', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'dashboard.yml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/dashboard.yml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813941.2290974-240307607665853/source', 'checksum': '5dcf0101b6acb6134d39830c8b229a07adaa037b', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 6164, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}}) => {"changed": false, "item": {"changed": true, "checksum": "5dcf0101b6acb6134d39830c8b229a07adaa037b", "dest": "/etc/kubernetes/dashboard.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dashboard.yml.j2", "attributes": null, "backup": false, "checksum": "5dcf0101b6acb6134d39830c8b229a07adaa037b", "content": null, "delimiter": null, "dest": "/etc/kubernetes/dashboard.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813941.2290974-240307607665853/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "dashboard.yml", "name": "kubernetes-dashboard", "type": "deploy"}, "md5sum": "0de8af61bd6d5e8e808e41781751bd61", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 6164, "src": "/root/.ansible/tmp/ansible-tmp-1602813941.2290974-240307607665853/source", "state": "file", "uid": 0}, "msg": "success: secret/kubernetes-dashboard-certs created secret/kubernetes-dashboard-csrf created secret/kubernetes-dashboard-key-holder created configmap/kubernetes-dashboard-settings created serviceaccount/kubernetes-dashboard created role.rbac.authorization.k8s.io/kubernetes-dashboard-minimal created rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-minimal created clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard-anonymous created clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-anonymous created deployment.apps/kubernetes-dashboard created service/kubernetes-dashboard created"}

TASK [kubernetes-apps/helm : Helm | Make sure HELM_HOME directory exists] **********************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.509)       0:07:29.903 ********

TASK [kubernetes-apps/helm : Helm | Set up helm launcher] **************************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.036)       0:07:29.940 ********

TASK [kubernetes-apps/helm : Helm | Lay Down Helm Manifests (RBAC)] ****************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.037)       0:07:29.977 ********

TASK [kubernetes-apps/helm : Helm | Apply Helm Manifests (RBAC)] *******************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.060)       0:07:30.037 ********

TASK [kubernetes-apps/helm : Helm | Set up TLS] ************************************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.058)       0:07:30.095 ********

TASK [kubernetes-apps/helm : Helm | Install client on all masters] *****************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.039)       0:07:30.134 ********

TASK [kubernetes-apps/helm : Helm | Install/upgrade helm] **************************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.035)       0:07:30.170 ********

TASK [kubernetes-apps/helm : Helm | Force apply tiller overrides if necessary] *****************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.037)       0:07:30.207 ********

TASK [kubernetes-apps/helm : Make sure bash_completion.d folder exists] ************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.036)       0:07:30.244 ********

TASK [kubernetes-apps/helm : Helm | Set up bash completion] ************************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.038)       0:07:30.283 ********

TASK [kubernetes-apps/registry : Registry | Create addon dir] **********************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.042)       0:07:30.325 ********

TASK [kubernetes-apps/registry : Registry | Templates list] ************************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.037)       0:07:30.363 ********

TASK [kubernetes-apps/registry : Registry | Append extra templates to Registry Templates list for PodSecurityPolicy] ***
Friday 16 October 2020  02:05:42 +0000 (0:00:00.037)       0:07:30.400 ********

TASK [kubernetes-apps/registry : Registry | Create manifests] **********************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.036)       0:07:30.436 ********

TASK [kubernetes-apps/registry : Registry | Apply manifests] ***********************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.039)       0:07:30.476 ********

TASK [kubernetes-apps/registry : Registry | Create PVC manifests] ******************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.041)       0:07:30.517 ********

TASK [kubernetes-apps/registry : Registry | Apply PVC manifests] *******************************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.045)       0:07:30.563 ********

TASK [kubernetes-apps/metrics_server : Check all masters are node or not] **********************************************
Friday 16 October 2020  02:05:42 +0000 (0:00:00.043)       0:07:30.606 ********
ok: [test1] => {"ansible_facts": {"masters_are_not_tainted": true}, "changed": false}

TASK [kubernetes-apps/metrics_server : Metrics Server | Delete addon dir] **********************************************
Friday 16 October 2020  02:05:43 +0000 (0:00:00.086)       0:07:30.693 ********
ok: [test1] => {"changed": false, "path": "/etc/kubernetes/addons/metrics_server", "state": "absent"}

TASK [kubernetes-apps/metrics_server : Metrics Server | Create addon dir] **********************************************
Friday 16 October 2020  02:05:43 +0000 (0:00:00.209)       0:07:30.903 ********
changed: [test1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/addons/metrics_server", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 0}

TASK [kubernetes-apps/metrics_server : Metrics Server | Templates list] ************************************************
Friday 16 October 2020  02:05:43 +0000 (0:00:00.216)       0:07:31.119 ********
ok: [test1] => {"ansible_facts": {"metrics_server_templates": [{"file": "auth-delegator.yaml", "name": "auth-delegator", "type": "clusterrolebinding"}, {"file": "auth-reader.yaml", "name": "auth-reader", "type": "rolebinding"}, {"file": "metrics-server-cm.yaml", "name": "metrics-server-cm", "type": "cm"}, {"file": "metrics-server-sa.yaml", "name": "metrics-server-sa", "type": "sa"}, {"file": "metrics-server-deployment.yaml", "name": "metrics-server-deployment", "type": "deploy"}, {"file": "metrics-server-service.yaml", "name": "metrics-server-service", "type": "service"}, {"file": "metrics-apiservice.yaml", "name": "metrics-apiservice", "type": "service"}, {"file": "resource-reader-clusterrolebinding.yaml", "name": "resource-reader-clusterrolebinding", "type": "clusterrolebinding"}, {"file": "resource-reader.yaml", "name": "resource-reader", "type": "clusterrole"}]}, "changed": false}

TASK [kubernetes-apps/metrics_server : Metrics Server | Create manifests] **********************************************
Friday 16 October 2020  02:05:43 +0000 (0:00:00.082)       0:07:31.202 ********
changed: [test1] => (item={'name': 'auth-delegator', 'file': 'auth-delegator.yaml', 'type': 'clusterrolebinding'}) => {"changed": true, "checksum": "659a837179839afcde4c9b93fca9492c3bf32675", "dest": "/etc/kubernetes/addons/metrics_server/auth-delegator.yaml", "gid": 0, "group": "root", "item": {"file": "auth-delegator.yaml", "name": "auth-delegator", "type": "clusterrolebinding"}, "md5sum": "6bd8986d867eb19fc2ff075a1f7d86b5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 398, "src": "/root/.ansible/tmp/ansible-tmp-1602813943.6226728-165733405439111/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'auth-reader', 'file': 'auth-reader.yaml', 'type': 'rolebinding'}) => {"changed": true, "checksum": "41c57e52d8ef12e55ac4be62844860fa48b8426f", "dest": "/etc/kubernetes/addons/metrics_server/auth-reader.yaml", "gid": 0, "group": "root", "item": {"file": "auth-reader.yaml", "name": "auth-reader", "type": "rolebinding"}, "md5sum": "41243a83ee5429f6578d0976fd55b234", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 419, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.1334546-223748596411832/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'metrics-server-cm', 'file': 'metrics-server-cm.yaml', 'type': 'cm'}) => {"changed": true, "checksum": "69297863f20134327ef665f5422aff20311148b0", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-cm.yaml", "gid": 0, "group": "root", "item": {"file": "metrics-server-cm.yaml", "name": "metrics-server-cm", "type": "cm"}, "md5sum": "584bc484dde3ac16101e69339ebc74a4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 299, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.541982-204447810057364/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'metrics-server-sa', 'file': 'metrics-server-sa.yaml', 'type': 'sa'}) => {"changed": true, "checksum": "34b5e0adcda2dc871146fc5c237e69d9d1001574", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml", "gid": 0, "group": "root", "item": {"file": "metrics-server-sa.yaml", "name": "metrics-server-sa", "type": "sa"}, "md5sum": "504f7181a6f02a74e0e2f9741ebf86e7", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 197, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.9370933-160590188197449/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'metrics-server-deployment', 'file': 'metrics-server-deployment.yaml', 'type': 'deploy'}) => {"changed": true, "checksum": "00f94173fbd80df9ee5986420ee782b85c21dc59", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml", "gid": 0, "group": "root", "item": {"file": "metrics-server-deployment.yaml", "name": "metrics-server-deployment", "type": "deploy"}, "md5sum": "00bdefa3626cc282c3b8537e02bc84a8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 3476, "src": "/root/.ansible/tmp/ansible-tmp-1602813945.3192496-268674349064405/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'metrics-server-service', 'file': 'metrics-server-service.yaml', 'type': 'service'}) => {"changed": true, "checksum": "4eb51a4b6db97ba72d294593903d113bdfd62d7c", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml", "gid": 0, "group": "root", "item": {"file": "metrics-server-service.yaml", "name": "metrics-server-service", "type": "service"}, "md5sum": "c6789b3864d60f4835cb759a66e2cf13", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 355, "src": "/root/.ansible/tmp/ansible-tmp-1602813945.726535-115537596476028/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'metrics-apiservice', 'file': 'metrics-apiservice.yaml', 'type': 'service'}) => {"changed": true, "checksum": "a8f94684542c51208f243fc11920516c0ea41cc0", "dest": "/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml", "gid": 0, "group": "root", "item": {"file": "metrics-apiservice.yaml", "name": "metrics-apiservice", "type": "service"}, "md5sum": "30f9f8ac4dffe248570b746a0b098365", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 393, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.1094246-205995722683006/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'resource-reader-clusterrolebinding', 'file': 'resource-reader-clusterrolebinding.yaml', 'type': 'clusterrolebinding'}) => {"changed": true, "checksum": "e08f52e4268da3935c1be318a020145b4b7a32ae", "dest": "/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml", "gid": 0, "group": "root", "item": {"file": "resource-reader-clusterrolebinding.yaml", "name": "resource-reader-clusterrolebinding", "type": "clusterrolebinding"}, "md5sum": "bc1dac6225e9cb161fdbc3572d12dad4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 387, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.4971616-85892421813363/source", "state": "file", "uid": 0}
changed: [test1] => (item={'name': 'resource-reader', 'file': 'resource-reader.yaml', 'type': 'clusterrole'}) => {"changed": true, "checksum": "4f97304eb1c77d5c1236db5dfac1aab442e6fc0b", "dest": "/etc/kubernetes/addons/metrics_server/resource-reader.yaml", "gid": 0, "group": "root", "item": {"file": "resource-reader.yaml", "name": "resource-reader", "type": "clusterrole"}, "md5sum": "47c5dab1fd07b81ff1bbe32763393523", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 430, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.8869264-30460434648812/source", "state": "file", "uid": 0}

TASK [kubernetes-apps/metrics_server : Metrics Server | Apply manifests] ***********************************************
Friday 16 October 2020  02:05:47 +0000 (0:00:03.724)       0:07:34.927 ********
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813943.6226728-165733405439111/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/auth-delegator.yaml', 'checksum': '659a837179839afcde4c9b93fca9492c3bf32675', 'md5sum': '6bd8986d867eb19fc2ff075a1f7d86b5', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'auth-delegator.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/auth-delegator.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813943.6226728-165733405439111/source', 'checksum': '659a837179839afcde4c9b93fca9492c3bf32675', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 398, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'auth-delegator', 'file': 'auth-delegator.yaml', 'type': 'clusterrolebinding'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'auth-delegator', 'file': 'auth-delegator.yaml', 'type': 'clusterrolebinding'}}) => {"changed": false, "item": {"changed": true, "checksum": "659a837179839afcde4c9b93fca9492c3bf32675", "dest": "/etc/kubernetes/addons/metrics_server/auth-delegator.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "auth-delegator.yaml.j2", "attributes": null, "backup": false, "checksum": "659a837179839afcde4c9b93fca9492c3bf32675", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/auth-delegator.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813943.6226728-165733405439111/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "auth-delegator.yaml", "name": "auth-delegator", "type": "clusterrolebinding"}, "md5sum": "6bd8986d867eb19fc2ff075a1f7d86b5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 398, "src": "/root/.ansible/tmp/ansible-tmp-1602813943.6226728-165733405439111/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813944.1334546-223748596411832/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/auth-reader.yaml', 'checksum': '41c57e52d8ef12e55ac4be62844860fa48b8426f', 'md5sum': '41243a83ee5429f6578d0976fd55b234', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'auth-reader.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/auth-reader.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813944.1334546-223748596411832/source', 'checksum': '41c57e52d8ef12e55ac4be62844860fa48b8426f', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 419, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'auth-reader', 'file': 'auth-reader.yaml', 'type': 'rolebinding'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'auth-reader', 'file': 'auth-reader.yaml', 'type': 'rolebinding'}}) => {"changed": false, "item": {"changed": true, "checksum": "41c57e52d8ef12e55ac4be62844860fa48b8426f", "dest": "/etc/kubernetes/addons/metrics_server/auth-reader.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "auth-reader.yaml.j2", "attributes": null, "backup": false, "checksum": "41c57e52d8ef12e55ac4be62844860fa48b8426f", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/auth-reader.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.1334546-223748596411832/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "auth-reader.yaml", "name": "auth-reader", "type": "rolebinding"}, "md5sum": "41243a83ee5429f6578d0976fd55b234", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 419, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.1334546-223748596411832/source", "state": "file", "uid": 0}, "msg": "success: rolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813944.541982-204447810057364/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-cm.yaml', 'checksum': '69297863f20134327ef665f5422aff20311148b0', 'md5sum': '584bc484dde3ac16101e69339ebc74a4', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'metrics-server-cm.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-cm.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813944.541982-204447810057364/source', 'checksum': '69297863f20134327ef665f5422aff20311148b0', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 299, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'metrics-server-cm', 'file': 'metrics-server-cm.yaml', 'type': 'cm'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'metrics-server-cm', 'file': 'metrics-server-cm.yaml', 'type': 'cm'}}) => {"changed": false, "item": {"changed": true, "checksum": "69297863f20134327ef665f5422aff20311148b0", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-cm.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "metrics-server-cm.yaml.j2", "attributes": null, "backup": false, "checksum": "69297863f20134327ef665f5422aff20311148b0", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-cm.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.541982-204447810057364/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "metrics-server-cm.yaml", "name": "metrics-server-cm", "type": "cm"}, "md5sum": "584bc484dde3ac16101e69339ebc74a4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 299, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.541982-204447810057364/source", "state": "file", "uid": 0}, "msg": "success: configmap/metrics-server-config created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813944.9370933-160590188197449/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml', 'checksum': '34b5e0adcda2dc871146fc5c237e69d9d1001574', 'md5sum': '504f7181a6f02a74e0e2f9741ebf86e7', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'metrics-server-sa.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813944.9370933-160590188197449/source', 'checksum': '34b5e0adcda2dc871146fc5c237e69d9d1001574', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 197, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'metrics-server-sa', 'file': 'metrics-server-sa.yaml', 'type': 'sa'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'metrics-server-sa', 'file': 'metrics-server-sa.yaml', 'type': 'sa'}}) => {"changed": false, "item": {"changed": true, "checksum": "34b5e0adcda2dc871146fc5c237e69d9d1001574", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "metrics-server-sa.yaml.j2", "attributes": null, "backup": false, "checksum": "34b5e0adcda2dc871146fc5c237e69d9d1001574", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.9370933-160590188197449/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "metrics-server-sa.yaml", "name": "metrics-server-sa", "type": "sa"}, "md5sum": "504f7181a6f02a74e0e2f9741ebf86e7", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 197, "src": "/root/.ansible/tmp/ansible-tmp-1602813944.9370933-160590188197449/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/metrics-server created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813945.3192496-268674349064405/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml', 'checksum': '00f94173fbd80df9ee5986420ee782b85c21dc59', 'md5sum': '00bdefa3626cc282c3b8537e02bc84a8', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'metrics-server-deployment.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813945.3192496-268674349064405/source', 'checksum': '00f94173fbd80df9ee5986420ee782b85c21dc59', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 3476, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'metrics-server-deployment', 'file': 'metrics-server-deployment.yaml', 'type': 'deploy'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'metrics-server-deployment', 'file': 'metrics-server-deployment.yaml', 'type': 'deploy'}}) => {"changed": false, "item": {"changed": true, "checksum": "00f94173fbd80df9ee5986420ee782b85c21dc59", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "metrics-server-deployment.yaml.j2", "attributes": null, "backup": false, "checksum": "00f94173fbd80df9ee5986420ee782b85c21dc59", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813945.3192496-268674349064405/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "metrics-server-deployment.yaml", "name": "metrics-server-deployment", "type": "deploy"}, "md5sum": "00bdefa3626cc282c3b8537e02bc84a8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 3476, "src": "/root/.ansible/tmp/ansible-tmp-1602813945.3192496-268674349064405/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/metrics-server created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813945.726535-115537596476028/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml', 'checksum': '4eb51a4b6db97ba72d294593903d113bdfd62d7c', 'md5sum': 'c6789b3864d60f4835cb759a66e2cf13', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'metrics-server-service.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813945.726535-115537596476028/source', 'checksum': '4eb51a4b6db97ba72d294593903d113bdfd62d7c', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 355, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'metrics-server-service', 'file': 'metrics-server-service.yaml', 'type': 'service'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'metrics-server-service', 'file': 'metrics-server-service.yaml', 'type': 'service'}}) => {"changed": false, "item": {"changed": true, "checksum": "4eb51a4b6db97ba72d294593903d113bdfd62d7c", "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "metrics-server-service.yaml.j2", "attributes": null, "backup": false, "checksum": "4eb51a4b6db97ba72d294593903d113bdfd62d7c", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813945.726535-115537596476028/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "metrics-server-service.yaml", "name": "metrics-server-service", "type": "service"}, "md5sum": "c6789b3864d60f4835cb759a66e2cf13", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 355, "src": "/root/.ansible/tmp/ansible-tmp-1602813945.726535-115537596476028/source", "state": "file", "uid": 0}, "msg": "success: service/metrics-server created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813946.1094246-205995722683006/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml', 'checksum': 'a8f94684542c51208f243fc11920516c0ea41cc0', 'md5sum': '30f9f8ac4dffe248570b746a0b098365', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'metrics-apiservice.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813946.1094246-205995722683006/source', 'checksum': 'a8f94684542c51208f243fc11920516c0ea41cc0', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 393, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'metrics-apiservice', 'file': 'metrics-apiservice.yaml', 'type': 'service'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'metrics-apiservice', 'file': 'metrics-apiservice.yaml', 'type': 'service'}}) => {"changed": false, "item": {"changed": true, "checksum": "a8f94684542c51208f243fc11920516c0ea41cc0", "dest": "/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "metrics-apiservice.yaml.j2", "attributes": null, "backup": false, "checksum": "a8f94684542c51208f243fc11920516c0ea41cc0", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.1094246-205995722683006/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "metrics-apiservice.yaml", "name": "metrics-apiservice", "type": "service"}, "md5sum": "30f9f8ac4dffe248570b746a0b098365", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 393, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.1094246-205995722683006/source", "state": "file", "uid": 0}, "msg": "success: apiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813946.4971616-85892421813363/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml', 'checksum': 'e08f52e4268da3935c1be318a020145b4b7a32ae', 'md5sum': 'bc1dac6225e9cb161fdbc3572d12dad4', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'resource-reader-clusterrolebinding.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813946.4971616-85892421813363/source', 'checksum': 'e08f52e4268da3935c1be318a020145b4b7a32ae', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 387, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'resource-reader-clusterrolebinding', 'file': 'resource-reader-clusterrolebinding.yaml', 'type': 'clusterrolebinding'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'resource-reader-clusterrolebinding', 'file': 'resource-reader-clusterrolebinding.yaml', 'type': 'clusterrolebinding'}}) => {"changed": false, "item": {"changed": true, "checksum": "e08f52e4268da3935c1be318a020145b4b7a32ae", "dest": "/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "resource-reader-clusterrolebinding.yaml.j2", "attributes": null, "backup": false, "checksum": "e08f52e4268da3935c1be318a020145b4b7a32ae", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.4971616-85892421813363/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "resource-reader-clusterrolebinding.yaml", "name": "resource-reader-clusterrolebinding", "type": "clusterrolebinding"}, "md5sum": "bc1dac6225e9cb161fdbc3572d12dad4", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 387, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.4971616-85892421813363/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:metrics-server created"}
ok: [test1] => (item={'diff': [], 'src': '/root/.ansible/tmp/ansible-tmp-1602813946.8869264-30460434648812/source', 'changed': True, 'group': 'root', 'uid': 0, 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader.yaml', 'checksum': '4f97304eb1c77d5c1236db5dfac1aab442e6fc0b', 'md5sum': '47c5dab1fd07b81ff1bbe32763393523', 'owner': 'root', 'state': 'file', 'gid': 0, 'secontext': 'system_u:object_r:etc_t:s0', 'mode': '0644', 'invocation': {'module_args': {'directory_mode': None, 'force': True, 'remote_src': None, '_original_basename': 'resource-reader.yaml.j2', 'owner': None, 'follow': False, 'local_follow': None, 'group': None, 'unsafe_writes': None, 'setype': None, 'content': None, 'serole': None, 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader.yaml', 'selevel': None, 'regexp': None, 'validate': None, 'src': '/root/.ansible/tmp/ansible-tmp-1602813946.8869264-30460434648812/source', 'checksum': '4f97304eb1c77d5c1236db5dfac1aab442e6fc0b', 'seuser': None, 'delimiter': None, 'mode': None, 'attributes': None, 'backup': False}}, 'size': 430, '_ansible_parsed': True, '_ansible_no_log': False, 'failed': False, 'item': {'name': 'resource-reader', 'file': 'resource-reader.yaml', 'type': 'clusterrole'}, '_ansible_item_result': True, '_ansible_ignore_errors': None, '_ansible_item_label': {'name': 'resource-reader', 'file': 'resource-reader.yaml', 'type': 'clusterrole'}}) => {"changed": false, "item": {"changed": true, "checksum": "4f97304eb1c77d5c1236db5dfac1aab442e6fc0b", "dest": "/etc/kubernetes/addons/metrics_server/resource-reader.yaml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "resource-reader.yaml.j2", "attributes": null, "backup": false, "checksum": "4f97304eb1c77d5c1236db5dfac1aab442e6fc0b", "content": null, "delimiter": null, "dest": "/etc/kubernetes/addons/metrics_server/resource-reader.yaml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": null, "owner": null, "regexp": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.8869264-30460434648812/source", "unsafe_writes": null, "validate": null}}, "item": {"file": "resource-reader.yaml", "name": "resource-reader", "type": "clusterrole"}, "md5sum": "47c5dab1fd07b81ff1bbe32763393523", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 430, "src": "/root/.ansible/tmp/ansible-tmp-1602813946.8869264-30460434648812/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:metrics-server created"}

TASK [kubernetes-apps/csi_driver/cinder : include_tasks] ***************************************************************
Friday 16 October 2020  02:05:50 +0000 (0:00:03.235)       0:07:38.163 ********

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Write cacert file] ***************************************
Friday 16 October 2020  02:05:50 +0000 (0:00:00.036)       0:07:38.199 ********

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Write Cinder cloud-config] *******************************
Friday 16 October 2020  02:05:50 +0000 (0:00:00.037)       0:07:38.237 ********

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Get base64 cloud-config] *********************************
Friday 16 October 2020  02:05:50 +0000 (0:00:00.036)       0:07:38.274 ********

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Generate Manifests] **************************************
Friday 16 October 2020  02:05:50 +0000 (0:00:00.036)       0:07:38.310 ********

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Apply Manifests] *****************************************
Friday 16 October 2020  02:05:50 +0000 (0:00:00.077)       0:07:38.388 ********

TASK [kubernetes-apps/persistent_volumes/openstack : Kubernetes Persistent Volumes | Lay down OpenStack Cinder Storage Class template] ***
Friday 16 October 2020  02:05:50 +0000 (0:00:00.085)       0:07:38.473 ********

TASK [kubernetes-apps/persistent_volumes/openstack : Kubernetes Persistent Volumes | Add OpenStack Cinder Storage Class] ***
Friday 16 October 2020  02:05:50 +0000 (0:00:00.035)       0:07:38.509 ********

TASK [kubernetes-apps/persistent_volumes/cinder-csi : Kubernetes Persistent Volumes | Copy Cinder CSI Storage Class template] ***
Friday 16 October 2020  02:05:50 +0000 (0:00:00.045)       0:07:38.555 ********

TASK [kubernetes-apps/persistent_volumes/cinder-csi : Kubernetes Persistent Volumes | Add Cinder CSI Storage Class] ****
Friday 16 October 2020  02:05:50 +0000 (0:00:00.036)       0:07:38.591 ********

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU| gather os specific variables] ***
Friday 16 October 2020  02:05:50 +0000 (0:00:00.037)       0:07:38.628 ********

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Set fact of download url Tesla] ***
Friday 16 October 2020  02:05:51 +0000 (0:00:00.052)       0:07:38.681 ********

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Set fact of download url GTX] ***
Friday 16 October 2020  02:05:51 +0000 (0:00:00.037)       0:07:38.719 ********

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Create addon dir] ***
Friday 16 October 2020  02:05:51 +0000 (0:00:00.041)       0:07:38.760 ********

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Create manifests for nvidia accelerators] ***
Friday 16 October 2020  02:05:51 +0000 (0:00:00.036)       0:07:38.796 ********

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Apply manifests for nvidia accelerators] ***
Friday 16 October 2020  02:05:51 +0000 (0:00:00.047)       0:07:38.844 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_private_key] ***************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.052)       0:07:38.897 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_region_id] *****************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:38.935 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_tenancy_id] ****************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.039)       0:07:38.975 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_user_id] *******************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:39.014 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_user_fingerprint] **********
Friday 16 October 2020  02:05:51 +0000 (0:00:00.039)       0:07:39.053 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_compartment_id] ************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.039)       0:07:39.093 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_vnc_id] ********************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.039)       0:07:39.133 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_subnet1_id] ****************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:39.172 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_subnet2_id] ****************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:39.210 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_security_list_management] ***
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:39.249 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Generate Cloud Provider Configuration] *************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:39.287 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Slurp Configuration] *******************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.041)       0:07:39.328 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Encode Configuration] ******************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.037)       0:07:39.366 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Generate Manifests] ********************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.037)       0:07:39.404 ********

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Apply Manifests] ***********************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.038)       0:07:39.442 ********

PLAY [k8s-cluster] *****************************************************************************************************

TASK [download : prep_download | Set a few facts] **********************************************************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.096)       0:07:39.538 ********

TASK [download : Set image info command for containerd] ****************************************************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.037)       0:07:39.575 ********

TASK [download : Register docker images info] **************************************************************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.037)       0:07:39.612 ********

TASK [download : prep_download | Create staging directory on remote node] **********************************************
Friday 16 October 2020  02:05:51 +0000 (0:00:00.039)       0:07:39.651 ********

TASK [download : prep_download | Create local cache for files and images] **********************************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.044)       0:07:39.696 ********

TASK [download : prep_download | On localhost, check if passwordless root is possible] *********************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.042)       0:07:39.738 ********

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ******************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.047)       0:07:39.786 ********

TASK [download : prep_download | Parse the outputs of the previous commands] *******************************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.042)       0:07:39.828 ********

TASK [download : prep_download | Check that local user is in group or can become root] *********************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.043)       0:07:39.871 ********

TASK [download : include_tasks] ****************************************************************************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.038)       0:07:39.910 ********

TASK [download : download | Get kubeadm binary and list of required images] ********************************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.039)       0:07:39.949 ********

TASK [download : download | Download files / images] *******************************************************************
Friday 16 October 2020  02:05:52 +0000 (0:00:00.036)       0:07:39.986 ********

TASK [download : download | Sync files / images from ansible host to nodes] ********************************************
Friday 16 October 2020  02:05:53 +0000 (0:00:00.758)       0:07:40.745 ********

TASK [kubespray-defaults : Configure defaults] *************************************************************************
Friday 16 October 2020  02:05:53 +0000 (0:00:00.787)       0:07:41.532 ********
ok: [test1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [adduser : User | Create User Group] ******************************************************************************
Friday 16 October 2020  02:05:53 +0000 (0:00:00.059)       0:07:41.592 ********

TASK [adduser : User | Create User] ************************************************************************************
Friday 16 October 2020  02:05:53 +0000 (0:00:00.041)       0:07:41.634 ********

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *********************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.044)       0:07:41.678 ********

TASK [kubernetes/preinstall : check swap] ******************************************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.051)       0:07:41.730 ********

TASK [kubernetes/preinstall : Disable swap] ****************************************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.037)       0:07:41.768 ********

TASK [kubernetes/preinstall : Stop if either kube-master, kube-node or etcd is empty] **********************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.039)       0:07:41.807 ********

TASK [kubernetes/preinstall : Stop if non systemd OS type] *************************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.062)       0:07:41.870 ********

TASK [kubernetes/preinstall : Stop if unknown OS] **********************************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.039)       0:07:41.909 ********

TASK [kubernetes/preinstall : Stop if unknown network plugin] **********************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:41.948 ********

TASK [kubernetes/preinstall : Stop if incompatible network plugin and cloudprovider] ***********************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:41.987 ********

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] ***********************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.043)       0:07:42.030 ********

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
Friday 16 October 2020  02:05:54 +0000 (0:00:00.037)       0:07:42.068 ********

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *******************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.086)       0:07:42.155 ********

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.039)       0:07:42.194 ********

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.040)       0:07:42.234 ********

TASK [kubernetes/preinstall : Guarantee that enough network address space is available for all pods] *******************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.039)       0:07:42.274 ********

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:42.313 ********

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *******************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:42.352 ********

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] ***********************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.039)       0:07:42.391 ********

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when OCI cloud controller is enabled] ************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:42.430 ********

TASK [kubernetes/preinstall : Stop if RBAC and anonymous-auth are not enabled when insecure port is disabled] **********
Friday 16 October 2020  02:05:54 +0000 (0:00:00.039)       0:07:42.469 ********

TASK [kubernetes/preinstall : Stop if kernel version is too low] *******************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.040)       0:07:42.510 ********

TASK [kubernetes/preinstall : Stop if bad hostname] ********************************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.044)       0:07:42.555 ********

TASK [kubernetes/preinstall : check cloud_provider value] **************************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:42.593 ********

TASK [kubernetes/preinstall : Ensure minimum calico version] ***********************************************************
Friday 16 October 2020  02:05:54 +0000 (0:00:00.038)       0:07:42.631 ********

TASK [kubernetes/preinstall : Get current version of calico cluster version] *******************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.039)       0:07:42.671 ********

TASK [kubernetes/preinstall : Check that calico version is enough for upgrade] *****************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.037)       0:07:42.708 ********

TASK [kubernetes/preinstall : Check that cluster_id is set if calico_rr enabled] ***************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:42.747 ********

TASK [kubernetes/preinstall : Check that calico_rr nodes are in k8s-cluster group] *************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:42.786 ********

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.039)       0:07:42.825 ********

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ******************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:42.863 ********

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ****************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.037)       0:07:42.901 ********

TASK [kubernetes/preinstall : Stop if unknown dns mode] ****************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:42.939 ********

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *********************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:42.978 ********

TASK [kubernetes/preinstall : Stop if vault is chose] ******************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.040)       0:07:43.018 ********

TASK [kubernetes/preinstall : Stop if unknown cert_management] *********************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:43.056 ********

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *********************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.040)       0:07:43.096 ********

TASK [kubernetes/preinstall : Stop if kubeadm etcd mode is enabled but experimental control plane is not] **************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:43.135 ********

TASK [kubernetes/preinstall : Pre-upgrade | check if old credential dir exists] ****************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.042)       0:07:43.177 ********

TASK [kubernetes/preinstall : Pre-upgrade | check if new credential dir exists] ****************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.043)       0:07:43.221 ********

TASK [kubernetes/preinstall : Pre-upgrade | move data from old credential dir to new] **********************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.052)       0:07:43.273 ********

TASK [kubernetes/preinstall : set architecture_groups] *****************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:43.312 ********

TASK [kubernetes/preinstall : ansible_architecture_rename] *************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.039)       0:07:43.351 ********

TASK [kubernetes/preinstall : Force binaries directory for Container Linux by CoreOS and Flatcar] **********************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:43.389 ********

TASK [kubernetes/preinstall : check if atomic host] ********************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.039)       0:07:43.429 ********

TASK [kubernetes/preinstall : set is_atomic] ***************************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.044)       0:07:43.473 ********

TASK [kubernetes/preinstall : set kube_cert_group on atomic hosts] *****************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.043)       0:07:43.516 ********

TASK [kubernetes/preinstall : check resolvconf] ************************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:43.555 ********

TASK [kubernetes/preinstall : check systemd-resolved] ******************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.046)       0:07:43.602 ********

TASK [kubernetes/preinstall : set dns facts] ***************************************************************************
Friday 16 October 2020  02:05:55 +0000 (0:00:00.038)       0:07:43.640 ********

TASK [kubernetes/preinstall : check if kubelet is configured] **********************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.041)       0:07:43.682 ********

TASK [kubernetes/preinstall : check if early DNS configuration stage] **************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:43.722 ********

TASK [kubernetes/preinstall : target resolv.conf files] ****************************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.038)       0:07:43.760 ********

TASK [kubernetes/preinstall : target temporary resolvconf cloud init file (Container Linux by CoreOS)] *****************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.042)       0:07:43.803 ********

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ******************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:43.842 ********

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhclient.conf] ****************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:43.881 ********

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.038)       0:07:43.920 ********

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***********************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.038)       0:07:43.959 ********

TASK [kubernetes/preinstall : target dhclient hook file for Red Hat family] ********************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:43.999 ********

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *********************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:44.038 ********

TASK [kubernetes/preinstall : generate search domains to resolvconf] ***************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:44.077 ********

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *********************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.048)       0:07:44.126 ********

TASK [kubernetes/preinstall : generate nameservers to resolvconf] ******************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.038)       0:07:44.164 ********

TASK [kubernetes/preinstall : gather os specific variables] ************************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:44.204 ********

TASK [kubernetes/preinstall : override kube_proxy_mode to ipvs if kube_proxy_remove is set, as ipvs won't require kube-proxy cleanup when kube-proxy daemonset gets deleted] ***
Friday 16 October 2020  02:05:56 +0000 (0:00:00.051)       0:07:44.255 ********

TASK [kubernetes/preinstall : set etcd vars if using kubeadm mode] *****************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.040)       0:07:44.295 ********

TASK [kubernetes/preinstall : check /usr readonly] *********************************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.040)       0:07:44.335 ********

TASK [kubernetes/preinstall : set alternate flexvolume path] ***********************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.038)       0:07:44.373 ********

TASK [kubernetes/preinstall : Create kubernetes directories] ***********************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.039)       0:07:44.413 ********

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] **************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.098)       0:07:44.512 ********

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.037)       0:07:44.549 ********

TASK [kubernetes/preinstall : Create cni directories] ******************************************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.038)       0:07:44.587 ********

TASK [kubernetes/preinstall : Create local volume provisioner directories] *********************************************
Friday 16 October 2020  02:05:56 +0000 (0:00:00.062)       0:07:44.650 ********

TASK [kubernetes/preinstall : create temporary resolveconf cloud init file] ********************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.048)       0:07:44.698 ********

TASK [kubernetes/preinstall : Add domain/search/nameservers/options to resolv.conf] ************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:44.737 ********

TASK [kubernetes/preinstall : Remove search/domain/nameserver options before block] ************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.037)       0:07:44.775 ********

TASK [kubernetes/preinstall : Remove search/domain/nameserver options after block] *************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.078)       0:07:44.853 ********

TASK [kubernetes/preinstall : get temporary resolveconf cloud init file content] ***************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.078)       0:07:44.932 ********

TASK [kubernetes/preinstall : persist resolvconf cloud init file] ******************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:44.970 ********

TASK [kubernetes/preinstall : Write resolved.conf] *********************************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.039)       0:07:45.010 ********

TASK [kubernetes/preinstall : Update package management cache (zypper) - SUSE] *****************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.042)       0:07:45.052 ********

TASK [kubernetes/preinstall : Update package management cache (APT)] ***************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.044)       0:07:45.097 ********

TASK [kubernetes/preinstall : Remove legacy docker repo file] **********************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.135 ********

TASK [kubernetes/preinstall : Install python-dnf for latest RedHat versions] *******************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.174 ********

TASK [kubernetes/preinstall : Install python3-dnf for latest RedHat versions] ******************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.043)       0:07:45.217 ********

TASK [kubernetes/preinstall : Install epel-release on RedHat/CentOS] ***************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.039)       0:07:45.256 ********

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] *******************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.040)       0:07:45.297 ********

TASK [kubernetes/preinstall : Install packages requirements] ***********************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.335 ********

TASK [kubernetes/preinstall : Install ipvsadm for ClearLinux] **********************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.039)       0:07:45.375 ********

TASK [kubernetes/preinstall : Confirm selinux deployed] ****************************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.041)       0:07:45.416 ********

TASK [kubernetes/preinstall : Set selinux policy] **********************************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.454 ********

TASK [kubernetes/preinstall : Disable IPv6 DNS lookup] *****************************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.493 ********

TASK [kubernetes/preinstall : Stat sysctl file configuration] **********************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.532 ********

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ****************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.039)       0:07:45.571 ********

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.038)       0:07:45.610 ********

TASK [kubernetes/preinstall : Enable ip forwarding] ********************************************************************
Friday 16 October 2020  02:05:57 +0000 (0:00:00.039)       0:07:45.649 ********

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] **********************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.038)       0:07:45.688 ********

TASK [kubernetes/preinstall : Hosts | populate kubernetes loadbalancer address into hosts file] ************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.038)       0:07:45.726 ********

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *****************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.038)       0:07:45.765 ********

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] **************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.037)       0:07:45.802 ********

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *********************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.048)       0:07:45.851 ********

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.058)       0:07:45.909 ********

TASK [kubernetes/preinstall : Update facts] ****************************************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.062)       0:07:45.972 ********

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *******************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.038)       0:07:46.011 ********

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.040)       0:07:46.052 ********

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (RH-only)] **************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.040)       0:07:46.093 ********

TASK [kubernetes/preinstall : Remove kubespray specific config from dhclient config] ***********************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.039)       0:07:46.132 ********

TASK [kubernetes/preinstall : Remove kubespray specific dhclient hook] *************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.040)       0:07:46.173 ********

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] ***********************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.040)       0:07:46.213 ********

TASK [kubernetes/preinstall : install growpart] ************************************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.038)       0:07:46.252 ********

TASK [kubernetes/preinstall : check if growpart needs to be run] *******************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.039)       0:07:46.292 ********

TASK [kubernetes/preinstall : check fs type] ***************************************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.039)       0:07:46.331 ********

TASK [kubernetes/preinstall : run growpart] ****************************************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.040)       0:07:46.372 ********

TASK [kubernetes/preinstall : run xfs_growfs] **************************************************************************
Friday 16 October 2020  02:05:58 +0000 (0:00:00.038)       0:07:46.411 ********

PLAY RECAP *************************************************************************************************************
localhost                  : ok=1    changed=0    unreachable=0    failed=0
test1                      : ok=720  changed=144  unreachable=0    failed=0

Friday 16 October 2020  02:05:58 +0000 (0:00:00.021)       0:07:46.432 ********
===============================================================================
container-engine/docker : ensure docker packages are installed ------------------------------------------------- 35.48s
kubernetes/master : kubeadm | Initialize first master ---------------------------------------------------------- 20.76s
download : download_container | Download image if required ----------------------------------------------------- 14.35s
download : download_container | Download image if required ----------------------------------------------------- 12.94s
download : download_file | Download item ----------------------------------------------------------------------- 11.30s
etcd : wait for etcd up ---------------------------------------------------------------------------------------- 10.37s
download : download_container | Download image if required ------------------------------------------------------ 9.92s
download : download_file | Download item ------------------------------------------------------------------------ 9.67s
etcd : Configure | Wait for etcd cluster to be healthy ---------------------------------------------------------- 9.53s
download : download_container | Download image if required ------------------------------------------------------ 9.41s
kubernetes/preinstall : Install packages requirements ----------------------------------------------------------- 9.17s
download : download_file | Download item ------------------------------------------------------------------------ 9.03s
download : download_container | Download image if required ------------------------------------------------------ 8.70s
download : download_container | Download image if required ------------------------------------------------------ 7.82s
download : download_container | Download image if required ------------------------------------------------------ 6.83s
download : download_container | Download image if required ------------------------------------------------------ 6.68s
download : download_container | Download image if required ------------------------------------------------------ 6.27s
download : download_container | Download image if required ------------------------------------------------------ 6.13s
download : download_file | Download item ------------------------------------------------------------------------ 6.00s
download : download_container | Download image if required ------------------------------------------------------ 5.56s
➜  kubespray git:(release-2.12)